{"ast":null,"code":"import{ZERO_PERCENT,ONE_HUNDRED_PERCENT}from'./../constants/index';import{currencyEquals}from'@uniswap/sdk';// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(tradeA,tradeB){var minimumDelta=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ZERO_PERCENT;if(tradeA&&!tradeB)return false;if(tradeB&&!tradeA)return true;if(!tradeA||!tradeB)return undefined;if(tradeA.tradeType!==tradeB.tradeType||!currencyEquals(tradeA.inputAmount.currency,tradeB.inputAmount.currency)||!currencyEquals(tradeB.outputAmount.currency,tradeB.outputAmount.currency)){throw new Error('Trades are not comparable');}if(minimumDelta.equalTo(ZERO_PERCENT)){return tradeA.executionPrice.lessThan(tradeB.executionPrice);}else{return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice);}}","map":{"version":3,"names":["ZERO_PERCENT","ONE_HUNDRED_PERCENT","currencyEquals","isTradeBetter","tradeA","tradeB","minimumDelta","undefined","tradeType","inputAmount","currency","outputAmount","Error","equalTo","executionPrice","lessThan","raw","multiply","add"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/utils/trades.ts"],"sourcesContent":["import { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from './../constants/index';\nimport { Trade, Percent, currencyEquals } from '@uniswap/sdk';\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT\n): boolean | undefined {\n  if (tradeA && !tradeB) return false;\n  if (tradeB && !tradeA) return true;\n  if (!tradeA || !tradeB) return undefined;\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable');\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice);\n  } else {\n    return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice);\n  }\n}\n"],"mappings":"AAAA,OAASA,YAAT,CAAuBC,mBAAvB,KAAkD,sBAAlD,CACA,OAAyBC,cAAzB,KAA+C,cAA/C,CAEA;AACA,MAAO,SAASC,cAAT,CACLC,MADK,CAELC,MAFK,CAIgB,IADrBC,aACqB,2DADGN,YACH,CACrB,GAAII,MAAM,EAAI,CAACC,MAAf,CAAuB,MAAO,MAAP,CACvB,GAAIA,MAAM,EAAI,CAACD,MAAf,CAAuB,MAAO,KAAP,CACvB,GAAI,CAACA,MAAD,EAAW,CAACC,MAAhB,CAAwB,MAAOE,UAAP,CAExB,GACEH,MAAM,CAACI,SAAP,GAAqBH,MAAM,CAACG,SAA5B,EACA,CAACN,cAAc,CAACE,MAAM,CAACK,WAAP,CAAmBC,QAApB,CAA8BL,MAAM,CAACI,WAAP,CAAmBC,QAAjD,CADf,EAEA,CAACR,cAAc,CAACG,MAAM,CAACM,YAAP,CAAoBD,QAArB,CAA+BL,MAAM,CAACM,YAAP,CAAoBD,QAAnD,CAHjB,CAIE,CACA,KAAM,IAAIE,MAAJ,CAAU,2BAAV,CAAN,CACD,CAED,GAAIN,YAAY,CAACO,OAAb,CAAqBb,YAArB,CAAJ,CAAwC,CACtC,MAAOI,OAAM,CAACU,cAAP,CAAsBC,QAAtB,CAA+BV,MAAM,CAACS,cAAtC,CAAP,CACD,CAFD,IAEO,CACL,MAAOV,OAAM,CAACU,cAAP,CAAsBE,GAAtB,CAA0BC,QAA1B,CAAmCX,YAAY,CAACY,GAAb,CAAiBjB,mBAAjB,CAAnC,EAA0Ec,QAA1E,CAAmFV,MAAM,CAACS,cAA1F,CAAP,CACD,CACF"},"metadata":{},"sourceType":"module"}