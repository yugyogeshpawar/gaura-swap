{"ast":null,"code":"import * as windowMetadata from \"@walletconnect/window-metadata\";\nimport * as windowGetters from \"@walletconnect/window-getters\";\nimport { detect } from \"detect-browser\";\nexport function detectEnv(userAgent) {\n  return detect(userAgent);\n}\nexport function detectOS() {\n  var env = detectEnv();\n  return env && env.os ? env.os : undefined;\n}\nexport function isAndroid() {\n  var os = detectOS();\n  return os ? os.toLowerCase().includes(\"android\") : false;\n}\nexport function isIOS() {\n  var os = detectOS();\n  return os ? os.toLowerCase().includes(\"ios\") || os.toLowerCase().includes(\"mac\") && navigator.maxTouchPoints > 1 : false;\n}\nexport function isMobile() {\n  var os = detectOS();\n  return os ? isAndroid() || isIOS() : false;\n}\nexport function isNode() {\n  var env = detectEnv();\n  var result = env && env.name ? env.name.toLowerCase() === \"node\" : false;\n  return result;\n}\nexport function isBrowser() {\n  var result = !isNode() && !!getNavigator();\n  return result;\n}\nexport var getFromWindow = windowGetters.getFromWindow;\nexport var getFromWindowOrThrow = windowGetters.getFromWindowOrThrow;\nexport var getDocumentOrThrow = windowGetters.getDocumentOrThrow;\nexport var getDocument = windowGetters.getDocument;\nexport var getNavigatorOrThrow = windowGetters.getNavigatorOrThrow;\nexport var getNavigator = windowGetters.getNavigator;\nexport var getLocationOrThrow = windowGetters.getLocationOrThrow;\nexport var getLocation = windowGetters.getLocation;\nexport var getCryptoOrThrow = windowGetters.getCryptoOrThrow;\nexport var getCrypto = windowGetters.getCrypto;\nexport var getLocalStorageOrThrow = windowGetters.getLocalStorageOrThrow;\nexport var getLocalStorage = windowGetters.getLocalStorage;\nexport function getClientMeta() {\n  return windowMetadata.getWindowMetadata();\n}","map":{"version":3,"mappings":"AAEA,OAAO,KAAKA,cAAZ,MAAgC,gCAAhC;AACA,OAAO,KAAKC,aAAZ,MAA+B,+BAA/B;AACA,SACEC,MADF,QAOO,gBAPP;AASA,OAAM,SAAUC,SAAV,CACJC,SADI,EACc;EAElB,OAAOF,MAAM,CAACE,SAAD,CAAb;AACD;AAED,OAAM,SAAUC,QAAV,GAAkB;EACtB,IAAMC,GAAG,GAAGH,SAAS,EAArB;EACA,OAAOG,GAAG,IAAIA,GAAG,CAACC,EAAX,GAAgBD,GAAG,CAACC,EAApB,GAAyBC,SAAhC;AACD;AAED,OAAM,SAAUC,SAAV,GAAmB;EACvB,IAAMF,EAAE,GAAGF,QAAQ,EAAnB;EACA,OAAOE,EAAE,GAAGA,EAAE,CAACG,WAAH,GAAiBC,QAAjB,CAA0B,SAA1B,CAAH,GAA0C,KAAnD;AACD;AAED,OAAM,SAAUC,KAAV,GAAe;EACnB,IAAML,EAAE,GAAGF,QAAQ,EAAnB;EACA,OAAOE,EAAE,GACLA,EAAE,CAACG,WAAH,GAAiBC,QAAjB,CAA0B,KAA1B,KACGJ,EAAE,CAACG,WAAH,GAAiBC,QAAjB,CAA0B,KAA1B,KAAoCE,SAAS,CAACC,cAAV,GAA2B,CAF7D,GAGL,KAHJ;AAID;AAED,OAAM,SAAUC,QAAV,GAAkB;EACtB,IAAMR,EAAE,GAAGF,QAAQ,EAAnB;EACA,OAAOE,EAAE,GAAGE,SAAS,MAAMG,KAAK,EAAvB,GAA4B,KAArC;AACD;AAED,OAAM,SAAUI,MAAV,GAAgB;EACpB,IAAMV,GAAG,GAAGH,SAAS,EAArB;EACA,IAAMc,MAAM,GAAGX,GAAG,IAAIA,GAAG,CAACY,IAAX,GAAkBZ,GAAG,CAACY,IAAJ,CAASR,WAAT,OAA2B,MAA7C,GAAsD,KAArE;EACA,OAAOO,MAAP;AACD;AAED,OAAM,SAAUE,SAAV,GAAmB;EACvB,IAAMF,MAAM,GAAG,CAACD,MAAM,EAAP,IAAa,CAAC,CAACI,YAAY,EAA1C;EACA,OAAOH,MAAP;AACD;AAED,OAAO,IAAMI,aAAa,GAAGpB,aAAa,CAACoB,aAApC;AAEP,OAAO,IAAMC,oBAAoB,GAAGrB,aAAa,CAACqB,oBAA3C;AAEP,OAAO,IAAMC,kBAAkB,GAAGtB,aAAa,CAACsB,kBAAzC;AAEP,OAAO,IAAMC,WAAW,GAAGvB,aAAa,CAACuB,WAAlC;AAEP,OAAO,IAAMC,mBAAmB,GAAGxB,aAAa,CAACwB,mBAA1C;AAEP,OAAO,IAAML,YAAY,GAAGnB,aAAa,CAACmB,YAAnC;AAEP,OAAO,IAAMM,kBAAkB,GAAGzB,aAAa,CAACyB,kBAAzC;AAEP,OAAO,IAAMC,WAAW,GAAG1B,aAAa,CAAC0B,WAAlC;AAEP,OAAO,IAAMC,gBAAgB,GAAG3B,aAAa,CAAC2B,gBAAvC;AAEP,OAAO,IAAMC,SAAS,GAAG5B,aAAa,CAAC4B,SAAhC;AAEP,OAAO,IAAMC,sBAAsB,GAAG7B,aAAa,CAAC6B,sBAA7C;AAEP,OAAO,IAAMC,eAAe,GAAG9B,aAAa,CAAC8B,eAAtC;AAEP,OAAM,SAAUC,aAAV,GAAuB;EAC3B,OAAOhC,cAAc,CAACiC,iBAAf,EAAP;AACD","names":["windowMetadata","windowGetters","detect","detectEnv","userAgent","detectOS","env","os","undefined","isAndroid","toLowerCase","includes","isIOS","navigator","maxTouchPoints","isMobile","isNode","result","name","isBrowser","getNavigator","getFromWindow","getFromWindowOrThrow","getDocumentOrThrow","getDocument","getNavigatorOrThrow","getLocationOrThrow","getLocation","getCryptoOrThrow","getCrypto","getLocalStorageOrThrow","getLocalStorage","getClientMeta","getWindowMetadata"],"sourceRoot":"","sources":["../../src/browser.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}