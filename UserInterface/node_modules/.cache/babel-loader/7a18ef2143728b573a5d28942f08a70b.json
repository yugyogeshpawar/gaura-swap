{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { addTransaction, checkedTransaction, clearAllTransactions, finalizeTransaction } from './actions';\n\nconst now = () => new Date().getTime();\n\nexport const initialState = {};\nexport default createReducer(initialState, builder => builder.addCase(addTransaction, (transactions, _ref) => {\n  var _transactions$chainId, _transactions$chainId2;\n\n  let {\n    payload: {\n      chainId,\n      from,\n      hash,\n      approval,\n      summary,\n      claim\n    }\n  } = _ref;\n\n  if ((_transactions$chainId = transactions[chainId]) === null || _transactions$chainId === void 0 ? void 0 : _transactions$chainId[hash]) {\n    throw Error('Attempted to add existing transaction.');\n  }\n\n  const txs = (_transactions$chainId2 = transactions[chainId]) !== null && _transactions$chainId2 !== void 0 ? _transactions$chainId2 : {};\n  txs[hash] = {\n    hash,\n    approval,\n    summary,\n    claim,\n    from,\n    addedTime: now()\n  };\n  transactions[chainId] = txs;\n}).addCase(clearAllTransactions, (transactions, _ref2) => {\n  let {\n    payload: {\n      chainId\n    }\n  } = _ref2;\n  if (!transactions[chainId]) return;\n  transactions[chainId] = {};\n}).addCase(checkedTransaction, (transactions, _ref3) => {\n  var _transactions$chainId3;\n\n  let {\n    payload: {\n      chainId,\n      hash,\n      blockNumber\n    }\n  } = _ref3;\n  const tx = (_transactions$chainId3 = transactions[chainId]) === null || _transactions$chainId3 === void 0 ? void 0 : _transactions$chainId3[hash];\n\n  if (!tx) {\n    return;\n  }\n\n  if (!tx.lastCheckedBlockNumber) {\n    tx.lastCheckedBlockNumber = blockNumber;\n  } else {\n    tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber);\n  }\n}).addCase(finalizeTransaction, (transactions, _ref4) => {\n  var _transactions$chainId4;\n\n  let {\n    payload: {\n      hash,\n      chainId,\n      receipt\n    }\n  } = _ref4;\n  const tx = (_transactions$chainId4 = transactions[chainId]) === null || _transactions$chainId4 === void 0 ? void 0 : _transactions$chainId4[hash];\n\n  if (!tx) {\n    return;\n  }\n\n  tx.receipt = receipt;\n  tx.confirmedTime = now();\n}));","map":{"version":3,"names":["createReducer","addTransaction","checkedTransaction","clearAllTransactions","finalizeTransaction","now","Date","getTime","initialState","builder","addCase","transactions","payload","chainId","from","hash","approval","summary","claim","Error","txs","addedTime","blockNumber","tx","lastCheckedBlockNumber","Math","max","receipt","confirmedTime"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/state/transactions/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions';\n\nconst now = () => new Date().getTime();\n\nexport interface TransactionDetails {\n  hash: string;\n  approval?: { tokenAddress: string; spender: string };\n  summary?: string;\n  claim?: { recipient: string };\n  receipt?: SerializableTransactionReceipt;\n  lastCheckedBlockNumber?: number;\n  addedTime: number;\n  confirmedTime?: number;\n  from: string;\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails;\n  };\n}\n\nexport const initialState: TransactionState = {};\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.');\n      }\n      const txs = transactions[chainId] ?? {};\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() };\n      transactions[chainId] = txs;\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return;\n      transactions[chainId] = {};\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash];\n      if (!tx) {\n        return;\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber;\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber);\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash];\n      if (!tx) {\n        return;\n      }\n      tx.receipt = receipt;\n      tx.confirmedTime = now();\n    })\n);\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SACEC,cADF,EAEEC,kBAFF,EAGEC,oBAHF,EAIEC,mBAJF,QAMO,WANP;;AAQA,MAAMC,GAAG,GAAG,MAAM,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;;AAoBA,OAAO,MAAMC,YAA8B,GAAG,EAAvC;AAEP,eAAeR,aAAa,CAACQ,YAAD,EAAgBC,OAAD,IACzCA,OAAO,CACJC,OADH,CACWT,cADX,EAC2B,CAACU,YAAD,WAAkF;EAAA;;EAAA,IAAnE;IAAEC,OAAO,EAAE;MAAEC,OAAF;MAAWC,IAAX;MAAiBC,IAAjB;MAAuBC,QAAvB;MAAiCC,OAAjC;MAA0CC;IAA1C;EAAX,CAAmE;;EACzG,6BAAIP,YAAY,CAACE,OAAD,CAAhB,0DAAI,sBAAwBE,IAAxB,CAAJ,EAAmC;IACjC,MAAMI,KAAK,CAAC,wCAAD,CAAX;EACD;;EACD,MAAMC,GAAG,6BAAGT,YAAY,CAACE,OAAD,CAAf,2EAA4B,EAArC;EACAO,GAAG,CAACL,IAAD,CAAH,GAAY;IAAEA,IAAF;IAAQC,QAAR;IAAkBC,OAAlB;IAA2BC,KAA3B;IAAkCJ,IAAlC;IAAwCO,SAAS,EAAEhB,GAAG;EAAtD,CAAZ;EACAM,YAAY,CAACE,OAAD,CAAZ,GAAwBO,GAAxB;AACD,CARH,EASGV,OATH,CASWP,oBATX,EASiC,CAACQ,YAAD,YAA4C;EAAA,IAA7B;IAAEC,OAAO,EAAE;MAAEC;IAAF;EAAX,CAA6B;EACzE,IAAI,CAACF,YAAY,CAACE,OAAD,CAAjB,EAA4B;EAC5BF,YAAY,CAACE,OAAD,CAAZ,GAAwB,EAAxB;AACD,CAZH,EAaGH,OAbH,CAaWR,kBAbX,EAa+B,CAACS,YAAD,YAA+D;EAAA;;EAAA,IAAhD;IAAEC,OAAO,EAAE;MAAEC,OAAF;MAAWE,IAAX;MAAiBO;IAAjB;EAAX,CAAgD;EAC1F,MAAMC,EAAE,6BAAGZ,YAAY,CAACE,OAAD,CAAf,2DAAG,uBAAwBE,IAAxB,CAAX;;EACA,IAAI,CAACQ,EAAL,EAAS;IACP;EACD;;EACD,IAAI,CAACA,EAAE,CAACC,sBAAR,EAAgC;IAC9BD,EAAE,CAACC,sBAAH,GAA4BF,WAA5B;EACD,CAFD,MAEO;IACLC,EAAE,CAACC,sBAAH,GAA4BC,IAAI,CAACC,GAAL,CAASJ,WAAT,EAAsBC,EAAE,CAACC,sBAAzB,CAA5B;EACD;AACF,CAvBH,EAwBGd,OAxBH,CAwBWN,mBAxBX,EAwBgC,CAACO,YAAD,YAA2D;EAAA;;EAAA,IAA5C;IAAEC,OAAO,EAAE;MAAEG,IAAF;MAAQF,OAAR;MAAiBc;IAAjB;EAAX,CAA4C;EACvF,MAAMJ,EAAE,6BAAGZ,YAAY,CAACE,OAAD,CAAf,2DAAG,uBAAwBE,IAAxB,CAAX;;EACA,IAAI,CAACQ,EAAL,EAAS;IACP;EACD;;EACDA,EAAE,CAACI,OAAH,GAAaA,OAAb;EACAJ,EAAE,CAACK,aAAH,GAAmBvB,GAAG,EAAtB;AACD,CA/BH,CAD0B,CAA5B"},"metadata":{},"sourceType":"module"}