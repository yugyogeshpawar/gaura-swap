{"ast":null,"code":"import{abi as STAKING_REWARDS_ABI}from'@uniswap/liquidity-staker/build/StakingRewards.json';import{ChainId,WETH}from'@uniswap/sdk';import{abi as IUniswapV2PairABI}from'@uniswap/v2-core/build/IUniswapV2Pair.json';import{useMemo}from'react';import{ARGENT_WALLET_DETECTOR_ABI,ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS}from'../constants/abis/argent-wallet-detector';import ENS_PUBLIC_RESOLVER_ABI from'../constants/abis/ens-public-resolver.json';import ENS_ABI from'../constants/abis/ens-registrar.json';import{ERC20_BYTES32_ABI}from'../constants/abis/erc20';import ERC20_ABI from'../constants/abis/erc20.json';import WETH_ABI from'../constants/abis/weth.json';import{MULTICALL_ABI,MULTICALL_NETWORKS}from'../constants/multicall';import{getContract}from'../utils';import{useActiveWeb3React}from'./index';// returns null on errors\nfunction useContract(address,ABI){var withSignerIfPossible=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;var _useActiveWeb3React=useActiveWeb3React(),library=_useActiveWeb3React.library,account=_useActiveWeb3React.account;return useMemo(function(){if(!address||!ABI||!library)return null;try{return getContract(address,ABI,library,withSignerIfPossible&&account?account:undefined);}catch(error){console.error('Failed to get contract',error);return null;}},[address,ABI,library,withSignerIfPossible,account]);}export function useTokenContract(tokenAddress,withSignerIfPossible){return useContract(tokenAddress,ERC20_ABI,withSignerIfPossible);}export function useWETHContract(withSignerIfPossible){var _useActiveWeb3React2=useActiveWeb3React(),chainId=_useActiveWeb3React2.chainId;return useContract(chainId?WETH[chainId].address:undefined,WETH_ABI,withSignerIfPossible);}export function useArgentWalletDetectorContract(){var _useActiveWeb3React3=useActiveWeb3React(),chainId=_useActiveWeb3React3.chainId;return useContract(chainId===ChainId.MAINNET?ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS:undefined,ARGENT_WALLET_DETECTOR_ABI,false);}export function useENSRegistrarContract(withSignerIfPossible){var _useActiveWeb3React4=useActiveWeb3React(),chainId=_useActiveWeb3React4.chainId;var address;if(chainId){switch(chainId){case ChainId.MAINNET:case ChainId.GÖRLI:case ChainId.ROPSTEN:case ChainId.RINKEBY:address='0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e';break;}}return useContract(address,ENS_ABI,withSignerIfPossible);}export function useENSResolverContract(address,withSignerIfPossible){return useContract(address,ENS_PUBLIC_RESOLVER_ABI,withSignerIfPossible);}export function useBytes32TokenContract(tokenAddress,withSignerIfPossible){return useContract(tokenAddress,ERC20_BYTES32_ABI,withSignerIfPossible);}export function usePairContract(pairAddress,withSignerIfPossible){return useContract(pairAddress,IUniswapV2PairABI,withSignerIfPossible);}export function useMulticallContract(){var _useActiveWeb3React5=useActiveWeb3React(),chainId=_useActiveWeb3React5.chainId;return useContract(chainId&&MULTICALL_NETWORKS[chainId],MULTICALL_ABI,false);}export function useStakingContract(stakingAddress,withSignerIfPossible){return useContract(stakingAddress,STAKING_REWARDS_ABI,withSignerIfPossible);}","map":{"version":3,"names":["abi","STAKING_REWARDS_ABI","ChainId","WETH","IUniswapV2PairABI","useMemo","ARGENT_WALLET_DETECTOR_ABI","ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS","ENS_PUBLIC_RESOLVER_ABI","ENS_ABI","ERC20_BYTES32_ABI","ERC20_ABI","WETH_ABI","MULTICALL_ABI","MULTICALL_NETWORKS","getContract","useActiveWeb3React","useContract","address","ABI","withSignerIfPossible","library","account","undefined","error","console","useTokenContract","tokenAddress","useWETHContract","chainId","useArgentWalletDetectorContract","MAINNET","useENSRegistrarContract","GÖRLI","ROPSTEN","RINKEBY","useENSResolverContract","useBytes32TokenContract","usePairContract","pairAddress","useMulticallContract","useStakingContract","stakingAddress"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/hooks/useContract.ts"],"sourcesContent":["import { Contract } from '@ethersproject/contracts';\nimport { abi as STAKING_REWARDS_ABI } from '@uniswap/liquidity-staker/build/StakingRewards.json';\nimport { ChainId, WETH } from '@uniswap/sdk';\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { useMemo } from 'react';\nimport {\n  ARGENT_WALLET_DETECTOR_ABI,\n  ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS,\n} from '../constants/abis/argent-wallet-detector';\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json';\nimport ENS_ABI from '../constants/abis/ens-registrar.json';\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20';\nimport ERC20_ABI from '../constants/abis/erc20.json';\nimport WETH_ABI from '../constants/abis/weth.json';\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall';\nimport { getContract } from '../utils';\nimport { useActiveWeb3React } from './index';\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React();\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible);\n}\n\nexport function useArgentWalletDetectorContract(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    chainId === ChainId.MAINNET ? ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS : undefined,\n    ARGENT_WALLET_DETECTOR_ABI,\n    false\n  );\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  let address: string | undefined;\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.GÖRLI:\n      case ChainId.ROPSTEN:\n      case ChainId.RINKEBY:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e';\n        break;\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible);\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible);\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false);\n}\n\nexport function useStakingContract(stakingAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(stakingAddress, STAKING_REWARDS_ABI, withSignerIfPossible);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}