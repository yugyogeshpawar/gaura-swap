{"ast":null,"code":"import { MaxUint256 } from '@ethersproject/constants';\nimport { TokenAmount, ETHER } from '@uniswap/sdk';\nimport { useCallback, useMemo } from 'react';\nimport { ROUTER_ADDRESS } from '../constants';\nimport { useTokenAllowance } from '../data/Allowances';\nimport { Field } from '../state/swap/actions';\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks';\nimport { computeSlippageAdjustedAmounts } from '../utils/prices';\nimport { calculateGasMargin } from '../utils';\nimport { useTokenContract } from './useContract';\nimport { useActiveWeb3React } from './index';\nexport let ApprovalState; // returns a variable indicating the state of the approval and a function which approves if necessary or early returns\n\n(function (ApprovalState) {\n  ApprovalState[ApprovalState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  ApprovalState[ApprovalState[\"NOT_APPROVED\"] = 1] = \"NOT_APPROVED\";\n  ApprovalState[ApprovalState[\"PENDING\"] = 2] = \"PENDING\";\n  ApprovalState[ApprovalState[\"APPROVED\"] = 3] = \"APPROVED\";\n})(ApprovalState || (ApprovalState = {}));\n\nexport function useApproveCallback(amountToApprove, spender) {\n  const {\n    account\n  } = useActiveWeb3React();\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined;\n  const currentAllowance = useTokenAllowance(token, account !== null && account !== void 0 ? account : undefined, spender);\n  const pendingApproval = useHasPendingApproval(token === null || token === void 0 ? void 0 : token.address, spender); // check the current approval status\n\n  const approvalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN;\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED; // we might not have enough data to know whether or not we need to approve\n\n    if (!currentAllowance) return ApprovalState.UNKNOWN; // amountToApprove will be defined if currentAllowance is\n\n    return currentAllowance.lessThan(amountToApprove) ? pendingApproval ? ApprovalState.PENDING : ApprovalState.NOT_APPROVED : ApprovalState.APPROVED;\n  }, [amountToApprove, currentAllowance, pendingApproval, spender]);\n  const tokenContract = useTokenContract(token === null || token === void 0 ? void 0 : token.address);\n  const addTransaction = useTransactionAdder();\n  const approve = useCallback(async () => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n\n    if (!token) {\n      console.error('no token');\n      return;\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null');\n      return;\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve');\n      return;\n    }\n\n    if (!spender) {\n      console.error('no spender');\n      return;\n    }\n\n    let useExact = false;\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true;\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString());\n    });\n    return tokenContract.approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n      gasLimit: calculateGasMargin(estimatedGas)\n    }).then(response => {\n      addTransaction(response, {\n        summary: 'Approve ' + amountToApprove.currency.symbol,\n        approval: {\n          tokenAddress: token.address,\n          spender: spender\n        }\n      });\n    }).catch(error => {\n      console.debug('Failed to approve token', error);\n      throw error;\n    });\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction]);\n  return [approvalState, approve];\n} // wraps useApproveCallback in the context of a swap\n\nexport function useApproveCallbackFromTrade(trade) {\n  let allowedSlippage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const amountToApprove = useMemo(() => trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined, [trade, allowedSlippage]);\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS);\n}","map":{"version":3,"names":["MaxUint256","TokenAmount","ETHER","useCallback","useMemo","ROUTER_ADDRESS","useTokenAllowance","Field","useTransactionAdder","useHasPendingApproval","computeSlippageAdjustedAmounts","calculateGasMargin","useTokenContract","useActiveWeb3React","ApprovalState","useApproveCallback","amountToApprove","spender","account","token","undefined","currentAllowance","pendingApproval","address","approvalState","UNKNOWN","currency","APPROVED","lessThan","PENDING","NOT_APPROVED","tokenContract","addTransaction","approve","console","error","useExact","estimatedGas","estimateGas","catch","raw","toString","gasLimit","then","response","summary","symbol","approval","tokenAddress","debug","useApproveCallbackFromTrade","trade","allowedSlippage","INPUT"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/hooks/useApproveCallback.ts"],"sourcesContent":["import { MaxUint256 } from '@ethersproject/constants';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@uniswap/sdk';\nimport { useCallback, useMemo } from 'react';\nimport { ROUTER_ADDRESS } from '../constants';\nimport { useTokenAllowance } from '../data/Allowances';\nimport { Field } from '../state/swap/actions';\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks';\nimport { computeSlippageAdjustedAmounts } from '../utils/prices';\nimport { calculateGasMargin } from '../utils';\nimport { useTokenContract } from './useContract';\nimport { useActiveWeb3React } from './index';\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React();\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined;\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender);\n  const pendingApproval = useHasPendingApproval(token?.address, spender);\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN;\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED;\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED;\n  }, [amountToApprove, currentAllowance, pendingApproval, spender]);\n\n  const tokenContract = useTokenContract(token?.address);\n  const addTransaction = useTransactionAdder();\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n    if (!token) {\n      console.error('no token');\n      return;\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null');\n      return;\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve');\n      return;\n    }\n\n    if (!spender) {\n      console.error('no spender');\n      return;\n    }\n\n    let useExact = false;\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true;\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString());\n    });\n\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: 'Approve ' + amountToApprove.currency.symbol,\n          approval: { tokenAddress: token.address, spender: spender },\n        });\n      })\n      .catch((error: Error) => {\n        console.debug('Failed to approve token', error);\n        throw error;\n      });\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction]);\n\n  return [approvalState, approve];\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage]\n  );\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}