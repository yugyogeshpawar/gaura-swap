{"ast":null,"code":"import CID from'cids';import{getCodec,rmPrefix}from'multicodec';import{decode,toB58String}from'multihashes';export function hexToUint8Array(hex){hex=hex.startsWith('0x')?hex.substr(2):hex;if(hex.length%2!==0)throw new Error('hex must have length that is multiple of 2');var arr=new Uint8Array(hex.length/2);for(var i=0;i<arr.length;i++){arr[i]=parseInt(hex.substr(i*2,2),16);}return arr;}var UTF_8_DECODER=new TextDecoder();/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */export default function contenthashToUri(contenthash){var buff=hexToUint8Array(contenthash);var codec=getCodec(buff);// the typing is wrong for @types/multicodec\nswitch(codec){case'ipfs-ns':{var data=rmPrefix(buff);var cid=new CID(data);return\"ipfs://\".concat(toB58String(cid.multihash));}case'ipns-ns':{var _data=rmPrefix(buff);var _cid=new CID(_data);var multihash=decode(_cid.multihash);if(multihash.name==='identity'){return\"ipns://\".concat(UTF_8_DECODER.decode(multihash.digest).trim());}else{return\"ipns://\".concat(toB58String(_cid.multihash));}}default:throw new Error(\"Unrecognized codec: \".concat(codec));}}","map":{"version":3,"names":["CID","getCodec","rmPrefix","decode","toB58String","hexToUint8Array","hex","startsWith","substr","length","Error","arr","Uint8Array","i","parseInt","UTF_8_DECODER","TextDecoder","contenthashToUri","contenthash","buff","codec","data","cid","multihash","name","digest","trim"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/utils/contenthashToUri.ts"],"sourcesContent":["import CID from 'cids';\nimport { getCodec, rmPrefix } from 'multicodec';\nimport { decode, toB58String } from 'multihashes';\n\nexport function hexToUint8Array(hex: string): Uint8Array {\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex;\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2');\n  const arr = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16);\n  }\n  return arr;\n}\n\nconst UTF_8_DECODER = new TextDecoder();\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash);\n  const codec = getCodec(buff as Buffer); // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer);\n      const cid = new CID(data);\n      return `ipfs://${toB58String(cid.multihash)}`;\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer);\n      const cid = new CID(data);\n      const multihash = decode(cid.multihash);\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`;\n      } else {\n        return `ipns://${toB58String(cid.multihash)}`;\n      }\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`);\n  }\n}\n"],"mappings":"AAAA,MAAOA,IAAP,KAAgB,MAAhB,CACA,OAASC,QAAT,CAAmBC,QAAnB,KAAmC,YAAnC,CACA,OAASC,MAAT,CAAiBC,WAAjB,KAAoC,aAApC,CAEA,MAAO,SAASC,gBAAT,CAAyBC,GAAzB,CAAkD,CACvDA,GAAG,CAAGA,GAAG,CAACC,UAAJ,CAAe,IAAf,EAAuBD,GAAG,CAACE,MAAJ,CAAW,CAAX,CAAvB,CAAuCF,GAA7C,CACA,GAAIA,GAAG,CAACG,MAAJ,CAAa,CAAb,GAAmB,CAAvB,CAA0B,KAAM,IAAIC,MAAJ,CAAU,4CAAV,CAAN,CAC1B,GAAMC,IAAG,CAAG,GAAIC,WAAJ,CAAeN,GAAG,CAACG,MAAJ,CAAa,CAA5B,CAAZ,CACA,IAAK,GAAII,EAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,GAAG,CAACF,MAAxB,CAAgCI,CAAC,EAAjC,CAAqC,CACnCF,GAAG,CAACE,CAAD,CAAH,CAASC,QAAQ,CAACR,GAAG,CAACE,MAAJ,CAAWK,CAAC,CAAG,CAAf,CAAkB,CAAlB,CAAD,CAAuB,EAAvB,CAAjB,CACD,CACD,MAAOF,IAAP,CACD,CAED,GAAMI,cAAa,CAAG,GAAIC,YAAJ,EAAtB,CAEA;AACA;AACA;AACA,GACA,cAAe,SAASC,iBAAT,CAA0BC,WAA1B,CAAuD,CACpE,GAAMC,KAAI,CAAGd,eAAe,CAACa,WAAD,CAA5B,CACA,GAAME,MAAK,CAAGnB,QAAQ,CAACkB,IAAD,CAAtB,CAAwC;AACxC,OAAQC,KAAR,EACE,IAAK,SAAL,CAAgB,CACd,GAAMC,KAAI,CAAGnB,QAAQ,CAACiB,IAAD,CAArB,CACA,GAAMG,IAAG,CAAG,GAAItB,IAAJ,CAAQqB,IAAR,CAAZ,CACA,uBAAiBjB,WAAW,CAACkB,GAAG,CAACC,SAAL,CAA5B,EACD,CACD,IAAK,SAAL,CAAgB,CACd,GAAMF,MAAI,CAAGnB,QAAQ,CAACiB,IAAD,CAArB,CACA,GAAMG,KAAG,CAAG,GAAItB,IAAJ,CAAQqB,KAAR,CAAZ,CACA,GAAME,UAAS,CAAGpB,MAAM,CAACmB,IAAG,CAACC,SAAL,CAAxB,CACA,GAAIA,SAAS,CAACC,IAAV,GAAmB,UAAvB,CAAmC,CACjC,uBAAiBT,aAAa,CAACZ,MAAd,CAAqBoB,SAAS,CAACE,MAA/B,EAAuCC,IAAvC,EAAjB,EACD,CAFD,IAEO,CACL,uBAAiBtB,WAAW,CAACkB,IAAG,CAACC,SAAL,CAA5B,EACD,CACF,CACD,QACE,KAAM,IAAIb,MAAJ,+BAAiCU,KAAjC,EAAN,CAjBJ,CAmBD"},"metadata":{},"sourceType":"module"}