{"ast":null,"code":"import{CurrencyAmount,ETHER,JSBI,Token,TokenAmount}from'@uniswap/sdk';import{useMemo}from'react';import ERC20_INTERFACE from'../../constants/abis/erc20';import{useAllTokens}from'../../hooks/Tokens';import{useActiveWeb3React}from'../../hooks';import{useMulticallContract}from'../../hooks/useContract';import{isAddress}from'../../utils';import{useSingleContractMultipleData,useMultipleContractSingleData}from'../multicall/hooks';/**\n * Returns a map of the given addresses to their eventually consistent ETH balances.\n */export function useETHBalances(uncheckedAddresses){var multicallContract=useMulticallContract();var addresses=useMemo(function(){return uncheckedAddresses?uncheckedAddresses.map(isAddress).filter(function(a){return a!==false;}).sort():[];},[uncheckedAddresses]);var results=useSingleContractMultipleData(multicallContract,'getEthBalance',addresses.map(function(address){return[address];}));return useMemo(function(){return addresses.reduce(function(memo,address,i){var _results$i,_results$i$result;var value=results===null||results===void 0?void 0:(_results$i=results[i])===null||_results$i===void 0?void 0:(_results$i$result=_results$i.result)===null||_results$i$result===void 0?void 0:_results$i$result[0];if(value)memo[address]=CurrencyAmount.ether(JSBI.BigInt(value.toString()));return memo;},{});},[addresses,results]);}/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */export function useTokenBalancesWithLoadingIndicator(address,tokens){var validatedTokens=useMemo(function(){var _tokens$filter;return(_tokens$filter=tokens===null||tokens===void 0?void 0:tokens.filter(function(t){return isAddress(t===null||t===void 0?void 0:t.address)!==false;}))!==null&&_tokens$filter!==void 0?_tokens$filter:[];},[tokens]);var validatedTokenAddresses=useMemo(function(){return validatedTokens.map(function(vt){return vt.address;});},[validatedTokens]);var balances=useMultipleContractSingleData(validatedTokenAddresses,ERC20_INTERFACE,'balanceOf',[address]);var anyLoading=useMemo(function(){return balances.some(function(callState){return callState.loading;});},[balances]);return[useMemo(function(){return address&&validatedTokens.length>0?validatedTokens.reduce(function(memo,token,i){var _balances$i,_balances$i$result;var value=balances===null||balances===void 0?void 0:(_balances$i=balances[i])===null||_balances$i===void 0?void 0:(_balances$i$result=_balances$i.result)===null||_balances$i$result===void 0?void 0:_balances$i$result[0];var amount=value?JSBI.BigInt(value.toString()):undefined;if(amount){memo[token.address]=new TokenAmount(token,amount);}return memo;},{}):{};},[address,validatedTokens,balances]),anyLoading];}export function useTokenBalances(address,tokens){return useTokenBalancesWithLoadingIndicator(address,tokens)[0];}// get the balance for a single token/account combo\nexport function useTokenBalance(account,token){var tokenBalances=useTokenBalances(account,[token]);if(!token)return undefined;return tokenBalances[token.address];}export function useCurrencyBalances(account,currencies){var tokens=useMemo(function(){var _currencies$filter;return(_currencies$filter=currencies===null||currencies===void 0?void 0:currencies.filter(function(currency){return currency instanceof Token;}))!==null&&_currencies$filter!==void 0?_currencies$filter:[];},[currencies]);var tokenBalances=useTokenBalances(account,tokens);var containsETH=useMemo(function(){var _currencies$some;return(_currencies$some=currencies===null||currencies===void 0?void 0:currencies.some(function(currency){return currency===ETHER;}))!==null&&_currencies$some!==void 0?_currencies$some:false;},[currencies]);var ethBalance=useETHBalances(containsETH?[account]:[]);return useMemo(function(){var _currencies$map;return(_currencies$map=currencies===null||currencies===void 0?void 0:currencies.map(function(currency){if(!account||!currency)return undefined;if(currency instanceof Token)return tokenBalances[currency.address];if(currency===ETHER)return ethBalance[account];return undefined;}))!==null&&_currencies$map!==void 0?_currencies$map:[];},[account,currencies,ethBalance,tokenBalances]);}export function useCurrencyBalance(account,currency){return useCurrencyBalances(account,[currency])[0];}// mimics useAllBalances\nexport function useAllTokenBalances(){var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var allTokens=useAllTokens();var allTokensArray=useMemo(function(){return Object.values(allTokens!==null&&allTokens!==void 0?allTokens:{});},[allTokens]);var balances=useTokenBalances(account!==null&&account!==void 0?account:undefined,allTokensArray);return balances!==null&&balances!==void 0?balances:{};}","map":{"version":3,"names":["CurrencyAmount","ETHER","JSBI","Token","TokenAmount","useMemo","ERC20_INTERFACE","useAllTokens","useActiveWeb3React","useMulticallContract","isAddress","useSingleContractMultipleData","useMultipleContractSingleData","useETHBalances","uncheckedAddresses","multicallContract","addresses","map","filter","a","sort","results","address","reduce","memo","i","value","result","ether","BigInt","toString","useTokenBalancesWithLoadingIndicator","tokens","validatedTokens","t","validatedTokenAddresses","vt","balances","anyLoading","some","callState","loading","length","token","amount","undefined","useTokenBalances","useTokenBalance","account","tokenBalances","useCurrencyBalances","currencies","currency","containsETH","ethBalance","useCurrencyBalance","useAllTokenBalances","allTokens","allTokensArray","Object","values"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/state/wallet/hooks.ts"],"sourcesContent":["import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport ERC20_INTERFACE from '../../constants/abis/erc20';\nimport { useAllTokens } from '../../hooks/Tokens';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useMulticallContract } from '../../hooks/useContract';\nimport { isAddress } from '../../utils';\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks';\n\n/**\n * Returns a map of the given addresses to their eventually consistent ETH balances.\n */\nexport function useETHBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined;\n} {\n  const multicallContract = useMulticallContract();\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses]\n  );\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address])\n  );\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0];\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()));\n        return memo;\n      }, {}),\n    [addresses, results]\n  );\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[]\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens]\n  );\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens]);\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address]);\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances]);\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0];\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined;\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount);\n              }\n              return memo;\n            }, {})\n          : {},\n      [address, validatedTokens, balances]\n    ),\n    anyLoading,\n  ];\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[]\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0];\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token]);\n  if (!token) return undefined;\n  return tokenBalances[token.address];\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[]\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies]\n  );\n\n  const tokenBalances = useTokenBalances(account, tokens);\n  const containsETH: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies]);\n  const ethBalance = useETHBalances(containsETH ? [account] : []);\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined;\n        if (currency instanceof Token) return tokenBalances[currency.address];\n        if (currency === ETHER) return ethBalance[account];\n        return undefined;\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances]\n  );\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0];\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useActiveWeb3React();\n  const allTokens = useAllTokens();\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens]);\n  const balances = useTokenBalances(account ?? undefined, allTokensArray);\n  return balances ?? {};\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}