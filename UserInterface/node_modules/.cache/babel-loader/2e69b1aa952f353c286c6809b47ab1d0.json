{"ast":null,"code":"import _asyncToGenerator from \"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport * as crypto from \"@walletconnect/crypto\";\nimport * as encoding from \"@walletconnect/encoding\";\nimport { convertArrayBufferToBuffer, convertBufferToArrayBuffer } from \"@walletconnect/utils\";\nexport function generateKey(_x) {\n  return _generateKey.apply(this, arguments);\n}\n\nfunction _generateKey() {\n  _generateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(length) {\n    var _length, bytes, result;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _length = (length || 256) / 8;\n            bytes = crypto.randomBytes(_length);\n            result = convertBufferToArrayBuffer(encoding.arrayToBuffer(bytes));\n            return _context.abrupt(\"return\", result);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _generateKey.apply(this, arguments);\n}\n\nexport function verifyHmac(_x2, _x3) {\n  return _verifyHmac.apply(this, arguments);\n}\n\nfunction _verifyHmac() {\n  _verifyHmac = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(payload, key) {\n    var cipherText, iv, hmac, hmacHex, unsigned, chmac, chmacHex;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            cipherText = encoding.hexToArray(payload.data);\n            iv = encoding.hexToArray(payload.iv);\n            hmac = encoding.hexToArray(payload.hmac);\n            hmacHex = encoding.arrayToHex(hmac, false);\n            unsigned = encoding.concatArrays(cipherText, iv);\n            _context2.next = 7;\n            return crypto.hmacSha256Sign(key, unsigned);\n\n          case 7:\n            chmac = _context2.sent;\n            chmacHex = encoding.arrayToHex(chmac, false);\n\n            if (!(encoding.removeHexPrefix(hmacHex) === encoding.removeHexPrefix(chmacHex))) {\n              _context2.next = 11;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", true);\n\n          case 11:\n            return _context2.abrupt(\"return\", false);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _verifyHmac.apply(this, arguments);\n}\n\nexport function encrypt(_x4, _x5, _x6) {\n  return _encrypt.apply(this, arguments);\n}\n\nfunction _encrypt() {\n  _encrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(data, key, providedIv) {\n    var _key, ivArrayBuffer, iv, ivHex, contentString, content, cipherText, cipherTextHex, unsigned, hmac, hmacHex;\n\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _key = encoding.bufferToArray(convertArrayBufferToBuffer(key));\n            _context3.t0 = providedIv;\n\n            if (_context3.t0) {\n              _context3.next = 6;\n              break;\n            }\n\n            _context3.next = 5;\n            return generateKey(128);\n\n          case 5:\n            _context3.t0 = _context3.sent;\n\n          case 6:\n            ivArrayBuffer = _context3.t0;\n            iv = encoding.bufferToArray(convertArrayBufferToBuffer(ivArrayBuffer));\n            ivHex = encoding.arrayToHex(iv, false);\n            contentString = JSON.stringify(data);\n            content = encoding.utf8ToArray(contentString);\n            _context3.next = 13;\n            return crypto.aesCbcEncrypt(iv, _key, content);\n\n          case 13:\n            cipherText = _context3.sent;\n            cipherTextHex = encoding.arrayToHex(cipherText, false);\n            unsigned = encoding.concatArrays(cipherText, iv);\n            _context3.next = 18;\n            return crypto.hmacSha256Sign(_key, unsigned);\n\n          case 18:\n            hmac = _context3.sent;\n            hmacHex = encoding.arrayToHex(hmac, false);\n            return _context3.abrupt(\"return\", {\n              data: cipherTextHex,\n              hmac: hmacHex,\n              iv: ivHex\n            });\n\n          case 21:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _encrypt.apply(this, arguments);\n}\n\nexport function decrypt(_x7, _x8) {\n  return _decrypt.apply(this, arguments);\n}\n\nfunction _decrypt() {\n  _decrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(payload, key) {\n    var _key, verified, cipherText, iv, buffer, utf8, data;\n\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _key = encoding.bufferToArray(convertArrayBufferToBuffer(key));\n\n            if (_key) {\n              _context4.next = 3;\n              break;\n            }\n\n            throw new Error(\"Missing key: required for decryption\");\n\n          case 3:\n            _context4.next = 5;\n            return verifyHmac(payload, _key);\n\n          case 5:\n            verified = _context4.sent;\n\n            if (verified) {\n              _context4.next = 8;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", null);\n\n          case 8:\n            cipherText = encoding.hexToArray(payload.data);\n            iv = encoding.hexToArray(payload.iv);\n            _context4.next = 12;\n            return crypto.aesCbcDecrypt(iv, _key, cipherText);\n\n          case 12:\n            buffer = _context4.sent;\n            utf8 = encoding.arrayToUtf8(buffer);\n            _context4.prev = 14;\n            data = JSON.parse(utf8);\n            _context4.next = 21;\n            break;\n\n          case 18:\n            _context4.prev = 18;\n            _context4.t0 = _context4[\"catch\"](14);\n            return _context4.abrupt(\"return\", null);\n\n          case 21:\n            return _context4.abrupt(\"return\", data);\n\n          case 22:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[14, 18]]);\n  }));\n  return _decrypt.apply(this, arguments);\n}","map":{"version":3,"mappings":"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","names":["crypto","encoding","convertArrayBufferToBuffer","convertBufferToArrayBuffer","generateKey","length","_length","bytes","randomBytes","result","arrayToBuffer","verifyHmac","payload","key","cipherText","hexToArray","data","iv","hmac","hmacHex","arrayToHex","unsigned","concatArrays","hmacSha256Sign","chmac","chmacHex","removeHexPrefix","encrypt","providedIv","_key","bufferToArray","ivArrayBuffer","ivHex","contentString","JSON","stringify","content","utf8ToArray","aesCbcEncrypt","cipherTextHex","decrypt","Error","verified","aesCbcDecrypt","buffer","utf8","arrayToUtf8","parse"],"sourceRoot":"","sources":["../../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}