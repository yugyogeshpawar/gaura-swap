{"ast":null,"code":"import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'; // combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\n\nexport default function useTransactionDeadline() {\n  const ttl = useSelector(state => state.user.userDeadline);\n  const blockTimestamp = useCurrentBlockTimestamp();\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl);\n    return undefined;\n  }, [blockTimestamp, ttl]);\n}","map":{"version":3,"names":["useMemo","useSelector","useCurrentBlockTimestamp","useTransactionDeadline","ttl","state","user","userDeadline","blockTimestamp","add","undefined"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/hooks/useTransactionDeadline.ts"],"sourcesContent":["import { BigNumber } from 'ethers';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../state';\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp';\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline);\n  const blockTimestamp = useCurrentBlockTimestamp();\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl);\n    return undefined;\n  }, [blockTimestamp, ttl]);\n}\n"],"mappings":"AACA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,wBAAP,MAAqC,4BAArC,C,CAEA;;AACA,eAAe,SAASC,sBAAT,GAAyD;EACtE,MAAMC,GAAG,GAAGH,WAAW,CAAoBI,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,YAAzC,CAAvB;EACA,MAAMC,cAAc,GAAGN,wBAAwB,EAA/C;EACA,OAAOF,OAAO,CAAC,MAAM;IACnB,IAAIQ,cAAc,IAAIJ,GAAtB,EAA2B,OAAOI,cAAc,CAACC,GAAf,CAAmBL,GAAnB,CAAP;IAC3B,OAAOM,SAAP;EACD,CAHa,EAGX,CAACF,cAAD,EAAiBJ,GAAjB,CAHW,CAAd;AAID"},"metadata":{},"sourceType":"module"}