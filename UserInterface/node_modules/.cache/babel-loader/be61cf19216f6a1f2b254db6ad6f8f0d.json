{"ast":null,"code":"import _slicedToArray from\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import useENS from'../../hooks/useENS';import{parseUnits}from'@ethersproject/units';import{CurrencyAmount,ETHER,JSBI,Token,TokenAmount}from'@uniswap/sdk';import{useCallback,useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{useActiveWeb3React}from'../../hooks';import{useCurrency}from'../../hooks/Tokens';import{useTradeExactIn,useTradeExactOut}from'../../hooks/Trades';import useParsedQueryString from'../../hooks/useParsedQueryString';import{isAddress}from'../../utils';import{useCurrencyBalances}from'../wallet/hooks';import{Field,replaceSwapState,selectCurrency,setRecipient,switchCurrencies,typeInput}from'./actions';import{useUserSlippageTolerance}from'../user/hooks';import{computeSlippageAdjustedAmounts}from'../../utils/prices';import{FACTORY_ADDRESS,ROUTER_ADDRESS}from'../../constants';export function useSwapState(){return useSelector(function(state){return state.swap;});}export function useSwapActionHandlers(){var dispatch=useDispatch();var onCurrencySelection=useCallback(function(field,currency){dispatch(selectCurrency({field:field,currencyId:currency instanceof Token?currency.address:currency===ETHER?'ETH':''}));},[dispatch]);var onSwitchTokens=useCallback(function(){dispatch(switchCurrencies());},[dispatch]);var onUserInput=useCallback(function(field,typedValue){dispatch(typeInput({field:field,typedValue:typedValue}));},[dispatch]);var onChangeRecipient=useCallback(function(recipient){dispatch(setRecipient({recipient:recipient}));},[dispatch]);return{onSwitchTokens:onSwitchTokens,onCurrencySelection:onCurrencySelection,onUserInput:onUserInput,onChangeRecipient:onChangeRecipient};}// try to parse a user entered amount for a given token\nexport function tryParseAmount(value,currency){if(!value||!currency){return undefined;}try{var typedValueParsed=parseUnits(value,currency.decimals).toString();if(typedValueParsed!=='0'){return currency instanceof Token?new TokenAmount(currency,JSBI.BigInt(typedValueParsed)):CurrencyAmount.ether(JSBI.BigInt(typedValueParsed));}}catch(error){// should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\nconsole.debug(\"Failed to parse input amount: \\\"\".concat(value,\"\\\"\"),error);}// necessary for all paths to return a value\nreturn undefined;}var BAD_RECIPIENT_ADDRESSES=[FACTORY_ADDRESS,ROUTER_ADDRESS];/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */function involvesAddress(trade,checksummedAddress){return trade.route.path.some(function(token){return token.address===checksummedAddress;})||trade.route.pairs.some(function(pair){return pair.liquidityToken.address===checksummedAddress;});}// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(){var _ref,_ref2,_currencyBalances,_currencies;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var _useSwapState=useSwapState(),independentField=_useSwapState.independentField,typedValue=_useSwapState.typedValue,inputCurrencyId=_useSwapState[Field.INPUT].currencyId,outputCurrencyId=_useSwapState[Field.OUTPUT].currencyId,recipient=_useSwapState.recipient;var inputCurrency=useCurrency(inputCurrencyId);var outputCurrency=useCurrency(outputCurrencyId);var recipientLookup=useENS(recipient!==null&&recipient!==void 0?recipient:undefined);var to=(_ref=recipient===null?account:recipientLookup.address)!==null&&_ref!==void 0?_ref:null;var relevantTokenBalances=useCurrencyBalances(account!==null&&account!==void 0?account:undefined,[inputCurrency!==null&&inputCurrency!==void 0?inputCurrency:undefined,outputCurrency!==null&&outputCurrency!==void 0?outputCurrency:undefined]);var isExactIn=independentField===Field.INPUT;var parsedAmount=tryParseAmount(typedValue,(_ref2=isExactIn?inputCurrency:outputCurrency)!==null&&_ref2!==void 0?_ref2:undefined);var bestTradeExactIn=useTradeExactIn(isExactIn?parsedAmount:undefined,outputCurrency!==null&&outputCurrency!==void 0?outputCurrency:undefined);var bestTradeExactOut=useTradeExactOut(inputCurrency!==null&&inputCurrency!==void 0?inputCurrency:undefined,!isExactIn?parsedAmount:undefined);var v2Trade=isExactIn?bestTradeExactIn:bestTradeExactOut;var currencyBalances=(_currencyBalances={},_defineProperty(_currencyBalances,Field.INPUT,relevantTokenBalances[0]),_defineProperty(_currencyBalances,Field.OUTPUT,relevantTokenBalances[1]),_currencyBalances);var currencies=(_currencies={},_defineProperty(_currencies,Field.INPUT,inputCurrency!==null&&inputCurrency!==void 0?inputCurrency:undefined),_defineProperty(_currencies,Field.OUTPUT,outputCurrency!==null&&outputCurrency!==void 0?outputCurrency:undefined),_currencies);var inputError;if(!account){inputError='Connect Wallet';}if(!parsedAmount){var _inputError;inputError=(_inputError=inputError)!==null&&_inputError!==void 0?_inputError:'Enter an amount';}if(!currencies[Field.INPUT]||!currencies[Field.OUTPUT]){var _inputError2;inputError=(_inputError2=inputError)!==null&&_inputError2!==void 0?_inputError2:'Select a token';}var formattedTo=isAddress(to);if(!to||!formattedTo){var _inputError3;inputError=(_inputError3=inputError)!==null&&_inputError3!==void 0?_inputError3:'Enter a recipient';}else{if(BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo)!==-1||bestTradeExactIn&&involvesAddress(bestTradeExactIn,formattedTo)||bestTradeExactOut&&involvesAddress(bestTradeExactOut,formattedTo)){var _inputError4;inputError=(_inputError4=inputError)!==null&&_inputError4!==void 0?_inputError4:'Invalid recipient';}}var _useUserSlippageToler=useUserSlippageTolerance(),_useUserSlippageToler2=_slicedToArray(_useUserSlippageToler,1),allowedSlippage=_useUserSlippageToler2[0];var slippageAdjustedAmounts=v2Trade&&allowedSlippage&&computeSlippageAdjustedAmounts(v2Trade,allowedSlippage);// compare input balance to max input based on version\nvar _ref3=[currencyBalances[Field.INPUT],slippageAdjustedAmounts?slippageAdjustedAmounts[Field.INPUT]:null],balanceIn=_ref3[0],amountIn=_ref3[1];if(balanceIn&&amountIn&&balanceIn.lessThan(amountIn)){inputError='Insufficient '+amountIn.currency.symbol+' balance';}return{currencies:currencies,currencyBalances:currencyBalances,parsedAmount:parsedAmount,v2Trade:v2Trade!==null&&v2Trade!==void 0?v2Trade:undefined,inputError:inputError};}function parseCurrencyFromURLParameter(urlParam){var _ETH;if(typeof urlParam==='string'){var valid=isAddress(urlParam);if(valid)return valid;if(urlParam.toUpperCase()==='ETH')return'ETH';if(valid===false)return'ETH';}return(_ETH='ETH')!==null&&_ETH!==void 0?_ETH:'';}function parseTokenAmountURLParameter(urlParam){return typeof urlParam==='string'&&!isNaN(parseFloat(urlParam))?urlParam:'';}function parseIndependentFieldURLParameter(urlParam){return typeof urlParam==='string'&&urlParam.toLowerCase()==='output'?Field.OUTPUT:Field.INPUT;}var ENS_NAME_REGEX=/^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/;var ADDRESS_REGEX=/^0x[a-fA-F0-9]{40}$/;function validatedRecipient(recipient){if(typeof recipient!=='string')return null;var address=isAddress(recipient);if(address)return address;if(ENS_NAME_REGEX.test(recipient))return recipient;if(ADDRESS_REGEX.test(recipient))return recipient;return null;}export function queryParametersToSwapState(parsedQs){var _ref4;var inputCurrency=parseCurrencyFromURLParameter(parsedQs.inputCurrency);var outputCurrency=parseCurrencyFromURLParameter(parsedQs.outputCurrency);if(inputCurrency===outputCurrency){if(typeof parsedQs.outputCurrency==='string'){inputCurrency='';}else{outputCurrency='';}}var recipient=validatedRecipient(parsedQs.recipient);return _ref4={},_defineProperty(_ref4,Field.INPUT,{currencyId:inputCurrency}),_defineProperty(_ref4,Field.OUTPUT,{currencyId:outputCurrency}),_defineProperty(_ref4,\"typedValue\",parseTokenAmountURLParameter(parsedQs.exactAmount)),_defineProperty(_ref4,\"independentField\",parseIndependentFieldURLParameter(parsedQs.exactField)),_defineProperty(_ref4,\"recipient\",recipient),_ref4;}// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch(){var _useActiveWeb3React2=useActiveWeb3React(),chainId=_useActiveWeb3React2.chainId;var dispatch=useDispatch();var parsedQs=useParsedQueryString();var _useState=useState(),_useState2=_slicedToArray(_useState,2),result=_useState2[0],setResult=_useState2[1];useEffect(function(){if(!chainId)return;var parsed=queryParametersToSwapState(parsedQs);dispatch(replaceSwapState({typedValue:parsed.typedValue,field:parsed.independentField,inputCurrencyId:parsed[Field.INPUT].currencyId,outputCurrencyId:parsed[Field.OUTPUT].currencyId,recipient:parsed.recipient}));setResult({inputCurrencyId:parsed[Field.INPUT].currencyId,outputCurrencyId:parsed[Field.OUTPUT].currencyId});// eslint-disable-next-line react-hooks/exhaustive-deps\n},[dispatch,chainId]);return result;}","map":{"version":3,"names":["useENS","parseUnits","CurrencyAmount","ETHER","JSBI","Token","TokenAmount","useCallback","useEffect","useState","useDispatch","useSelector","useActiveWeb3React","useCurrency","useTradeExactIn","useTradeExactOut","useParsedQueryString","isAddress","useCurrencyBalances","Field","replaceSwapState","selectCurrency","setRecipient","switchCurrencies","typeInput","useUserSlippageTolerance","computeSlippageAdjustedAmounts","FACTORY_ADDRESS","ROUTER_ADDRESS","useSwapState","state","swap","useSwapActionHandlers","dispatch","onCurrencySelection","field","currency","currencyId","address","onSwitchTokens","onUserInput","typedValue","onChangeRecipient","recipient","tryParseAmount","value","undefined","typedValueParsed","decimals","toString","BigInt","ether","error","console","debug","BAD_RECIPIENT_ADDRESSES","involvesAddress","trade","checksummedAddress","route","path","some","token","pairs","pair","liquidityToken","useDerivedSwapInfo","account","independentField","inputCurrencyId","INPUT","outputCurrencyId","OUTPUT","inputCurrency","outputCurrency","recipientLookup","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","bestTradeExactOut","v2Trade","currencyBalances","currencies","inputError","formattedTo","indexOf","allowedSlippage","slippageAdjustedAmounts","balanceIn","amountIn","lessThan","symbol","parseCurrencyFromURLParameter","urlParam","valid","toUpperCase","parseTokenAmountURLParameter","isNaN","parseFloat","parseIndependentFieldURLParameter","toLowerCase","ENS_NAME_REGEX","ADDRESS_REGEX","validatedRecipient","test","queryParametersToSwapState","parsedQs","exactAmount","exactField","useDefaultsFromURLSearch","chainId","result","setResult","parsed"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/state/swap/hooks.ts"],"sourcesContent":["import useENS from '../../hooks/useENS';\nimport { parseUnits } from '@ethersproject/units';\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@uniswap/sdk';\nimport { ParsedQs } from 'qs';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { useTradeExactIn, useTradeExactOut } from '../../hooks/Trades';\nimport useParsedQueryString from '../../hooks/useParsedQueryString';\nimport { isAddress } from '../../utils';\nimport { AppDispatch, AppState } from '../index';\nimport { useCurrencyBalances } from '../wallet/hooks';\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions';\nimport { SwapState } from './reducer';\nimport { useUserSlippageTolerance } from '../user/hooks';\nimport { computeSlippageAdjustedAmounts } from '../../utils/prices';\nimport { FACTORY_ADDRESS, ROUTER_ADDRESS } from '../../constants';\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap);\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void;\n  onSwitchTokens: () => void;\n  onUserInput: (field: Field, typedValue: string) => void;\n  onChangeRecipient: (recipient: string | null) => void;\n} {\n  const dispatch = useDispatch<AppDispatch>();\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'ETH' : '',\n        })\n      );\n    },\n    [dispatch]\n  );\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies());\n  }, [dispatch]);\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }));\n    },\n    [dispatch]\n  );\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }));\n    },\n    [dispatch]\n  );\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  };\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined;\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString();\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed));\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error);\n  }\n  // necessary for all paths to return a value\n  return undefined;\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [FACTORY_ADDRESS, ROUTER_ADDRESS];\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  );\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency };\n  currencyBalances: { [field in Field]?: CurrencyAmount };\n  parsedAmount: CurrencyAmount | undefined;\n  v2Trade: Trade | undefined;\n  inputError?: string;\n} {\n  const { account } = useActiveWeb3React();\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState();\n\n  const inputCurrency = useCurrency(inputCurrencyId);\n  const outputCurrency = useCurrency(outputCurrencyId);\n  const recipientLookup = useENS(recipient ?? undefined);\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null;\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ]);\n\n  const isExactIn: boolean = independentField === Field.INPUT;\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined);\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined);\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined);\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut;\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  };\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  };\n\n  let inputError: string | undefined;\n  if (!account) {\n    inputError = 'Connect Wallet';\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? 'Enter an amount';\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? 'Select a token';\n  }\n\n  const formattedTo = isAddress(to);\n  if (!to || !formattedTo) {\n    inputError = inputError ?? 'Enter a recipient';\n  } else {\n    if (\n      BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n      (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n      (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n    ) {\n      inputError = inputError ?? 'Invalid recipient';\n    }\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance();\n\n  const slippageAdjustedAmounts =\n    v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage);\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ];\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = 'Insufficient ' + amountIn.currency.symbol + ' balance';\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  };\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam);\n    if (valid) return valid;\n    if (urlParam.toUpperCase() === 'ETH') return 'ETH';\n    if (valid === false) return 'ETH';\n  }\n  return 'ETH' ?? '';\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : '';\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT;\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/;\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/;\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null;\n  const address = isAddress(recipient);\n  if (address) return address;\n  if (ENS_NAME_REGEX.test(recipient)) return recipient;\n  if (ADDRESS_REGEX.test(recipient)) return recipient;\n  return null;\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency);\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency);\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = '';\n    } else {\n      outputCurrency = '';\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient);\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  };\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React();\n  const dispatch = useDispatch<AppDispatch>();\n  const parsedQs = useParsedQueryString();\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >();\n\n  useEffect(() => {\n    if (!chainId) return;\n    const parsed = queryParametersToSwapState(parsedQs);\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: parsed.recipient,\n      })\n    );\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId]);\n\n  return result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}