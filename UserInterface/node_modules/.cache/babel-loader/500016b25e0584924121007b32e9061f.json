{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLinkProvider = void 0;\n\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst eth_rpc_errors_1 = require(\"eth-rpc-errors\");\n\nconst WalletLinkAnalytics_1 = require(\"../connection/WalletLinkAnalytics\");\n\nconst init_1 = require(\"../init\");\n\nconst Session_1 = require(\"../relay/Session\");\n\nconst WalletLinkRelayAbstract_1 = require(\"../relay/WalletLinkRelayAbstract\");\n\nconst util_1 = require(\"../util\");\n\nconst eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\n\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\n\nconst JSONRPC_1 = require(\"./JSONRPC\");\n\nconst SubscriptionManager_1 = require(\"./SubscriptionManager\");\n\nconst DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nconst DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\"; // Indicates chain has been switched by switchEthereumChain or addEthereumChain request\n\nconst HAS_CHAIN_BEEN_SWITCHED_KEY = \"HasChainBeenSwitched\";\nconst HAS_CHAIN_OVERRIDDEN_FROM_RELAY = \"HasChainOverriddenFromRelay\";\n\nclass WalletLinkProvider extends safe_event_emitter_1.default {\n  constructor(options) {\n    var _a;\n\n    super();\n    this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n    this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(this);\n    this._relay = null;\n    this._addresses = [];\n    this.hasMadeFirstChainChangedEmission = false;\n    this._send = this.send.bind(this);\n    this._sendAsync = this.sendAsync.bind(this);\n    this.setProviderInfo = this.setProviderInfo.bind(this);\n    this.updateProviderInfo = this.updateProviderInfo.bind(this);\n    this.getChainId = this.getChainId.bind(this);\n    this.setAppInfo = this.setAppInfo.bind(this);\n    this.enable = this.enable.bind(this);\n    this.close = this.close.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    this.request = this.request.bind(this);\n    this._setAddresses = this._setAddresses.bind(this);\n    this.scanQRCode = this.scanQRCode.bind(this);\n    this.genericRequest = this.genericRequest.bind(this);\n    this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n    this._overrideIsMetaMask = options.overrideIsMetaMask;\n    this._relayProvider = options.relayProvider;\n    this._storage = options.storage;\n    this._relayEventManager = options.relayEventManager;\n    this._walletLinkAnalytics = options.walletLinkAnalytics ? options.walletLinkAnalytics : new WalletLinkAnalytics_1.WalletLinkAnalytics();\n    this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n    const chainId = this.getChainId();\n    const chainIdStr = (0, util_1.prepend0x)(chainId.toString(16)); // indicate that we've connected, for EIP-1193 compliance\n\n    this.emit(\"connect\", {\n      chainIdStr\n    });\n\n    const cachedAddresses = this._storage.getItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n\n    if (cachedAddresses) {\n      const addresses = cachedAddresses.split(\" \");\n\n      if (addresses[0] !== \"\") {\n        this._addresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n        this.emit(\"accountsChanged\", addresses);\n      }\n    }\n\n    this._subscriptionManager.events.on(\"notification\", notification => {\n      this.emit(\"message\", {\n        type: notification.method,\n        data: notification.params\n      });\n    });\n\n    if (this._addresses.length > 0) {\n      void this.initializeRelay();\n    }\n\n    window.addEventListener(\"message\", event => {\n      var _a;\n\n      if (event.data.type !== \"walletLinkMessage\") return;\n\n      if (event.data.data.action === \"defaultChainChanged\") {\n        const _chainId = event.data.data.chainId;\n        const jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : this.jsonRpcUrl;\n        this.updateProviderInfo(jsonRpcUrl, Number(_chainId), true);\n      }\n    });\n  }\n\n  get selectedAddress() {\n    return this._addresses[0] || undefined;\n  }\n\n  get networkVersion() {\n    return this.getChainId().toString(10);\n  }\n\n  get chainId() {\n    return (0, util_1.prepend0x)(this.getChainId().toString(16));\n  }\n\n  get isWalletLink() {\n    return true;\n  }\n  /**\n   * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n   * true for this method.\n   */\n\n\n  get isMetaMask() {\n    return this._overrideIsMetaMask;\n  }\n\n  get host() {\n    return this.jsonRpcUrl;\n  }\n\n  get connected() {\n    return true;\n  }\n\n  isConnected() {\n    return true;\n  }\n\n  get jsonRpcUrl() {\n    var _a;\n\n    return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts;\n  }\n\n  set jsonRpcUrl(value) {\n    this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n  }\n\n  get isChainOverridden() {\n    return this._storage.getItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY) === \"true\";\n  }\n\n  set isChainOverridden(value) {\n    this._storage.setItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY, value.toString());\n  } // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n\n\n  setProviderInfo(jsonRpcUrl, chainId) {\n    if (this.isChainOverridden) return;\n    this.updateProviderInfo(jsonRpcUrl, this.getChainId(), false);\n  }\n\n  updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n    const hasChainSwitched = this._storage.getItem(HAS_CHAIN_BEEN_SWITCHED_KEY) === \"true\";\n    if (hasChainSwitched && fromRelay) return;\n\n    if (fromRelay) {\n      this.isChainOverridden = true;\n    }\n\n    this.jsonRpcUrl = jsonRpcUrl; // emit chainChanged event if necessary\n\n    const originalChainId = this.getChainId();\n\n    this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n\n    const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n\n    if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n      this.emit(\"chainChanged\", this.getChainId());\n      this.hasMadeFirstChainChangedEmission = true;\n    }\n  }\n\n  async watchAsset(type, address, symbol, decimals, image) {\n    const relay = await this.initializeRelay();\n    const result = await relay.watchAsset(type, address, symbol, decimals, image).promise;\n    return !!result.result;\n  }\n\n  async addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n    var _a, _b;\n\n    if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n      return false;\n    }\n\n    const relay = await this.initializeRelay();\n    const res = await relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n\n    if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n      this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n\n      this.updateProviderInfo(rpcUrls[0], chainId, false);\n    }\n\n    return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n  }\n\n  async switchEthereumChain(chainId) {\n    if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n      return;\n    }\n\n    const relay = await this.initializeRelay();\n    const res = await relay.switchEthereumChain(chainId.toString(10)).promise;\n\n    if (res.errorCode) {\n      throw eth_rpc_errors_1.ethErrors.provider.custom({\n        code: res.errorCode\n      });\n    }\n\n    const switchResponse = res.result;\n\n    if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n      this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n\n      this.updateProviderInfo(switchResponse.rpcUrl, chainId, false);\n    }\n  }\n\n  setAppInfo(appName, appLogoUrl) {\n    void this.initializeRelay().then(relay => relay.setAppInfo(appName, appLogoUrl));\n  }\n\n  async enable() {\n    this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n      method: \"provider::enable\",\n      addresses_length: this._addresses.length,\n      sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n    });\n\n    if (this._addresses.length > 0) {\n      return [...this._addresses];\n    }\n\n    return await this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n  }\n\n  close() {\n    void this.initializeRelay().then(relay => relay.resetAndReload());\n  }\n\n  send(requestOrMethod, callbackOrParams) {\n    // send<T>(method, params): Promise<T>\n    if (typeof requestOrMethod === \"string\") {\n      const method = requestOrMethod;\n      const params = Array.isArray(callbackOrParams) ? callbackOrParams : callbackOrParams !== undefined ? [callbackOrParams] : [];\n      const request = {\n        jsonrpc: \"2.0\",\n        id: 0,\n        method,\n        params\n      };\n      return this._sendRequestAsync(request).then(res => res.result);\n    } // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n\n\n    if (typeof callbackOrParams === \"function\") {\n      const request = requestOrMethod;\n      const callback = callbackOrParams;\n      return this._sendAsync(request, callback);\n    } // send(JSONRPCRequest[]): JSONRPCResponse[]\n\n\n    if (Array.isArray(requestOrMethod)) {\n      const requests = requestOrMethod;\n      return requests.map(r => this._sendRequest(r));\n    } // send(JSONRPCRequest): JSONRPCResponse\n\n\n    const req = requestOrMethod;\n    return this._sendRequest(req);\n  }\n\n  sendAsync(request, callback) {\n    if (typeof callback !== \"function\") {\n      throw new Error(\"callback is required\");\n    } // send(JSONRPCRequest[], callback): void\n\n\n    if (Array.isArray(request)) {\n      const arrayCb = callback;\n\n      this._sendMultipleRequestsAsync(request).then(responses => arrayCb(null, responses)).catch(err => arrayCb(err, null));\n\n      return;\n    } // send(JSONRPCRequest, callback): void\n\n\n    const cb = callback;\n\n    this._sendRequestAsync(request).then(response => cb(null, response)).catch(err => cb(err, null));\n  }\n\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n        message: \"Expected a single, non-array, object argument.\",\n        data: args\n      });\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n        message: \"'args.method' must be a non-empty string.\",\n        data: args\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n        message: \"'args.params' must be an object or array if provided.\",\n        data: args\n      });\n    }\n\n    const newParams = params === undefined ? [] : params; // WalletLink Requests\n\n    const id = this._relayEventManager.makeRequestId();\n\n    const result = await this._sendRequestAsync({\n      method,\n      params: newParams,\n      jsonrpc: \"2.0\",\n      id\n    });\n    return result.result;\n  }\n\n  async scanQRCode(match) {\n    const relay = await this.initializeRelay();\n    const res = await relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n\n    if (typeof res.result !== \"string\") {\n      throw new Error(\"result was not a string\");\n    }\n\n    return res.result;\n  }\n\n  async genericRequest(data, action) {\n    const relay = await this.initializeRelay();\n    const res = await relay.genericRequest(data, action).promise;\n\n    if (typeof res.result !== \"string\") {\n      throw new Error(\"result was not a string\");\n    }\n\n    return res.result;\n  }\n\n  supportsSubscriptions() {\n    return false;\n  }\n\n  subscribe() {\n    throw new Error(\"Subscriptions are not supported\");\n  }\n\n  unsubscribe() {\n    throw new Error(\"Subscriptions are not supported\");\n  }\n\n  disconnect() {\n    return true;\n  }\n\n  _sendRequest(request) {\n    const response = {\n      jsonrpc: \"2.0\",\n      id: request.id\n    };\n    const {\n      method\n    } = request;\n    response.result = this._handleSynchronousMethods(request);\n\n    if (response.result === undefined) {\n      throw new Error(`WalletLink does not support calling ${method} synchronously without ` + `a callback. Please provide a callback parameter to call ${method} ` + `asynchronously.`);\n    }\n\n    return response;\n  }\n\n  _setAddresses(addresses) {\n    if (!Array.isArray(addresses)) {\n      throw new Error(\"addresses is not an array\");\n    }\n\n    const newAddresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n\n    if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n      return;\n    }\n\n    this._addresses = newAddresses;\n    this.emit(\"accountsChanged\", this._addresses);\n\n    this._storage.setItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n\n    window.dispatchEvent(new CustomEvent(\"walletlink:addresses\", {\n      detail: this._addresses\n    }));\n  }\n\n  _sendRequestAsync(request) {\n    return new Promise((resolve, reject) => {\n      try {\n        const syncResult = this._handleSynchronousMethods(request);\n\n        if (syncResult !== undefined) {\n          return resolve({\n            jsonrpc: \"2.0\",\n            id: request.id,\n            result: syncResult\n          });\n        }\n\n        const filterPromise = this._handleAsynchronousFilterMethods(request);\n\n        if (filterPromise !== undefined) {\n          filterPromise.then(res => resolve(Object.assign(Object.assign({}, res), {\n            id: request.id\n          }))).catch(err => reject(err));\n          return;\n        }\n\n        const subscriptionPromise = this._handleSubscriptionMethods(request);\n\n        if (subscriptionPromise !== undefined) {\n          subscriptionPromise.then(res => resolve({\n            jsonrpc: \"2.0\",\n            id: request.id,\n            result: res.result\n          })).catch(err => reject(err));\n          return;\n        }\n      } catch (err) {\n        return reject(err);\n      }\n\n      this._handleAsynchronousMethods(request).then(res => res && resolve(Object.assign(Object.assign({}, res), {\n        id: request.id\n      }))).catch(err => reject(err));\n    });\n  }\n\n  _sendMultipleRequestsAsync(requests) {\n    return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n  }\n\n  _handleSynchronousMethods(request) {\n    const {\n      method\n    } = request;\n    const params = request.params || [];\n\n    switch (method) {\n      case JSONRPC_1.JSONRPCMethod.eth_accounts:\n        return this._eth_accounts();\n\n      case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n        return this._eth_coinbase();\n\n      case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n        return this._eth_uninstallFilter(params);\n\n      case JSONRPC_1.JSONRPCMethod.net_version:\n        return this._net_version();\n\n      case JSONRPC_1.JSONRPCMethod.eth_chainId:\n        return this._eth_chainId();\n\n      default:\n        return undefined;\n    }\n  }\n\n  async _handleAsynchronousMethods(request) {\n    const {\n      method\n    } = request;\n    const params = request.params || [];\n\n    switch (method) {\n      case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n        return this._eth_requestAccounts();\n\n      case JSONRPC_1.JSONRPCMethod.eth_sign:\n        return this._eth_sign(params);\n\n      case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n        return this._eth_ecRecover(params);\n\n      case JSONRPC_1.JSONRPCMethod.personal_sign:\n        return this._personal_sign(params);\n\n      case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n        return this._personal_ecRecover(params);\n\n      case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n        return this._eth_signTransaction(params);\n\n      case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n        return this._eth_sendRawTransaction(params);\n\n      case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n        return this._eth_sendTransaction(params);\n\n      case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n        return this._eth_signTypedData_v1(params);\n\n      case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n        return this._throwUnsupportedMethodError();\n\n      case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n        return this._eth_signTypedData_v3(params);\n\n      case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n      case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n        return this._eth_signTypedData_v4(params);\n\n      case JSONRPC_1.JSONRPCMethod.walletlink_arbitrary:\n        return this._walletlink_arbitrary(params);\n\n      case JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain:\n        return this._wallet_addEthereumChain(params);\n\n      case JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain:\n        return this._wallet_switchEthereumChain(params);\n\n      case JSONRPC_1.JSONRPCMethod.wallet_watchAsset:\n        return this._wallet_watchAsset(params);\n    }\n\n    const relay = await this.initializeRelay();\n    return relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl);\n  }\n\n  _handleAsynchronousFilterMethods(request) {\n    const {\n      method\n    } = request;\n    const params = request.params || [];\n\n    switch (method) {\n      case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n        return this._eth_newFilter(params);\n\n      case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n        return this._eth_newBlockFilter();\n\n      case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n        return this._eth_newPendingTransactionFilter();\n\n      case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n        return this._eth_getFilterChanges(params);\n\n      case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n        return this._eth_getFilterLogs(params);\n    }\n\n    return undefined;\n  }\n\n  _handleSubscriptionMethods(request) {\n    switch (request.method) {\n      case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n      case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n        return this._subscriptionManager.handleRequest(request);\n    }\n\n    return undefined;\n  }\n\n  _isKnownAddress(addressString) {\n    try {\n      const address = (0, util_1.ensureAddressString)(addressString);\n\n      const lowercaseAddresses = this._addresses.map(address => (0, util_1.ensureAddressString)(address));\n\n      return lowercaseAddresses.includes(address);\n    } catch (_a) {}\n\n    return false;\n  }\n\n  _ensureKnownAddress(addressString) {\n    if (!this._isKnownAddress(addressString)) {\n      this._walletLinkAnalytics.sendEvent(init_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n\n      throw new Error(\"Unknown Ethereum address\");\n    }\n  }\n\n  _prepareTransactionParams(tx) {\n    const fromAddress = tx.from ? (0, util_1.ensureAddressString)(tx.from) : this.selectedAddress;\n\n    if (!fromAddress) {\n      throw new Error(\"Ethereum address is unavailable\");\n    }\n\n    this._ensureKnownAddress(fromAddress);\n\n    const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n    const weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n    const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n    const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n    const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n    const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n    const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n    const gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n    const chainId = this.getChainId();\n    return {\n      fromAddress,\n      toAddress,\n      weiValue,\n      data,\n      nonce,\n      gasPriceInWei,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      gasLimit,\n      chainId\n    };\n  }\n\n  _requireAuthorization() {\n    if (this._addresses.length === 0) {\n      throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n    }\n  }\n\n  _throwUnsupportedMethodError() {\n    throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n  }\n\n  async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n    this._ensureKnownAddress(address);\n\n    try {\n      const relay = await this.initializeRelay();\n      const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: res.result\n      };\n    } catch (err) {\n      if (typeof err.message === \"string\" && err.message.match(/(denied|rejected)/i)) {\n        throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n      }\n\n      throw err;\n    }\n  }\n\n  async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n    const relay = await this.initializeRelay();\n    const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: res.result\n    };\n  }\n\n  _eth_accounts() {\n    return [...this._addresses];\n  }\n\n  _eth_coinbase() {\n    return this.selectedAddress || null;\n  }\n\n  _net_version() {\n    return this.getChainId().toString(10);\n  }\n\n  _eth_chainId() {\n    return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n  }\n\n  getChainId() {\n    const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY) || \"1\";\n    const chainId = parseInt(chainIdStr, 10);\n    return (0, util_1.ensureIntNumber)(chainId);\n  }\n\n  async _eth_requestAccounts() {\n    this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n      method: \"provider::_eth_requestAccounts\",\n      addresses_length: this._addresses.length,\n      sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n    });\n\n    if (this._addresses.length > 0) {\n      return Promise.resolve({\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: this._addresses\n      });\n    }\n\n    let res;\n\n    try {\n      const relay = await this.initializeRelay();\n      res = await relay.requestEthereumAccounts().promise;\n    } catch (err) {\n      if (typeof err.message === \"string\" && err.message.match(/(denied|rejected)/i)) {\n        throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n      }\n\n      throw err;\n    }\n\n    if (!res.result) {\n      throw new Error(\"accounts received is empty\");\n    }\n\n    this._setAddresses(res.result);\n\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: this._addresses\n    };\n  }\n\n  _eth_sign(params) {\n    this._requireAuthorization();\n\n    const address = (0, util_1.ensureAddressString)(params[0]);\n    const message = (0, util_1.ensureBuffer)(params[1]);\n    return this._signEthereumMessage(message, address, false);\n  }\n\n  _eth_ecRecover(params) {\n    const message = (0, util_1.ensureBuffer)(params[0]);\n    const signature = (0, util_1.ensureBuffer)(params[1]);\n    return this._ethereumAddressFromSignedMessage(message, signature, false);\n  }\n\n  _personal_sign(params) {\n    this._requireAuthorization();\n\n    const message = (0, util_1.ensureBuffer)(params[0]);\n    const address = (0, util_1.ensureAddressString)(params[1]);\n    return this._signEthereumMessage(message, address, true);\n  }\n\n  _personal_ecRecover(params) {\n    const message = (0, util_1.ensureBuffer)(params[0]);\n    const signature = (0, util_1.ensureBuffer)(params[1]);\n    return this._ethereumAddressFromSignedMessage(message, signature, true);\n  }\n\n  async _eth_signTransaction(params) {\n    this._requireAuthorization();\n\n    const tx = this._prepareTransactionParams(params[0] || {});\n\n    try {\n      const relay = await this.initializeRelay();\n      const res = await relay.signEthereumTransaction(tx).promise;\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: res.result\n      };\n    } catch (err) {\n      if (typeof err.message === \"string\" && err.message.match(/(denied|rejected)/i)) {\n        throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n      }\n\n      throw err;\n    }\n  }\n\n  async _eth_sendRawTransaction(params) {\n    const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n    const relay = await this.initializeRelay();\n    const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: res.result\n    };\n  }\n\n  async _eth_sendTransaction(params) {\n    this._requireAuthorization();\n\n    const tx = this._prepareTransactionParams(params[0] || {});\n\n    try {\n      const relay = await this.initializeRelay();\n      const res = await relay.signAndSubmitEthereumTransaction(tx).promise;\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: res.result\n      };\n    } catch (err) {\n      if (typeof err.message === \"string\" && err.message.match(/(denied|rejected)/i)) {\n        throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n      }\n\n      throw err;\n    }\n  }\n\n  async _eth_signTypedData_v1(params) {\n    this._requireAuthorization();\n\n    const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n    const address = (0, util_1.ensureAddressString)(params[1]);\n\n    this._ensureKnownAddress(address);\n\n    const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n      data: typedData\n    });\n    const typedDataJSON = JSON.stringify(typedData, null, 2);\n    return this._signEthereumMessage(message, address, false, typedDataJSON);\n  }\n\n  async _eth_signTypedData_v3(params) {\n    this._requireAuthorization();\n\n    const address = (0, util_1.ensureAddressString)(params[0]);\n    const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n\n    this._ensureKnownAddress(address);\n\n    const message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n      data: typedData\n    });\n    const typedDataJSON = JSON.stringify(typedData, null, 2);\n    return this._signEthereumMessage(message, address, false, typedDataJSON);\n  }\n\n  async _eth_signTypedData_v4(params) {\n    this._requireAuthorization();\n\n    const address = (0, util_1.ensureAddressString)(params[0]);\n    const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n\n    this._ensureKnownAddress(address);\n\n    const message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n      data: typedData\n    });\n    const typedDataJSON = JSON.stringify(typedData, null, 2);\n    return this._signEthereumMessage(message, address, false, typedDataJSON);\n  }\n\n  async _walletlink_arbitrary(params) {\n    const action = params[0];\n    const data = params[1];\n\n    if (typeof data !== \"string\") {\n      throw new Error(\"parameter must be a string\");\n    }\n\n    if (typeof action !== \"object\" || action === null) {\n      throw new Error(\"parameter must be an object\");\n    }\n\n    const result = await this.genericRequest(action, data);\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result\n    };\n  }\n\n  async _wallet_addEthereumChain(params) {\n    var _a, _b, _c, _d;\n\n    const request = params[0];\n\n    if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        error: {\n          code: 2,\n          message: `please pass in at least 1 rpcUrl`\n        }\n      };\n    }\n\n    if (!request.chainName || request.chainName.trim() === \"\") {\n      throw eth_rpc_errors_1.ethErrors.provider.custom({\n        code: 0,\n        message: \"chainName is a required field\"\n      });\n    }\n\n    if (!request.nativeCurrency) {\n      throw eth_rpc_errors_1.ethErrors.provider.custom({\n        code: 0,\n        message: \"nativeCurrency is a required field\"\n      });\n    }\n\n    const chainIdNumber = parseInt(request.chainId, 16);\n    const success = await this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n\n    if (success) {\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        result: null\n      };\n    } else {\n      return {\n        jsonrpc: \"2.0\",\n        id: 0,\n        error: {\n          code: 2,\n          message: `unable to add ethereum chain`\n        }\n      };\n    }\n  }\n\n  async _wallet_switchEthereumChain(params) {\n    const request = params[0];\n    await this.switchEthereumChain(parseInt(request.chainId, 16));\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: null\n    };\n  }\n\n  async _wallet_watchAsset(params) {\n    var _a;\n\n    const request = Array.isArray(params) ? params[0] : params;\n\n    if (((_a = request.type) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n      throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n        message: \"type is a required field\"\n      });\n    }\n\n    if (request.type !== \"ERC20\") {\n      throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n        message: `Asset of type '${request.type}' not supported`\n      });\n    }\n\n    if (!(request === null || request === void 0 ? void 0 : request.options)) {\n      throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n        message: \"options is a required field\"\n      });\n    }\n\n    if (!request.options.address) {\n      throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n        message: \"option address is a required option\"\n      });\n    }\n\n    const {\n      address,\n      symbol,\n      image,\n      decimals\n    } = request.options;\n    const res = await this.watchAsset(request.type, address, symbol, decimals, image);\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: res\n    };\n  }\n\n  _eth_uninstallFilter(params) {\n    const filterId = (0, util_1.ensureHexString)(params[0]);\n    return this._filterPolyfill.uninstallFilter(filterId);\n  }\n\n  async _eth_newFilter(params) {\n    const param = params[0];\n    const filterId = await this._filterPolyfill.newFilter(param);\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: filterId\n    };\n  }\n\n  async _eth_newBlockFilter() {\n    const filterId = await this._filterPolyfill.newBlockFilter();\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: filterId\n    };\n  }\n\n  async _eth_newPendingTransactionFilter() {\n    const filterId = await this._filterPolyfill.newPendingTransactionFilter();\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: filterId\n    };\n  }\n\n  _eth_getFilterChanges(params) {\n    const filterId = (0, util_1.ensureHexString)(params[0]);\n    return this._filterPolyfill.getFilterChanges(filterId);\n  }\n\n  _eth_getFilterLogs(params) {\n    const filterId = (0, util_1.ensureHexString)(params[0]);\n    return this._filterPolyfill.getFilterLogs(filterId);\n  }\n\n  initializeRelay() {\n    if (this._relay) {\n      return Promise.resolve(this._relay);\n    }\n\n    return this._relayProvider().then(relay => {\n      relay.setAccountsCallback(accounts => this._setAddresses(accounts));\n      relay.setChainCallback((chainId, jsonRpcUrl) => {\n        this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10), true);\n      });\n      this._relay = relay;\n      return relay;\n    });\n  }\n\n}\n\nexports.WalletLinkProvider = WalletLinkProvider;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","WalletLinkProvider","safe_event_emitter_1","require","bn_js_1","eth_rpc_errors_1","WalletLinkAnalytics_1","init_1","Session_1","WalletLinkRelayAbstract_1","util_1","eth_eip712_util_1","FilterPolyfill_1","JSONRPC_1","SubscriptionManager_1","DEFAULT_CHAIN_ID_KEY","DEFAULT_JSON_RPC_URL","HAS_CHAIN_BEEN_SWITCHED_KEY","HAS_CHAIN_OVERRIDDEN_FROM_RELAY","default","constructor","options","_a","_filterPolyfill","FilterPolyfill","_subscriptionManager","SubscriptionManager","_relay","_addresses","hasMadeFirstChainChangedEmission","_send","send","bind","_sendAsync","sendAsync","setProviderInfo","updateProviderInfo","getChainId","setAppInfo","enable","close","request","_setAddresses","scanQRCode","genericRequest","_jsonRpcUrlFromOpts","jsonRpcUrl","_overrideIsMetaMask","overrideIsMetaMask","_relayProvider","relayProvider","_storage","storage","_relayEventManager","relayEventManager","_walletLinkAnalytics","walletLinkAnalytics","WalletLinkAnalytics","isCoinbaseWallet","overrideIsCoinbaseWallet","chainId","chainIdStr","prepend0x","toString","emit","cachedAddresses","getItem","LOCAL_STORAGE_ADDRESSES_KEY","addresses","split","map","address","ensureAddressString","events","on","notification","type","method","data","params","length","initializeRelay","window","addEventListener","event","action","_chainId","Number","selectedAddress","undefined","networkVersion","isWalletLink","isMetaMask","host","connected","isConnected","setItem","isChainOverridden","fromRelay","hasChainSwitched","originalChainId","chainChanged","ensureIntNumber","watchAsset","symbol","decimals","image","relay","result","promise","addEthereumChain","rpcUrls","blockExplorerUrls","chainName","iconUrls","nativeCurrency","_b","res","isApproved","switchEthereumChain","errorCode","ethErrors","provider","custom","code","switchResponse","rpcUrl","appName","appLogoUrl","then","sendEvent","EVENTS","ETH_ACCOUNTS_STATE","addresses_length","sessionIdHash","Session","hash","session","id","JSONRPCMethod","eth_requestAccounts","resetAndReload","requestOrMethod","callbackOrParams","Array","isArray","jsonrpc","_sendRequestAsync","callback","requests","r","_sendRequest","req","Error","arrayCb","_sendMultipleRequestsAsync","responses","catch","err","cb","response","args","rpc","invalidRequest","message","newParams","makeRequestId","match","ensureRegExpString","supportsSubscriptions","subscribe","unsubscribe","disconnect","_handleSynchronousMethods","newAddresses","JSON","stringify","join","dispatchEvent","CustomEvent","detail","Promise","resolve","reject","syncResult","filterPromise","_handleAsynchronousFilterMethods","assign","subscriptionPromise","_handleSubscriptionMethods","_handleAsynchronousMethods","all","eth_accounts","_eth_accounts","eth_coinbase","_eth_coinbase","eth_uninstallFilter","_eth_uninstallFilter","net_version","_net_version","eth_chainId","_eth_chainId","_eth_requestAccounts","eth_sign","_eth_sign","eth_ecRecover","_eth_ecRecover","personal_sign","_personal_sign","personal_ecRecover","_personal_ecRecover","eth_signTransaction","_eth_signTransaction","eth_sendRawTransaction","_eth_sendRawTransaction","eth_sendTransaction","_eth_sendTransaction","eth_signTypedData_v1","_eth_signTypedData_v1","eth_signTypedData_v2","_throwUnsupportedMethodError","eth_signTypedData_v3","_eth_signTypedData_v3","eth_signTypedData_v4","eth_signTypedData","_eth_signTypedData_v4","walletlink_arbitrary","_walletlink_arbitrary","wallet_addEthereumChain","_wallet_addEthereumChain","wallet_switchEthereumChain","_wallet_switchEthereumChain","wallet_watchAsset","_wallet_watchAsset","makeEthereumJSONRPCRequest","eth_newFilter","_eth_newFilter","eth_newBlockFilter","_eth_newBlockFilter","eth_newPendingTransactionFilter","_eth_newPendingTransactionFilter","eth_getFilterChanges","_eth_getFilterChanges","eth_getFilterLogs","_eth_getFilterLogs","eth_subscribe","eth_unsubscribe","handleRequest","_isKnownAddress","addressString","lowercaseAddresses","includes","_ensureKnownAddress","UNKNOWN_ADDRESS_ENCOUNTERED","_prepareTransactionParams","tx","fromAddress","from","toAddress","to","weiValue","ensureBN","ensureBuffer","Buffer","alloc","nonce","gasPriceInWei","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gasLimit","gas","_requireAuthorization","unauthorized","unsupportedMethod","_signEthereumMessage","addPrefix","typedDataJson","signEthereumMessage","userRejectedRequest","_ethereumAddressFromSignedMessage","signature","ethereumAddressFromSignedMessage","hexStringFromIntNumber","parseInt","requestEthereumAccounts","signEthereumTransaction","signedTransaction","submitEthereumTransaction","signAndSubmitEthereumTransaction","typedData","ensureParsedJSONObject","hashForSignTypedDataLegacy","typedDataJSON","hashForSignTypedData_v3","hashForSignTypedData_v4","_c","_d","error","trim","chainIdNumber","success","invalidParams","filterId","ensureHexString","uninstallFilter","param","newFilter","newBlockFilter","newPendingTransactionFilter","getFilterChanges","getFilterLogs","setAccountsCallback","accounts","setChainCallback"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/walletlink/dist/provider/WalletLinkProvider.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletLinkProvider = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nconst WalletLinkAnalytics_1 = require(\"../connection/WalletLinkAnalytics\");\nconst init_1 = require(\"../init\");\nconst Session_1 = require(\"../relay/Session\");\nconst WalletLinkRelayAbstract_1 = require(\"../relay/WalletLinkRelayAbstract\");\nconst util_1 = require(\"../util\");\nconst eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\nconst JSONRPC_1 = require(\"./JSONRPC\");\nconst SubscriptionManager_1 = require(\"./SubscriptionManager\");\nconst DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nconst DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\n// Indicates chain has been switched by switchEthereumChain or addEthereumChain request\nconst HAS_CHAIN_BEEN_SWITCHED_KEY = \"HasChainBeenSwitched\";\nconst HAS_CHAIN_OVERRIDDEN_FROM_RELAY = \"HasChainOverriddenFromRelay\";\nclass WalletLinkProvider extends safe_event_emitter_1.default {\n    constructor(options) {\n        var _a;\n        super();\n        this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n        this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(this);\n        this._relay = null;\n        this._addresses = [];\n        this.hasMadeFirstChainChangedEmission = false;\n        this._send = this.send.bind(this);\n        this._sendAsync = this.sendAsync.bind(this);\n        this.setProviderInfo = this.setProviderInfo.bind(this);\n        this.updateProviderInfo = this.updateProviderInfo.bind(this);\n        this.getChainId = this.getChainId.bind(this);\n        this.setAppInfo = this.setAppInfo.bind(this);\n        this.enable = this.enable.bind(this);\n        this.close = this.close.bind(this);\n        this.send = this.send.bind(this);\n        this.sendAsync = this.sendAsync.bind(this);\n        this.request = this.request.bind(this);\n        this._setAddresses = this._setAddresses.bind(this);\n        this.scanQRCode = this.scanQRCode.bind(this);\n        this.genericRequest = this.genericRequest.bind(this);\n        this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n        this._overrideIsMetaMask = options.overrideIsMetaMask;\n        this._relayProvider = options.relayProvider;\n        this._storage = options.storage;\n        this._relayEventManager = options.relayEventManager;\n        this._walletLinkAnalytics = options.walletLinkAnalytics\n            ? options.walletLinkAnalytics\n            : new WalletLinkAnalytics_1.WalletLinkAnalytics();\n        this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n        const chainId = this.getChainId();\n        const chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n        // indicate that we've connected, for EIP-1193 compliance\n        this.emit(\"connect\", { chainIdStr });\n        const cachedAddresses = this._storage.getItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n        if (cachedAddresses) {\n            const addresses = cachedAddresses.split(\" \");\n            if (addresses[0] !== \"\") {\n                this._addresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n                this.emit(\"accountsChanged\", addresses);\n            }\n        }\n        this._subscriptionManager.events.on(\"notification\", (notification) => {\n            this.emit(\"message\", {\n                type: notification.method,\n                data: notification.params\n            });\n        });\n        if (this._addresses.length > 0) {\n            void this.initializeRelay();\n        }\n        window.addEventListener(\"message\", event => {\n            var _a;\n            if (event.data.type !== \"walletLinkMessage\")\n                return;\n            if (event.data.data.action === \"defaultChainChanged\") {\n                const _chainId = event.data.data.chainId;\n                const jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : this.jsonRpcUrl;\n                this.updateProviderInfo(jsonRpcUrl, Number(_chainId), true);\n            }\n        });\n    }\n    get selectedAddress() {\n        return this._addresses[0] || undefined;\n    }\n    get networkVersion() {\n        return this.getChainId().toString(10);\n    }\n    get chainId() {\n        return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n    get isWalletLink() {\n        return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n    get isMetaMask() {\n        return this._overrideIsMetaMask;\n    }\n    get host() {\n        return this.jsonRpcUrl;\n    }\n    get connected() {\n        return true;\n    }\n    isConnected() {\n        return true;\n    }\n    get jsonRpcUrl() {\n        var _a;\n        return ((_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts);\n    }\n    set jsonRpcUrl(value) {\n        this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n    get isChainOverridden() {\n        return this._storage.getItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY) === \"true\";\n    }\n    set isChainOverridden(value) {\n        this._storage.setItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY, value.toString());\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    setProviderInfo(jsonRpcUrl, chainId) {\n        if (this.isChainOverridden)\n            return;\n        this.updateProviderInfo(jsonRpcUrl, this.getChainId(), false);\n    }\n    updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n        const hasChainSwitched = this._storage.getItem(HAS_CHAIN_BEEN_SWITCHED_KEY) === \"true\";\n        if (hasChainSwitched && fromRelay)\n            return;\n        if (fromRelay) {\n            this.isChainOverridden = true;\n        }\n        this.jsonRpcUrl = jsonRpcUrl;\n        // emit chainChanged event if necessary\n        const originalChainId = this.getChainId();\n        this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n        const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n        if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n            this.emit(\"chainChanged\", this.getChainId());\n            this.hasMadeFirstChainChangedEmission = true;\n        }\n    }\n    async watchAsset(type, address, symbol, decimals, image) {\n        const relay = await this.initializeRelay();\n        const result = await relay.watchAsset(type, address, symbol, decimals, image).promise;\n        return !!result.result;\n    }\n    async addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b;\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return false;\n        }\n        const relay = await this.initializeRelay();\n        const res = await relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n        if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n            this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n            this.updateProviderInfo(rpcUrls[0], chainId, false);\n        }\n        return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n    }\n    async switchEthereumChain(chainId) {\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return;\n        }\n        const relay = await this.initializeRelay();\n        const res = await relay.switchEthereumChain(chainId.toString(10)).promise;\n        if (res.errorCode) {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: res.errorCode\n            });\n        }\n        const switchResponse = res.result;\n        if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n            this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n            this.updateProviderInfo(switchResponse.rpcUrl, chainId, false);\n        }\n    }\n    setAppInfo(appName, appLogoUrl) {\n        void this.initializeRelay().then(relay => relay.setAppInfo(appName, appLogoUrl));\n    }\n    async enable() {\n        this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::enable\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n        });\n        if (this._addresses.length > 0) {\n            return [...this._addresses];\n        }\n        return await this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n    }\n    close() {\n        void this.initializeRelay().then(relay => relay.resetAndReload());\n    }\n    send(requestOrMethod, callbackOrParams) {\n        // send<T>(method, params): Promise<T>\n        if (typeof requestOrMethod === \"string\") {\n            const method = requestOrMethod;\n            const params = Array.isArray(callbackOrParams)\n                ? callbackOrParams\n                : callbackOrParams !== undefined\n                    ? [callbackOrParams]\n                    : [];\n            const request = {\n                jsonrpc: \"2.0\",\n                id: 0,\n                method,\n                params\n            };\n            return this._sendRequestAsync(request).then(res => res.result);\n        }\n        // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n        if (typeof callbackOrParams === \"function\") {\n            const request = requestOrMethod;\n            const callback = callbackOrParams;\n            return this._sendAsync(request, callback);\n        }\n        // send(JSONRPCRequest[]): JSONRPCResponse[]\n        if (Array.isArray(requestOrMethod)) {\n            const requests = requestOrMethod;\n            return requests.map(r => this._sendRequest(r));\n        }\n        // send(JSONRPCRequest): JSONRPCResponse\n        const req = requestOrMethod;\n        return this._sendRequest(req);\n    }\n    sendAsync(request, callback) {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"callback is required\");\n        }\n        // send(JSONRPCRequest[], callback): void\n        if (Array.isArray(request)) {\n            const arrayCb = callback;\n            this._sendMultipleRequestsAsync(request)\n                .then(responses => arrayCb(null, responses))\n                .catch(err => arrayCb(err, null));\n            return;\n        }\n        // send(JSONRPCRequest, callback): void\n        const cb = callback;\n        this._sendRequestAsync(request)\n            .then(response => cb(null, response))\n            .catch(err => cb(err, null));\n    }\n    async request(args) {\n        if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args\n            });\n        }\n        const { method, params } = args;\n        if (typeof method !== \"string\" || method.length === 0) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args\n            });\n        }\n        if (params !== undefined &&\n            !Array.isArray(params) &&\n            (typeof params !== \"object\" || params === null)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args\n            });\n        }\n        const newParams = params === undefined ? [] : params;\n        // WalletLink Requests\n        const id = this._relayEventManager.makeRequestId();\n        const result = await this._sendRequestAsync({\n            method,\n            params: newParams,\n            jsonrpc: \"2.0\",\n            id\n        });\n        return result.result;\n    }\n    async scanQRCode(match) {\n        const relay = await this.initializeRelay();\n        const res = await relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    async genericRequest(data, action) {\n        const relay = await this.initializeRelay();\n        const res = await relay.genericRequest(data, action).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    supportsSubscriptions() {\n        return false;\n    }\n    subscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    unsubscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    disconnect() {\n        return true;\n    }\n    _sendRequest(request) {\n        const response = {\n            jsonrpc: \"2.0\",\n            id: request.id\n        };\n        const { method } = request;\n        response.result = this._handleSynchronousMethods(request);\n        if (response.result === undefined) {\n            throw new Error(`WalletLink does not support calling ${method} synchronously without ` +\n                `a callback. Please provide a callback parameter to call ${method} ` +\n                `asynchronously.`);\n        }\n        return response;\n    }\n    _setAddresses(addresses) {\n        if (!Array.isArray(addresses)) {\n            throw new Error(\"addresses is not an array\");\n        }\n        const newAddresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n        if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n            return;\n        }\n        this._addresses = newAddresses;\n        this.emit(\"accountsChanged\", this._addresses);\n        this._storage.setItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n        window.dispatchEvent(new CustomEvent(\"walletlink:addresses\", { detail: this._addresses }));\n    }\n    _sendRequestAsync(request) {\n        return new Promise((resolve, reject) => {\n            try {\n                const syncResult = this._handleSynchronousMethods(request);\n                if (syncResult !== undefined) {\n                    return resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: syncResult\n                    });\n                }\n                const filterPromise = this._handleAsynchronousFilterMethods(request);\n                if (filterPromise !== undefined) {\n                    filterPromise\n                        .then(res => resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                        .catch(err => reject(err));\n                    return;\n                }\n                const subscriptionPromise = this._handleSubscriptionMethods(request);\n                if (subscriptionPromise !== undefined) {\n                    subscriptionPromise\n                        .then(res => resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: res.result\n                    }))\n                        .catch(err => reject(err));\n                    return;\n                }\n            }\n            catch (err) {\n                return reject(err);\n            }\n            this._handleAsynchronousMethods(request)\n                .then(res => res && resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                .catch(err => reject(err));\n        });\n    }\n    _sendMultipleRequestsAsync(requests) {\n        return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n    }\n    _handleSynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_accounts:\n                return this._eth_accounts();\n            case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n                return this._eth_coinbase();\n            case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n                return this._eth_uninstallFilter(params);\n            case JSONRPC_1.JSONRPCMethod.net_version:\n                return this._net_version();\n            case JSONRPC_1.JSONRPCMethod.eth_chainId:\n                return this._eth_chainId();\n            default:\n                return undefined;\n        }\n    }\n    async _handleAsynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n                return this._eth_requestAccounts();\n            case JSONRPC_1.JSONRPCMethod.eth_sign:\n                return this._eth_sign(params);\n            case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n                return this._eth_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.personal_sign:\n                return this._personal_sign(params);\n            case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n                return this._personal_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n                return this._eth_signTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n                return this._eth_sendRawTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n                return this._eth_sendTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n                return this._eth_signTypedData_v1(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n                return this._throwUnsupportedMethodError();\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n                return this._eth_signTypedData_v3(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n                return this._eth_signTypedData_v4(params);\n            case JSONRPC_1.JSONRPCMethod.walletlink_arbitrary:\n                return this._walletlink_arbitrary(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain:\n                return this._wallet_addEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain:\n                return this._wallet_switchEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_watchAsset:\n                return this._wallet_watchAsset(params);\n        }\n        const relay = await this.initializeRelay();\n        return relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl);\n    }\n    _handleAsynchronousFilterMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n                return this._eth_newFilter(params);\n            case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n                return this._eth_newBlockFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n                return this._eth_newPendingTransactionFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n                return this._eth_getFilterChanges(params);\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n                return this._eth_getFilterLogs(params);\n        }\n        return undefined;\n    }\n    _handleSubscriptionMethods(request) {\n        switch (request.method) {\n            case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n            case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n                return this._subscriptionManager.handleRequest(request);\n        }\n        return undefined;\n    }\n    _isKnownAddress(addressString) {\n        try {\n            const address = (0, util_1.ensureAddressString)(addressString);\n            const lowercaseAddresses = this._addresses.map(address => (0, util_1.ensureAddressString)(address));\n            return lowercaseAddresses.includes(address);\n        }\n        catch (_a) { }\n        return false;\n    }\n    _ensureKnownAddress(addressString) {\n        if (!this._isKnownAddress(addressString)) {\n            this._walletLinkAnalytics.sendEvent(init_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n            throw new Error(\"Unknown Ethereum address\");\n        }\n    }\n    _prepareTransactionParams(tx) {\n        const fromAddress = tx.from\n            ? (0, util_1.ensureAddressString)(tx.from)\n            : this.selectedAddress;\n        if (!fromAddress) {\n            throw new Error(\"Ethereum address is unavailable\");\n        }\n        this._ensureKnownAddress(fromAddress);\n        const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n        const weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n        const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n        const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n        const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n        const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n        const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n        const gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n        const chainId = this.getChainId();\n        return {\n            fromAddress,\n            toAddress,\n            weiValue,\n            data,\n            nonce,\n            gasPriceInWei,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit,\n            chainId\n        };\n    }\n    _requireAuthorization() {\n        if (this._addresses.length === 0) {\n            throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n        }\n    }\n    _throwUnsupportedMethodError() {\n        throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n    async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        this._ensureKnownAddress(address);\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n            }\n            throw err;\n        }\n    }\n    async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        const relay = await this.initializeRelay();\n        const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    _eth_accounts() {\n        return [...this._addresses];\n    }\n    _eth_coinbase() {\n        return this.selectedAddress || null;\n    }\n    _net_version() {\n        return this.getChainId().toString(10);\n    }\n    _eth_chainId() {\n        return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n    getChainId() {\n        const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY) || \"1\";\n        const chainId = parseInt(chainIdStr, 10);\n        return (0, util_1.ensureIntNumber)(chainId);\n    }\n    async _eth_requestAccounts() {\n        this._walletLinkAnalytics.sendEvent(init_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::_eth_requestAccounts\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : null\n        });\n        if (this._addresses.length > 0) {\n            return Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n            });\n        }\n        let res;\n        try {\n            const relay = await this.initializeRelay();\n            res = await relay.requestEthereumAccounts().promise;\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            }\n            throw err;\n        }\n        if (!res.result) {\n            throw new Error(\"accounts received is empty\");\n        }\n        this._setAddresses(res.result);\n        return { jsonrpc: \"2.0\", id: 0, result: this._addresses };\n    }\n    _eth_sign(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const message = (0, util_1.ensureBuffer)(params[1]);\n        return this._signEthereumMessage(message, address, false);\n    }\n    _eth_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n    _personal_sign(params) {\n        this._requireAuthorization();\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        return this._signEthereumMessage(message, address, true);\n    }\n    _personal_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n    async _eth_signTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_sendRawTransaction(params) {\n        const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n        const relay = await this.initializeRelay();\n        const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    async _eth_sendTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signAndSubmitEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_signTypedData_v1(params) {\n        this._requireAuthorization();\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v3(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v3({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v4(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v4({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _walletlink_arbitrary(params) {\n        const action = params[0];\n        const data = params[1];\n        if (typeof data !== \"string\") {\n            throw new Error(\"parameter must be a string\");\n        }\n        if (typeof action !== \"object\" || action === null) {\n            throw new Error(\"parameter must be an object\");\n        }\n        const result = await this.genericRequest(action, data);\n        return { jsonrpc: \"2.0\", id: 0, result };\n    }\n    async _wallet_addEthereumChain(params) {\n        var _a, _b, _c, _d;\n        const request = params[0];\n        if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `please pass in at least 1 rpcUrl` }\n            };\n        }\n        if (!request.chainName || request.chainName.trim() === \"\") {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"chainName is a required field\"\n            });\n        }\n        if (!request.nativeCurrency) {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"nativeCurrency is a required field\"\n            });\n        }\n        const chainIdNumber = parseInt(request.chainId, 16);\n        const success = await this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n        if (success) {\n            return { jsonrpc: \"2.0\", id: 0, result: null };\n        }\n        else {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `unable to add ethereum chain` }\n            };\n        }\n    }\n    async _wallet_switchEthereumChain(params) {\n        const request = params[0];\n        await this.switchEthereumChain(parseInt(request.chainId, 16));\n        return { jsonrpc: \"2.0\", id: 0, result: null };\n    }\n    async _wallet_watchAsset(params) {\n        var _a;\n        const request = (Array.isArray(params) ? params[0] : params);\n        if (((_a = request.type) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"type is a required field\"\n            });\n        }\n        if (request.type !== \"ERC20\") {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: `Asset of type '${request.type}' not supported`\n            });\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"options is a required field\"\n            });\n        }\n        if (!request.options.address) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"option address is a required option\"\n            });\n        }\n        const { address, symbol, image, decimals } = request.options;\n        const res = await this.watchAsset(request.type, address, symbol, decimals, image);\n        return { jsonrpc: \"2.0\", id: 0, result: res };\n    }\n    _eth_uninstallFilter(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.uninstallFilter(filterId);\n    }\n    async _eth_newFilter(params) {\n        const param = params[0];\n        const filterId = await this._filterPolyfill.newFilter(param);\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newBlockFilter() {\n        const filterId = await this._filterPolyfill.newBlockFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newPendingTransactionFilter() {\n        const filterId = await this._filterPolyfill.newPendingTransactionFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    _eth_getFilterChanges(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterChanges(filterId);\n    }\n    _eth_getFilterLogs(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterLogs(filterId);\n    }\n    initializeRelay() {\n        if (this._relay) {\n            return Promise.resolve(this._relay);\n        }\n        return this._relayProvider().then(relay => {\n            relay.setAccountsCallback(accounts => this._setAddresses(accounts));\n            relay.setChainCallback((chainId, jsonRpcUrl) => {\n                this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10), true);\n            });\n            this._relay = relay;\n            return relay;\n        });\n    }\n}\nexports.WalletLinkProvider = WalletLinkProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}