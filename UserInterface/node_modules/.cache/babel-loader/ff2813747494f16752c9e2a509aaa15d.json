{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _classCallCheck = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RxWebSocket = exports.ConnectionState = void 0;\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar ConnectionState;\n\n(function (ConnectionState) {\n  ConnectionState[ConnectionState[\"DISCONNECTED\"] = 0] = \"DISCONNECTED\";\n  ConnectionState[ConnectionState[\"CONNECTING\"] = 1] = \"CONNECTING\";\n  ConnectionState[ConnectionState[\"CONNECTED\"] = 2] = \"CONNECTED\";\n})(ConnectionState = exports.ConnectionState || (exports.ConnectionState = {}));\n/**\n * Rx-ified WebSocket\n */\n\n\nvar RxWebSocket = /*#__PURE__*/function () {\n  /**\n   * Constructor\n   * @param url WebSocket server URL\n   * @param [WebSocketClass] Custom WebSocket implementation\n   */\n  function RxWebSocket(url) {\n    var WebSocketClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : WebSocket;\n\n    _classCallCheck(this, RxWebSocket);\n\n    this.WebSocketClass = WebSocketClass;\n    this.webSocket = null;\n    this.connectionStateSubject = new rxjs_1.BehaviorSubject(ConnectionState.DISCONNECTED);\n    this.incomingDataSubject = new rxjs_1.Subject();\n    this.url = url.replace(/^http/, \"ws\");\n  }\n  /**\n   * Make a websocket connection\n   * @returns an Observable that completes when connected\n   */\n\n\n  _createClass(RxWebSocket, [{\n    key: \"connect\",\n    value: function connect() {\n      var _this = this;\n\n      if (this.webSocket) {\n        return (0, rxjs_1.throwError)(new Error(\"webSocket object is not null\"));\n      }\n\n      return new rxjs_1.Observable(function (obs) {\n        var webSocket;\n\n        try {\n          _this.webSocket = webSocket = new _this.WebSocketClass(_this.url);\n        } catch (err) {\n          obs.error(err);\n          return;\n        }\n\n        _this.connectionStateSubject.next(ConnectionState.CONNECTING);\n\n        webSocket.onclose = function (evt) {\n          _this.clearWebSocket();\n\n          obs.error(new Error(\"websocket error \".concat(evt.code, \": \").concat(evt.reason)));\n\n          _this.connectionStateSubject.next(ConnectionState.DISCONNECTED);\n        };\n\n        webSocket.onopen = function (_) {\n          obs.next();\n          obs.complete();\n\n          _this.connectionStateSubject.next(ConnectionState.CONNECTED);\n        };\n\n        webSocket.onmessage = function (evt) {\n          _this.incomingDataSubject.next(evt.data);\n        };\n      }).pipe((0, operators_1.take)(1));\n    }\n    /**\n     * Disconnect from server\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      var webSocket = this.webSocket;\n\n      if (!webSocket) {\n        return;\n      }\n\n      this.clearWebSocket();\n      this.connectionStateSubject.next(ConnectionState.DISCONNECTED);\n\n      try {\n        webSocket.close();\n      } catch (_a) {}\n    }\n    /**\n     * Emit current connection state and subsequent changes\n     * @returns an Observable for the connection state\n     */\n\n  }, {\n    key: \"connectionState$\",\n    get: function get() {\n      return this.connectionStateSubject.asObservable();\n    }\n    /**\n     * Emit incoming data from server\n     * @returns an Observable for the data received\n     */\n\n  }, {\n    key: \"incomingData$\",\n    get: function get() {\n      return this.incomingDataSubject.asObservable();\n    }\n    /**\n     * Emit incoming JSON data from server. non-JSON data are ignored\n     * @returns an Observable for parsed JSON data\n     */\n\n  }, {\n    key: \"incomingJSONData$\",\n    get: function get() {\n      return this.incomingData$.pipe((0, operators_1.flatMap)(function (m) {\n        var j;\n\n        try {\n          j = JSON.parse(m);\n        } catch (err) {\n          return (0, rxjs_1.empty)();\n        }\n\n        return (0, rxjs_1.of)(j);\n      }));\n    }\n    /**\n     * Send data to server\n     * @param data text to send\n     */\n\n  }, {\n    key: \"sendData\",\n    value: function sendData(data) {\n      var webSocket = this.webSocket;\n\n      if (!webSocket) {\n        throw new Error(\"websocket is not connected\");\n      }\n\n      webSocket.send(data);\n    }\n  }, {\n    key: \"clearWebSocket\",\n    value: function clearWebSocket() {\n      var webSocket = this.webSocket;\n\n      if (!webSocket) {\n        return;\n      }\n\n      this.webSocket = null;\n      webSocket.onclose = null;\n      webSocket.onerror = null;\n      webSocket.onmessage = null;\n      webSocket.onopen = null;\n    }\n  }]);\n\n  return RxWebSocket;\n}();\n\nexports.RxWebSocket = RxWebSocket;","map":{"version":3,"names":["Object","defineProperty","exports","value","RxWebSocket","ConnectionState","rxjs_1","require","operators_1","url","WebSocketClass","WebSocket","webSocket","connectionStateSubject","BehaviorSubject","DISCONNECTED","incomingDataSubject","Subject","replace","throwError","Error","Observable","obs","err","error","next","CONNECTING","onclose","evt","clearWebSocket","code","reason","onopen","_","complete","CONNECTED","onmessage","data","pipe","take","close","_a","asObservable","incomingData$","flatMap","m","j","JSON","parse","empty","of","send","onerror"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/walletlink/dist/connection/RxWebSocket.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RxWebSocket = exports.ConnectionState = void 0;\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"DISCONNECTED\"] = 0] = \"DISCONNECTED\";\n    ConnectionState[ConnectionState[\"CONNECTING\"] = 1] = \"CONNECTING\";\n    ConnectionState[ConnectionState[\"CONNECTED\"] = 2] = \"CONNECTED\";\n})(ConnectionState = exports.ConnectionState || (exports.ConnectionState = {}));\n/**\n * Rx-ified WebSocket\n */\nclass RxWebSocket {\n    /**\n     * Constructor\n     * @param url WebSocket server URL\n     * @param [WebSocketClass] Custom WebSocket implementation\n     */\n    constructor(url, WebSocketClass = WebSocket) {\n        this.WebSocketClass = WebSocketClass;\n        this.webSocket = null;\n        this.connectionStateSubject = new rxjs_1.BehaviorSubject(ConnectionState.DISCONNECTED);\n        this.incomingDataSubject = new rxjs_1.Subject();\n        this.url = url.replace(/^http/, \"ws\");\n    }\n    /**\n     * Make a websocket connection\n     * @returns an Observable that completes when connected\n     */\n    connect() {\n        if (this.webSocket) {\n            return (0, rxjs_1.throwError)(new Error(\"webSocket object is not null\"));\n        }\n        return new rxjs_1.Observable(obs => {\n            let webSocket;\n            try {\n                this.webSocket = webSocket = new this.WebSocketClass(this.url);\n            }\n            catch (err) {\n                obs.error(err);\n                return;\n            }\n            this.connectionStateSubject.next(ConnectionState.CONNECTING);\n            webSocket.onclose = evt => {\n                this.clearWebSocket();\n                obs.error(new Error(`websocket error ${evt.code}: ${evt.reason}`));\n                this.connectionStateSubject.next(ConnectionState.DISCONNECTED);\n            };\n            webSocket.onopen = _ => {\n                obs.next();\n                obs.complete();\n                this.connectionStateSubject.next(ConnectionState.CONNECTED);\n            };\n            webSocket.onmessage = evt => {\n                this.incomingDataSubject.next(evt.data);\n            };\n        }).pipe((0, operators_1.take)(1));\n    }\n    /**\n     * Disconnect from server\n     */\n    disconnect() {\n        const { webSocket } = this;\n        if (!webSocket) {\n            return;\n        }\n        this.clearWebSocket();\n        this.connectionStateSubject.next(ConnectionState.DISCONNECTED);\n        try {\n            webSocket.close();\n        }\n        catch (_a) { }\n    }\n    /**\n     * Emit current connection state and subsequent changes\n     * @returns an Observable for the connection state\n     */\n    get connectionState$() {\n        return this.connectionStateSubject.asObservable();\n    }\n    /**\n     * Emit incoming data from server\n     * @returns an Observable for the data received\n     */\n    get incomingData$() {\n        return this.incomingDataSubject.asObservable();\n    }\n    /**\n     * Emit incoming JSON data from server. non-JSON data are ignored\n     * @returns an Observable for parsed JSON data\n     */\n    get incomingJSONData$() {\n        return this.incomingData$.pipe((0, operators_1.flatMap)(m => {\n            let j;\n            try {\n                j = JSON.parse(m);\n            }\n            catch (err) {\n                return (0, rxjs_1.empty)();\n            }\n            return (0, rxjs_1.of)(j);\n        }));\n    }\n    /**\n     * Send data to server\n     * @param data text to send\n     */\n    sendData(data) {\n        const { webSocket } = this;\n        if (!webSocket) {\n            throw new Error(\"websocket is not connected\");\n        }\n        webSocket.send(data);\n    }\n    clearWebSocket() {\n        const { webSocket } = this;\n        if (!webSocket) {\n            return;\n        }\n        this.webSocket = null;\n        webSocket.onclose = null;\n        webSocket.onerror = null;\n        webSocket.onmessage = null;\n        webSocket.onopen = null;\n    }\n}\nexports.RxWebSocket = RxWebSocket;\n"],"mappings":"AAAA,a,CACA;AACA;AACA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsBF,OAAO,CAACG,eAAR,GAA0B,KAAK,CAArD;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,MAAD,CAAtB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAA3B;;AACA,IAAIF,eAAJ;;AACA,CAAC,UAAUA,eAAV,EAA2B;EACxBA,eAAe,CAACA,eAAe,CAAC,cAAD,CAAf,GAAkC,CAAnC,CAAf,GAAuD,cAAvD;EACAA,eAAe,CAACA,eAAe,CAAC,YAAD,CAAf,GAAgC,CAAjC,CAAf,GAAqD,YAArD;EACAA,eAAe,CAACA,eAAe,CAAC,WAAD,CAAf,GAA+B,CAAhC,CAAf,GAAoD,WAApD;AACH,CAJD,EAIGA,eAAe,GAAGH,OAAO,CAACG,eAAR,KAA4BH,OAAO,CAACG,eAAR,GAA0B,EAAtD,CAJrB;AAKA;AACA;AACA;;;IACMD,W;EACF;AACJ;AACA;AACA;AACA;EACI,qBAAYK,GAAZ,EAA6C;IAAA,IAA5BC,cAA4B,uEAAXC,SAAW;;IAAA;;IACzC,KAAKD,cAAL,GAAsBA,cAAtB;IACA,KAAKE,SAAL,GAAiB,IAAjB;IACA,KAAKC,sBAAL,GAA8B,IAAIP,MAAM,CAACQ,eAAX,CAA2BT,eAAe,CAACU,YAA3C,CAA9B;IACA,KAAKC,mBAAL,GAA2B,IAAIV,MAAM,CAACW,OAAX,EAA3B;IACA,KAAKR,GAAL,GAAWA,GAAG,CAACS,OAAJ,CAAY,OAAZ,EAAqB,IAArB,CAAX;EACH;EACD;AACJ;AACA;AACA;;;;;WACI,mBAAU;MAAA;;MACN,IAAI,KAAKN,SAAT,EAAoB;QAChB,OAAO,CAAC,GAAGN,MAAM,CAACa,UAAX,EAAuB,IAAIC,KAAJ,CAAU,8BAAV,CAAvB,CAAP;MACH;;MACD,OAAO,IAAId,MAAM,CAACe,UAAX,CAAsB,UAAAC,GAAG,EAAI;QAChC,IAAIV,SAAJ;;QACA,IAAI;UACA,KAAI,CAACA,SAAL,GAAiBA,SAAS,GAAG,IAAI,KAAI,CAACF,cAAT,CAAwB,KAAI,CAACD,GAA7B,CAA7B;QACH,CAFD,CAGA,OAAOc,GAAP,EAAY;UACRD,GAAG,CAACE,KAAJ,CAAUD,GAAV;UACA;QACH;;QACD,KAAI,CAACV,sBAAL,CAA4BY,IAA5B,CAAiCpB,eAAe,CAACqB,UAAjD;;QACAd,SAAS,CAACe,OAAV,GAAoB,UAAAC,GAAG,EAAI;UACvB,KAAI,CAACC,cAAL;;UACAP,GAAG,CAACE,KAAJ,CAAU,IAAIJ,KAAJ,2BAA6BQ,GAAG,CAACE,IAAjC,eAA0CF,GAAG,CAACG,MAA9C,EAAV;;UACA,KAAI,CAAClB,sBAAL,CAA4BY,IAA5B,CAAiCpB,eAAe,CAACU,YAAjD;QACH,CAJD;;QAKAH,SAAS,CAACoB,MAAV,GAAmB,UAAAC,CAAC,EAAI;UACpBX,GAAG,CAACG,IAAJ;UACAH,GAAG,CAACY,QAAJ;;UACA,KAAI,CAACrB,sBAAL,CAA4BY,IAA5B,CAAiCpB,eAAe,CAAC8B,SAAjD;QACH,CAJD;;QAKAvB,SAAS,CAACwB,SAAV,GAAsB,UAAAR,GAAG,EAAI;UACzB,KAAI,CAACZ,mBAAL,CAAyBS,IAAzB,CAA8BG,GAAG,CAACS,IAAlC;QACH,CAFD;MAGH,CAvBM,EAuBJC,IAvBI,CAuBC,CAAC,GAAG9B,WAAW,CAAC+B,IAAhB,EAAsB,CAAtB,CAvBD,CAAP;IAwBH;IACD;AACJ;AACA;;;;WACI,sBAAa;MACT,IAAQ3B,SAAR,GAAsB,IAAtB,CAAQA,SAAR;;MACA,IAAI,CAACA,SAAL,EAAgB;QACZ;MACH;;MACD,KAAKiB,cAAL;MACA,KAAKhB,sBAAL,CAA4BY,IAA5B,CAAiCpB,eAAe,CAACU,YAAjD;;MACA,IAAI;QACAH,SAAS,CAAC4B,KAAV;MACH,CAFD,CAGA,OAAOC,EAAP,EAAW,CAAG;IACjB;IACD;AACJ;AACA;AACA;;;;SACI,eAAuB;MACnB,OAAO,KAAK5B,sBAAL,CAA4B6B,YAA5B,EAAP;IACH;IACD;AACJ;AACA;AACA;;;;SACI,eAAoB;MAChB,OAAO,KAAK1B,mBAAL,CAAyB0B,YAAzB,EAAP;IACH;IACD;AACJ;AACA;AACA;;;;SACI,eAAwB;MACpB,OAAO,KAAKC,aAAL,CAAmBL,IAAnB,CAAwB,CAAC,GAAG9B,WAAW,CAACoC,OAAhB,EAAyB,UAAAC,CAAC,EAAI;QACzD,IAAIC,CAAJ;;QACA,IAAI;UACAA,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAX,CAAJ;QACH,CAFD,CAGA,OAAOtB,GAAP,EAAY;UACR,OAAO,CAAC,GAAGjB,MAAM,CAAC2C,KAAX,GAAP;QACH;;QACD,OAAO,CAAC,GAAG3C,MAAM,CAAC4C,EAAX,EAAeJ,CAAf,CAAP;MACH,CAT8B,CAAxB,CAAP;IAUH;IACD;AACJ;AACA;AACA;;;;WACI,kBAAST,IAAT,EAAe;MACX,IAAQzB,SAAR,GAAsB,IAAtB,CAAQA,SAAR;;MACA,IAAI,CAACA,SAAL,EAAgB;QACZ,MAAM,IAAIQ,KAAJ,CAAU,4BAAV,CAAN;MACH;;MACDR,SAAS,CAACuC,IAAV,CAAed,IAAf;IACH;;;WACD,0BAAiB;MACb,IAAQzB,SAAR,GAAsB,IAAtB,CAAQA,SAAR;;MACA,IAAI,CAACA,SAAL,EAAgB;QACZ;MACH;;MACD,KAAKA,SAAL,GAAiB,IAAjB;MACAA,SAAS,CAACe,OAAV,GAAoB,IAApB;MACAf,SAAS,CAACwC,OAAV,GAAoB,IAApB;MACAxC,SAAS,CAACwB,SAAV,GAAsB,IAAtB;MACAxB,SAAS,CAACoB,MAAV,GAAmB,IAAnB;IACH;;;;;;AAEL9B,OAAO,CAACE,WAAR,GAAsBA,WAAtB"},"metadata":{},"sourceType":"script"}