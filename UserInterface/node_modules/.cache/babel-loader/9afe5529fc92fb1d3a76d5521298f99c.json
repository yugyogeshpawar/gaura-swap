{"ast":null,"code":"import { useMemo } from 'react';\nimport { useAllTokenBalances } from '../../state/wallet/hooks'; // compare two token amounts with highest one coming first\n\nfunction balanceComparator(balanceA, balanceB) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1;\n  } else if (balanceA && balanceA.greaterThan('0')) {\n    return -1;\n  } else if (balanceB && balanceB.greaterThan('0')) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getTokenComparator(balances) {\n  return function sortTokens(tokenA, tokenB) {\n    // -1 = a is first\n    // 1 = b is first\n    // sort by balances\n    const balanceA = balances[tokenA.address];\n    const balanceB = balances[tokenB.address];\n    const balanceComp = balanceComparator(balanceA, balanceB);\n    if (balanceComp !== 0) return balanceComp;\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1;\n    } else {\n      return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0;\n    }\n  };\n}\n\nexport function useTokenComparator(inverted) {\n  const balances = useAllTokenBalances();\n  const comparator = useMemo(() => getTokenComparator(balances !== null && balances !== void 0 ? balances : {}), [balances]);\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA, tokenB) => comparator(tokenA, tokenB) * -1;\n    } else {\n      return comparator;\n    }\n  }, [inverted, comparator]);\n}","map":{"version":3,"names":["useMemo","useAllTokenBalances","balanceComparator","balanceA","balanceB","greaterThan","equalTo","getTokenComparator","balances","sortTokens","tokenA","tokenB","address","balanceComp","symbol","toLowerCase","useTokenComparator","inverted","comparator"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/components/SearchModal/sorting.ts"],"sourcesContent":["import { Token, TokenAmount } from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport { useAllTokenBalances } from '../../state/wallet/hooks';\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1;\n  } else if (balanceA && balanceA.greaterThan('0')) {\n    return -1;\n  } else if (balanceB && balanceB.greaterThan('0')) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined;\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address];\n    const balanceB = balances[tokenB.address];\n\n    const balanceComp = balanceComparator(balanceA, balanceB);\n    if (balanceComp !== 0) return balanceComp;\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1;\n    } else {\n      return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0;\n    }\n  };\n}\n\nexport function useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances();\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances]);\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1;\n    } else {\n      return comparator;\n    }\n  }, [inverted, comparator]);\n}\n"],"mappings":"AACA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;;AACA,SAASC,iBAAT,CAA2BC,QAA3B,EAAmDC,QAAnD,EAA2E;EACzE,IAAID,QAAQ,IAAIC,QAAhB,EAA0B;IACxB,OAAOD,QAAQ,CAACE,WAAT,CAAqBD,QAArB,IAAiC,CAAC,CAAlC,GAAsCD,QAAQ,CAACG,OAAT,CAAiBF,QAAjB,IAA6B,CAA7B,GAAiC,CAA9E;EACD,CAFD,MAEO,IAAID,QAAQ,IAAIA,QAAQ,CAACE,WAAT,CAAqB,GAArB,CAAhB,EAA2C;IAChD,OAAO,CAAC,CAAR;EACD,CAFM,MAEA,IAAID,QAAQ,IAAIA,QAAQ,CAACC,WAAT,CAAqB,GAArB,CAAhB,EAA2C;IAChD,OAAO,CAAP;EACD;;EACD,OAAO,CAAP;AACD;;AAED,SAASE,kBAAT,CAA4BC,QAA5B,EAE6C;EAC3C,OAAO,SAASC,UAAT,CAAoBC,MAApB,EAAmCC,MAAnC,EAA0D;IAC/D;IACA;IAEA;IACA,MAAMR,QAAQ,GAAGK,QAAQ,CAACE,MAAM,CAACE,OAAR,CAAzB;IACA,MAAMR,QAAQ,GAAGI,QAAQ,CAACG,MAAM,CAACC,OAAR,CAAzB;IAEA,MAAMC,WAAW,GAAGX,iBAAiB,CAACC,QAAD,EAAWC,QAAX,CAArC;IACA,IAAIS,WAAW,KAAK,CAApB,EAAuB,OAAOA,WAAP;;IAEvB,IAAIH,MAAM,CAACI,MAAP,IAAiBH,MAAM,CAACG,MAA5B,EAAoC;MAClC;MACA,OAAOJ,MAAM,CAACI,MAAP,CAAcC,WAAd,KAA8BJ,MAAM,CAACG,MAAP,CAAcC,WAAd,EAA9B,GAA4D,CAAC,CAA7D,GAAiE,CAAxE;IACD,CAHD,MAGO;MACL,OAAOL,MAAM,CAACI,MAAP,GAAgB,CAAC,CAAjB,GAAqBH,MAAM,CAACG,MAAP,GAAgB,CAAC,CAAjB,GAAqB,CAAjD;IACD;EACF,CAjBD;AAkBD;;AAED,OAAO,SAASE,kBAAT,CAA4BC,QAA5B,EAAyF;EAC9F,MAAMT,QAAQ,GAAGP,mBAAmB,EAApC;EACA,MAAMiB,UAAU,GAAGlB,OAAO,CAAC,MAAMO,kBAAkB,CAACC,QAAD,aAACA,QAAD,cAACA,QAAD,GAAa,EAAb,CAAzB,EAA2C,CAACA,QAAD,CAA3C,CAA1B;EACA,OAAOR,OAAO,CAAC,MAAM;IACnB,IAAIiB,QAAJ,EAAc;MACZ,OAAO,CAACP,MAAD,EAAgBC,MAAhB,KAAkCO,UAAU,CAACR,MAAD,EAASC,MAAT,CAAV,GAA6B,CAAC,CAAvE;IACD,CAFD,MAEO;MACL,OAAOO,UAAP;IACD;EACF,CANa,EAMX,CAACD,QAAD,EAAWC,UAAX,CANW,CAAd;AAOD"},"metadata":{},"sourceType":"module"}