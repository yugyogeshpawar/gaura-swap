{"ast":null,"code":"import _toConsumableArray from\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{configureStore,getDefaultMiddleware}from'@reduxjs/toolkit';import{save,load}from'redux-localstorage-simple';import application from'./application/reducer';import{updateVersion}from'./global/actions';import user from'./user/reducer';import transactions from'./transactions/reducer';import swap from'./swap/reducer';import mint from'./mint/reducer';import lists from'./lists/reducer';import burn from'./burn/reducer';import multicall from'./multicall/reducer';var PERSISTED_KEYS=['user','transactions','lists'];var store=configureStore({reducer:{application:application,user:user,transactions:transactions,swap:swap,mint:mint,burn:burn,multicall:multicall,lists:lists},middleware:[].concat(_toConsumableArray(getDefaultMiddleware({immutableCheck:false,thunk:false,serializableCheck:false})),[save({states:PERSISTED_KEYS})]),preloadedState:load({states:PERSISTED_KEYS})});store.dispatch(updateVersion());export default store;","map":{"version":3,"names":["configureStore","getDefaultMiddleware","save","load","application","updateVersion","user","transactions","swap","mint","lists","burn","multicall","PERSISTED_KEYS","store","reducer","middleware","immutableCheck","thunk","serializableCheck","states","preloadedState","dispatch"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/state/index.ts"],"sourcesContent":["import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { save, load } from 'redux-localstorage-simple';\n\nimport application from './application/reducer';\nimport { updateVersion } from './global/actions';\nimport user from './user/reducer';\nimport transactions from './transactions/reducer';\nimport swap from './swap/reducer';\nimport mint from './mint/reducer';\nimport lists from './lists/reducer';\nimport burn from './burn/reducer';\nimport multicall from './multicall/reducer';\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists'];\n\nconst store = configureStore({\n  reducer: {\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [\n    ...getDefaultMiddleware({ immutableCheck: false, thunk: false, serializableCheck: false }),\n    save({ states: PERSISTED_KEYS }),\n  ],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n});\n\nstore.dispatch(updateVersion());\n\nexport default store;\nexport type AppState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"mappings":"mMAAA,OAASA,cAAT,CAAyBC,oBAAzB,KAAqD,kBAArD,CACA,OAASC,IAAT,CAAeC,IAAf,KAA2B,2BAA3B,CAEA,MAAOC,YAAP,KAAwB,uBAAxB,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,MAAOC,KAAP,KAAiB,gBAAjB,CACA,MAAOC,aAAP,KAAyB,wBAAzB,CACA,MAAOC,KAAP,KAAiB,gBAAjB,CACA,MAAOC,KAAP,KAAiB,gBAAjB,CACA,MAAOC,MAAP,KAAkB,iBAAlB,CACA,MAAOC,KAAP,KAAiB,gBAAjB,CACA,MAAOC,UAAP,KAAsB,qBAAtB,CAEA,GAAMC,eAAwB,CAAG,CAAC,MAAD,CAAS,cAAT,CAAyB,OAAzB,CAAjC,CAEA,GAAMC,MAAK,CAAGd,cAAc,CAAC,CAC3Be,OAAO,CAAE,CACPX,WAAW,CAAXA,WADO,CAEPE,IAAI,CAAJA,IAFO,CAGPC,YAAY,CAAZA,YAHO,CAIPC,IAAI,CAAJA,IAJO,CAKPC,IAAI,CAAJA,IALO,CAMPE,IAAI,CAAJA,IANO,CAOPC,SAAS,CAATA,SAPO,CAQPF,KAAK,CAALA,KARO,CADkB,CAW3BM,UAAU,8BACLf,oBAAoB,CAAC,CAAEgB,cAAc,CAAE,KAAlB,CAAyBC,KAAK,CAAE,KAAhC,CAAuCC,iBAAiB,CAAE,KAA1D,CAAD,CADf,GAERjB,IAAI,CAAC,CAAEkB,MAAM,CAAEP,cAAV,CAAD,CAFI,EAXiB,CAe3BQ,cAAc,CAAElB,IAAI,CAAC,CAAEiB,MAAM,CAAEP,cAAV,CAAD,CAfO,CAAD,CAA5B,CAkBAC,KAAK,CAACQ,QAAN,CAAejB,aAAa,EAA5B,EAEA,cAAeS,MAAf"},"metadata":{},"sourceType":"module"}