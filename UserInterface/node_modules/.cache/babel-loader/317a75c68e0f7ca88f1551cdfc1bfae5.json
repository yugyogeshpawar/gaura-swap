{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/pages/AddLiquidity/index.tsx\";\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { ETHER } from '@uniswap/sdk';\nimport React, { useCallback, useContext, useState } from 'react';\nimport { Plus } from 'react-feather';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { ButtonError, ButtonPrimary } from '../../components/Button';\nimport { LightCard } from '../../components/Card';\nimport { AutoColumn, ColumnCenter } from '../../components/Column';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\nimport { AddRemoveTabs } from '../../components/NavigationTabs';\nimport Row, { RowBetween, RowFlat } from '../../components/Row';\nimport { ROUTER_ADDRESS } from '../../constants';\nimport { PairState } from '../../data/Reserves';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { Field } from '../../state/mint/actions';\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks';\nimport { TYPE } from '../../theme';\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\nimport AppBody from '../AppBody';\nimport { Dots, Wrapper } from '../Pool/styleds';\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom';\nimport { currencyId } from '../../utils/currencyId';\nimport { PoolPriceBar } from './PoolPriceBar';\nexport default function AddLiquidity(_ref) {\n  var _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$Field$3, _currencies$Field$CUR7, _parsedAmounts$Field$4, _currencies$Field$CUR8, _currencies$Field$CUR9, _currencies$Field$CUR10, _currencies$Field$CUR11, _currencies$Field$CUR12;\n\n  let {\n    match: {\n      params: {\n        currencyIdA,\n        currencyIdB\n      }\n    },\n    history\n  } = _ref;\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n  const currencyA = useCurrency(currencyIdA);\n  const currencyB = useCurrency(currencyIdB);\n  const toggleWalletModal = useWalletModalToggle(); // toggle wallet when disconnected\n\n  const expertMode = useIsExpertMode(); // mint state\n\n  const {\n    independentField,\n    typedValue,\n    otherTypedValue\n  } = useMintState();\n  const {\n    dependentField,\n    currencies,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error\n  } = useDerivedMintInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined);\n  const {\n    onFieldAInput,\n    onFieldBInput\n  } = useMintActionHandlers(noLiquidity);\n  const isValid = !error; // modal and loading\n\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false); // clicked confirm\n  // txn values\n\n  const deadline = useTransactionDeadline(); // custom from users settings\n\n  const [allowedSlippage] = useUserSlippageTolerance(); // custom from users\n\n  const [txHash, setTxHash] = useState(''); // get formatted amounts\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  }; // get the max amounts user can add\n\n  const maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n    return { ...accumulator,\n      [field]: maxAmountSpend(currencyBalances[field])\n    };\n  }, {});\n  const atMaxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n    var _maxAmounts$field, _parsedAmounts$field;\n\n    return { ...accumulator,\n      [field]: (_maxAmounts$field = maxAmounts[field]) === null || _maxAmounts$field === void 0 ? void 0 : _maxAmounts$field.equalTo((_parsedAmounts$field = parsedAmounts[field]) !== null && _parsedAmounts$field !== void 0 ? _parsedAmounts$field : '0')\n    };\n  }, {}); // check whether the user has approved the router on the tokens\n\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS);\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS);\n  const addTransaction = useTransactionAdder();\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return;\n    const router = getRouterContract(chainId, library, account);\n    const {\n      [Field.CURRENCY_A]: parsedAmountA,\n      [Field.CURRENCY_B]: parsedAmountB\n    } = parsedAmounts;\n\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return;\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0]\n    };\n    let estimate, method, args, value;\n\n    if (currencyA === ETHER || currencyB === ETHER) {\n      var _wrappedCurrency$addr, _wrappedCurrency;\n\n      const tokenBIsETH = currencyB === ETHER;\n      estimate = router.estimateGas.addLiquidityETH;\n      method = router.addLiquidityETH;\n      args = [(_wrappedCurrency$addr = (_wrappedCurrency = wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)) === null || _wrappedCurrency === void 0 ? void 0 : _wrappedCurrency.address) !== null && _wrappedCurrency$addr !== void 0 ? _wrappedCurrency$addr : '', // token\n      (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n      amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n      amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n      account, deadline.toHexString()];\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString());\n    } else {\n      var _wrappedCurrency$addr2, _wrappedCurrency2, _wrappedCurrency$addr3, _wrappedCurrency3;\n\n      estimate = router.estimateGas.addLiquidity;\n      method = router.addLiquidity;\n      args = [(_wrappedCurrency$addr2 = (_wrappedCurrency2 = wrappedCurrency(currencyA, chainId)) === null || _wrappedCurrency2 === void 0 ? void 0 : _wrappedCurrency2.address) !== null && _wrappedCurrency$addr2 !== void 0 ? _wrappedCurrency$addr2 : '', (_wrappedCurrency$addr3 = (_wrappedCurrency3 = wrappedCurrency(currencyB, chainId)) === null || _wrappedCurrency3 === void 0 ? void 0 : _wrappedCurrency3.address) !== null && _wrappedCurrency$addr3 !== void 0 ? _wrappedCurrency$addr3 : '', parsedAmountA.raw.toString(), parsedAmountB.raw.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadline.toHexString()];\n      value = null;\n    }\n\n    setAttemptingTxn(true);\n    await estimate(...args, value ? {\n      value\n    } : {}).then(estimatedGasLimit => method(...args, { ...(value ? {\n        value\n      } : {}),\n      gasLimit: calculateGasMargin(estimatedGasLimit)\n    }).then(response => {\n      var _parsedAmounts$Field$, _currencies$Field$CUR, _parsedAmounts$Field$2, _currencies$Field$CUR2;\n\n      setAttemptingTxn(false);\n      addTransaction(response, {\n        summary: 'Add ' + ((_parsedAmounts$Field$ = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.toSignificant(3)) + ' ' + ((_currencies$Field$CUR = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR === void 0 ? void 0 : _currencies$Field$CUR.symbol) + ' and ' + ((_parsedAmounts$Field$2 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(3)) + ' ' + ((_currencies$Field$CUR2 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR2 === void 0 ? void 0 : _currencies$Field$CUR2.symbol)\n      });\n      setTxHash(response.hash);\n    })).catch(error => {\n      setAttemptingTxn(false); // we only care if the error is something _other_ than the user rejected the tx\n\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.error(error);\n      }\n    });\n  }\n\n  const modalHeader = () => {\n    var _currencies$Field$CUR3, _currencies$Field$CUR4, _currencies$Field$CUR5, _currencies$Field$CUR6;\n\n    return noLiquidity ? /*#__PURE__*/React.createElement(AutoColumn, {\n      gap: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LightCard, {\n      mt: \"20px\",\n      borderRadius: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(RowFlat, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"48px\",\n      fontWeight: 500,\n      lineHeight: \"42px\",\n      marginRight: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, ((_currencies$Field$CUR3 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR3 === void 0 ? void 0 : _currencies$Field$CUR3.symbol) + '/' + ((_currencies$Field$CUR4 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR4 === void 0 ? void 0 : _currencies$Field$CUR4.symbol)), /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n      currency0: currencies[Field.CURRENCY_A],\n      currency1: currencies[Field.CURRENCY_B],\n      size: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    })))) : /*#__PURE__*/React.createElement(AutoColumn, {\n      gap: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(RowFlat, {\n      style: {\n        marginTop: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"48px\",\n      fontWeight: 500,\n      lineHeight: \"42px\",\n      marginRight: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, liquidityMinted === null || liquidityMinted === void 0 ? void 0 : liquidityMinted.toSignificant(6)), /*#__PURE__*/React.createElement(DoubleCurrencyLogo, {\n      currency0: currencies[Field.CURRENCY_A],\n      currency1: currencies[Field.CURRENCY_B],\n      size: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"24px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, ((_currencies$Field$CUR5 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR5 === void 0 ? void 0 : _currencies$Field$CUR5.symbol) + '/' + ((_currencies$Field$CUR6 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR6 === void 0 ? void 0 : _currencies$Field$CUR6.symbol) + ' Pool Tokens')), /*#__PURE__*/React.createElement(TYPE.italic, {\n      fontSize: 12,\n      textAlign: \"left\",\n      padding: '8px 0 0 0 ',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }, `Output is estimated. If the price changes by more than ${allowedSlippage / 100}% your transaction will revert.`));\n  };\n\n  const modalBottom = () => {\n    return /*#__PURE__*/React.createElement(ConfirmAddModalBottom, {\n      price: price,\n      currencies: currencies,\n      parsedAmounts: parsedAmounts,\n      noLiquidity: noLiquidity,\n      onAdd: onAdd,\n      poolTokenPercentage: poolTokenPercentage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 7\n      }\n    });\n  };\n\n  const pendingText = `Supplying ${(_parsedAmounts$Field$3 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$3 === void 0 ? void 0 : _parsedAmounts$Field$3.toSignificant(6)} ${(_currencies$Field$CUR7 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR7 === void 0 ? void 0 : _currencies$Field$CUR7.symbol} and ${(_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(6)} ${(_currencies$Field$CUR8 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR8 === void 0 ? void 0 : _currencies$Field$CUR8.symbol}`;\n  const handleCurrencyASelect = useCallback(currencyA => {\n    const newCurrencyIdA = currencyId(currencyA);\n\n    if (newCurrencyIdA === currencyIdB) {\n      history.push(`/add/${currencyIdB}/${currencyIdA}`);\n    } else {\n      history.push(`/add/${newCurrencyIdA}/${currencyIdB}`);\n    }\n  }, [currencyIdB, history, currencyIdA]);\n  const handleCurrencyBSelect = useCallback(currencyB => {\n    const newCurrencyIdB = currencyId(currencyB);\n\n    if (currencyIdA === newCurrencyIdB) {\n      if (currencyIdB) {\n        history.push(`/add/${currencyIdB}/${newCurrencyIdB}`);\n      } else {\n        history.push(`/add/${newCurrencyIdB}`);\n      }\n    } else {\n      history.push(`/add/${currencyIdA ? currencyIdA : 'ETH'}/${newCurrencyIdB}`);\n    }\n  }, [currencyIdA, history, currencyIdB]);\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onFieldAInput('');\n    }\n\n    setTxHash('');\n  }, [onFieldAInput, txHash]);\n  const isCreate = history.location.pathname.includes('/create');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AddRemoveTabs, {\n    creating: isCreate,\n    adding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TransactionConfirmationModal, {\n    isOpen: showConfirm,\n    onDismiss: handleDismissConfirmation,\n    attemptingTxn: attemptingTxn,\n    hash: txHash,\n    content: () => /*#__PURE__*/React.createElement(ConfirmationModalContent, {\n      title: noLiquidity ? 'You are creating a pool' : 'You will receive',\n      onDismiss: handleDismissConfirmation,\n      topContent: modalHeader,\n      bottomContent: modalBottom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 15\n      }\n    }),\n    pendingText: pendingText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, noLiquidity || (isCreate ? /*#__PURE__*/React.createElement(ColumnCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LightCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.link, {\n    fontWeight: 600,\n    color: 'primaryText1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 23\n    }\n  }, \"You are the first liquidity provider.\"), /*#__PURE__*/React.createElement(TYPE.link, {\n    fontWeight: 400,\n    color: 'primaryText1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 23\n    }\n  }, \"The ratio of tokens you add will set the price of this pool.\"), /*#__PURE__*/React.createElement(TYPE.link, {\n    fontWeight: 400,\n    color: 'primaryText1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 23\n    }\n  }, \"Once you are happy with the rate click supply to review.\")))) : /*#__PURE__*/React.createElement(ColumnCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LightCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"10px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.link, {\n    fontWeight: 400,\n    color: 'primaryText1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 25\n    }\n  }, \"Tip:\"), \" When you add liquidity, you will receive pool tokens representing your position. These tokens automatically earn fees proportional to your share of the pool, and can be redeemed at any time.\"))))), /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    value: formattedAmounts[Field.CURRENCY_A],\n    onUserInput: onFieldAInput,\n    onMax: () => {\n      var _maxAmounts$Field$CUR, _maxAmounts$Field$CUR2;\n\n      onFieldAInput((_maxAmounts$Field$CUR = (_maxAmounts$Field$CUR2 = maxAmounts[Field.CURRENCY_A]) === null || _maxAmounts$Field$CUR2 === void 0 ? void 0 : _maxAmounts$Field$CUR2.toExact()) !== null && _maxAmounts$Field$CUR !== void 0 ? _maxAmounts$Field$CUR : '');\n    },\n    onCurrencySelect: handleCurrencyASelect,\n    showMaxButton: !atMaxAmounts[Field.CURRENCY_A],\n    currency: currencies[Field.CURRENCY_A],\n    id: \"add-liquidity-input-tokena\",\n    showCommonBases: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ColumnCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Plus, {\n    size: \"16\",\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    value: formattedAmounts[Field.CURRENCY_B],\n    onUserInput: onFieldBInput,\n    onCurrencySelect: handleCurrencyBSelect,\n    onMax: () => {\n      var _maxAmounts$Field$CUR3, _maxAmounts$Field$CUR4;\n\n      onFieldBInput((_maxAmounts$Field$CUR3 = (_maxAmounts$Field$CUR4 = maxAmounts[Field.CURRENCY_B]) === null || _maxAmounts$Field$CUR4 === void 0 ? void 0 : _maxAmounts$Field$CUR4.toExact()) !== null && _maxAmounts$Field$CUR3 !== void 0 ? _maxAmounts$Field$CUR3 : '');\n    },\n    showMaxButton: !atMaxAmounts[Field.CURRENCY_B],\n    currency: currencies[Field.CURRENCY_B],\n    id: \"add-liquidity-input-tokenb\",\n    showCommonBases: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 13\n    }\n  }), currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"0px\",\n    borderRadius: '20px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    padding: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.subHeader, {\n    fontWeight: 500,\n    fontSize: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 21\n    }\n  }, noLiquidity ? 'Initial prices' : 'Prices', \" and pool share\")), ' ', /*#__PURE__*/React.createElement(LightCard, {\n    padding: \"1rem\",\n    borderRadius: '20px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(PoolPriceBar, {\n    currencies: currencies,\n    poolTokenPercentage: poolTokenPercentage,\n    noLiquidity: noLiquidity,\n    price: price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 21\n    }\n  })))), !account ? /*#__PURE__*/React.createElement(ButtonPrimary, {\n    onClick: toggleWalletModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 15\n    }\n  }, \"Connect Wallet\") : /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: 'md',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 15\n    }\n  }, (approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING || approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING) && isValid && /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 21\n    }\n  }, approvalA !== ApprovalState.APPROVED && /*#__PURE__*/React.createElement(ButtonPrimary, {\n    onClick: approveACallback,\n    disabled: approvalA === ApprovalState.PENDING,\n    width: approvalB !== ApprovalState.APPROVED ? '48%' : '100%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 25\n    }\n  }, approvalA === ApprovalState.PENDING ? /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 29\n    }\n  }, \"Approving \", (_currencies$Field$CUR9 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR9 === void 0 ? void 0 : _currencies$Field$CUR9.symbol) : 'Approve ' + ((_currencies$Field$CUR10 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR10 === void 0 ? void 0 : _currencies$Field$CUR10.symbol)), approvalB !== ApprovalState.APPROVED && /*#__PURE__*/React.createElement(ButtonPrimary, {\n    onClick: approveBCallback,\n    disabled: approvalB === ApprovalState.PENDING,\n    width: approvalA !== ApprovalState.APPROVED ? '48%' : '100%',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 25\n    }\n  }, approvalB === ApprovalState.PENDING ? /*#__PURE__*/React.createElement(Dots, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 29\n    }\n  }, \"Approving \", (_currencies$Field$CUR11 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR11 === void 0 ? void 0 : _currencies$Field$CUR11.symbol) : 'Approve ' + ((_currencies$Field$CUR12 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR12 === void 0 ? void 0 : _currencies$Field$CUR12.symbol))), /*#__PURE__*/React.createElement(ButtonError, {\n    onClick: () => {\n      expertMode ? onAdd() : setShowConfirm(true);\n    },\n    disabled: !isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED,\n    error: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 20,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 19\n    }\n  }, error !== null && error !== void 0 ? error : 'Supply')))))));\n}","map":{"version":3,"names":["BigNumber","ETHER","React","useCallback","useContext","useState","Plus","Text","ThemeContext","ButtonError","ButtonPrimary","LightCard","AutoColumn","ColumnCenter","TransactionConfirmationModal","ConfirmationModalContent","CurrencyInputPanel","DoubleCurrencyLogo","AddRemoveTabs","Row","RowBetween","RowFlat","ROUTER_ADDRESS","PairState","useActiveWeb3React","useCurrency","ApprovalState","useApproveCallback","useTransactionDeadline","useWalletModalToggle","Field","useDerivedMintInfo","useMintActionHandlers","useMintState","useTransactionAdder","useIsExpertMode","useUserSlippageTolerance","TYPE","calculateGasMargin","calculateSlippageAmount","getRouterContract","maxAmountSpend","wrappedCurrency","AppBody","Dots","Wrapper","ConfirmAddModalBottom","currencyId","PoolPriceBar","AddLiquidity","match","params","currencyIdA","currencyIdB","history","account","chainId","library","theme","currencyA","currencyB","toggleWalletModal","expertMode","independentField","typedValue","otherTypedValue","dependentField","currencies","pairState","currencyBalances","parsedAmounts","price","noLiquidity","liquidityMinted","poolTokenPercentage","error","undefined","onFieldAInput","onFieldBInput","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","allowedSlippage","txHash","setTxHash","formattedAmounts","toSignificant","maxAmounts","CURRENCY_A","CURRENCY_B","reduce","accumulator","field","atMaxAmounts","equalTo","approvalA","approveACallback","approvalB","approveBCallback","addTransaction","onAdd","router","parsedAmountA","parsedAmountB","amountsMin","estimate","method","args","value","tokenBIsETH","estimateGas","addLiquidityETH","address","raw","toString","toHexString","from","addLiquidity","then","estimatedGasLimit","gasLimit","response","summary","symbol","hash","catch","code","console","modalHeader","marginTop","modalBottom","pendingText","handleCurrencyASelect","newCurrencyIdA","push","handleCurrencyBSelect","newCurrencyIdB","handleDismissConfirmation","isCreate","location","pathname","includes","toExact","text2","INVALID","NOT_APPROVED","PENDING","APPROVED"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/pages/AddLiquidity/index.tsx"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber';\nimport { TransactionResponse } from '@ethersproject/providers';\nimport { Currency, ETHER, TokenAmount } from '@uniswap/sdk';\nimport React, { useCallback, useContext, useState } from 'react';\nimport { Plus } from 'react-feather';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { ButtonError, ButtonPrimary } from '../../components/Button';\nimport { LightCard } from '../../components/Card';\nimport { AutoColumn, ColumnCenter } from '../../components/Column';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\nimport { AddRemoveTabs } from '../../components/NavigationTabs';\nimport Row, { RowBetween, RowFlat } from '../../components/Row';\n\nimport { ROUTER_ADDRESS } from '../../constants';\nimport { PairState } from '../../data/Reserves';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { Field } from '../../state/mint/actions';\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks';\n\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks';\nimport { TYPE } from '../../theme';\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { wrappedCurrency } from '../../utils/wrappedCurrency';\nimport AppBody from '../AppBody';\nimport { Dots, Wrapper } from '../Pool/styleds';\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom';\nimport { currencyId } from '../../utils/currencyId';\nimport { PoolPriceBar } from './PoolPriceBar';\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n\n  const currencyA = useCurrency(currencyIdA);\n  const currencyB = useCurrency(currencyIdB);\n\n  const toggleWalletModal = useWalletModalToggle(); // toggle wallet when disconnected\n\n  const expertMode = useIsExpertMode();\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState();\n  const {\n    dependentField,\n    currencies,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined);\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity);\n\n  const isValid = !error;\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false);\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false); // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline(); // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance(); // custom from users\n  const [txHash, setTxHash] = useState<string>('');\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  };\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      };\n    },\n    {}\n  );\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      };\n    },\n    {}\n  );\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS);\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS);\n\n  const addTransaction = useTransactionAdder();\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return;\n    const router = getRouterContract(chainId, library, account);\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts;\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return;\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    };\n\n    let estimate,\n      method: (...args: any) => Promise<TransactionResponse>,\n      args: Array<string | string[] | number>,\n      value: BigNumber | null;\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER;\n      estimate = router.estimateGas.addLiquidityETH;\n      method = router.addLiquidityETH;\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ];\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString());\n    } else {\n      estimate = router.estimateGas.addLiquidity;\n      method = router.addLiquidity;\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ];\n      value = null;\n    }\n\n    setAttemptingTxn(true);\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false);\n\n          addTransaction(response, {\n            summary:\n              'Add ' +\n              parsedAmounts[Field.CURRENCY_A]?.toSignificant(3) +\n              ' ' +\n              currencies[Field.CURRENCY_A]?.symbol +\n              ' and ' +\n              parsedAmounts[Field.CURRENCY_B]?.toSignificant(3) +\n              ' ' +\n              currencies[Field.CURRENCY_B]?.symbol,\n          });\n\n          setTxHash(response.hash);\n        })\n      )\n      .catch((error) => {\n        setAttemptingTxn(false);\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (error?.code !== 4001) {\n          console.error(error);\n        }\n      });\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <AutoColumn gap=\"20px\">\n        <LightCard mt=\"20px\" borderRadius=\"20px\">\n          <RowFlat>\n            <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n              {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol}\n            </Text>\n            <DoubleCurrencyLogo\n              currency0={currencies[Field.CURRENCY_A]}\n              currency1={currencies[Field.CURRENCY_B]}\n              size={30}\n            />\n          </RowFlat>\n        </LightCard>\n      </AutoColumn>\n    ) : (\n      <AutoColumn gap=\"20px\">\n        <RowFlat style={{ marginTop: '20px' }}>\n          <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </RowFlat>\n        <Row>\n          <Text fontSize=\"24px\">\n            {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol + ' Pool Tokens'}\n          </Text>\n        </Row>\n        <TYPE.italic fontSize={12} textAlign=\"left\" padding={'8px 0 0 0 '}>\n          {`Output is estimated. If the price changes by more than ${\n            allowedSlippage / 100\n          }% your transaction will revert.`}\n        </TYPE.italic>\n      </AutoColumn>\n    );\n  };\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    );\n  };\n\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    currencies[Field.CURRENCY_A]?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencies[Field.CURRENCY_B]?.symbol}`;\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA);\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`);\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`);\n      }\n    },\n    [currencyIdB, history, currencyIdA]\n  );\n  const handleCurrencyBSelect = useCallback(\n    (currencyB: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB);\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`);\n        } else {\n          history.push(`/add/${newCurrencyIdB}`);\n        }\n      } else {\n        history.push(`/add/${currencyIdA ? currencyIdA : 'ETH'}/${newCurrencyIdB}`);\n      }\n    },\n    [currencyIdA, history, currencyIdB]\n  );\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false);\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('');\n    }\n    setTxHash('');\n  }, [onFieldAInput, txHash]);\n\n  const isCreate = history.location.pathname.includes('/create');\n\n  return (\n    <>\n      <AppBody>\n        <AddRemoveTabs creating={isCreate} adding={true} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash}\n            content={() => (\n              <ConfirmationModalContent\n                title={noLiquidity ? 'You are creating a pool' : 'You will receive'}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n          />\n          <AutoColumn gap=\"20px\">\n            {noLiquidity ||\n              (isCreate ? (\n                <ColumnCenter>\n                  <LightCard>\n                    <AutoColumn gap=\"10px\">\n                      <TYPE.link fontWeight={600} color={'primaryText1'}>\n                        You are the first liquidity provider.\n                      </TYPE.link>\n                      <TYPE.link fontWeight={400} color={'primaryText1'}>\n                        The ratio of tokens you add will set the price of this pool.\n                      </TYPE.link>\n                      <TYPE.link fontWeight={400} color={'primaryText1'}>\n                        Once you are happy with the rate click supply to review.\n                      </TYPE.link>\n                    </AutoColumn>\n                  </LightCard>\n                </ColumnCenter>\n              ) : (\n                <ColumnCenter>\n                  <LightCard>\n                    <AutoColumn gap=\"10px\">\n                      <TYPE.link fontWeight={400} color={'primaryText1'}>\n                        <b>Tip:</b> When you add liquidity, you will receive pool tokens representing your position.\n                        These tokens automatically earn fees proportional to your share of the pool, and can be redeemed\n                        at any time.\n                      </TYPE.link>\n                    </AutoColumn>\n                  </LightCard>\n                </ColumnCenter>\n              ))}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '');\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <Plus size=\"16\" color={theme.text2} />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '');\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius={'20px'}>\n                  <RowBetween padding=\"1rem\">\n                    <TYPE.subHeader fontWeight={500} fontSize={14}>\n                      {noLiquidity ? 'Initial prices' : 'Prices'} and pool share\n                    </TYPE.subHeader>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius={'20px'}>\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {!account ? (\n              <ButtonPrimary onClick={toggleWalletModal}>Connect Wallet</ButtonPrimary>\n            ) : (\n              <AutoColumn gap={'md'}>\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>Approving {currencies[Field.CURRENCY_A]?.symbol}</Dots>\n                          ) : (\n                            'Approve ' + currencies[Field.CURRENCY_A]?.symbol\n                          )}\n                        </ButtonPrimary>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>Approving {currencies[Field.CURRENCY_B]?.symbol}</Dots>\n                          ) : (\n                            'Approve ' + currencies[Field.CURRENCY_B]?.symbol\n                          )}\n                        </ButtonPrimary>\n                      )}\n                    </RowBetween>\n                  )}\n                <ButtonError\n                  onClick={() => {\n                    expertMode ? onAdd() : setShowConfirm(true);\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                  error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                >\n                  <Text fontSize={20} fontWeight={500}>\n                    {error ?? 'Supply'}\n                  </Text>\n                </ButtonError>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}