{"ast":null,"code":"import _toConsumableArray from\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray(items,maxChunkSize){if(maxChunkSize<1)throw new Error('maxChunkSize must be gte 1');if(items.length<=maxChunkSize)return[items];var numChunks=Math.ceil(items.length/maxChunkSize);var chunkSize=Math.ceil(items.length/numChunks);return _toConsumableArray(Array(numChunks).keys()).map(function(ix){return items.slice(ix*chunkSize,ix*chunkSize+chunkSize);});}","map":{"version":3,"names":["chunkArray","items","maxChunkSize","Error","length","numChunks","Math","ceil","chunkSize","Array","keys","map","ix","slice"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/utils/chunkArray.ts"],"sourcesContent":["// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1');\n  if (items.length <= maxChunkSize) return [items];\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize);\n  const chunkSize = Math.ceil(items.length / numChunks);\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize));\n}\n"],"mappings":"mMAAA;AACA;AACA,cAAe,SAASA,WAAT,CAAuBC,KAAvB,CAAmCC,YAAnC,CAAgE,CAC7E,GAAIA,YAAY,CAAG,CAAnB,CAAsB,KAAM,IAAIC,MAAJ,CAAU,4BAAV,CAAN,CACtB,GAAIF,KAAK,CAACG,MAAN,EAAgBF,YAApB,CAAkC,MAAO,CAACD,KAAD,CAAP,CAElC,GAAMI,UAAiB,CAAGC,IAAI,CAACC,IAAL,CAAUN,KAAK,CAACG,MAAN,CAAeF,YAAzB,CAA1B,CACA,GAAMM,UAAS,CAAGF,IAAI,CAACC,IAAL,CAAUN,KAAK,CAACG,MAAN,CAAeC,SAAzB,CAAlB,CAEA,MAAO,oBAAII,KAAK,CAACJ,SAAD,CAAL,CAAiBK,IAAjB,EAAJ,EAA6BC,GAA7B,CAAiC,SAACC,EAAD,QAAQX,MAAK,CAACY,KAAN,CAAYD,EAAE,CAAGJ,SAAjB,CAA4BI,EAAE,CAAGJ,SAAL,CAAiBA,SAA7C,CAAR,EAAjC,CAAP,CACD"},"metadata":{},"sourceType":"module"}