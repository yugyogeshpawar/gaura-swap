{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _slicedToArray = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _asyncToGenerator = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JsonRpcEngine = void 0;\n\nvar safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\n\nvar eth_rpc_errors_1 = require(\"eth-rpc-errors\");\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\n\n\nvar JsonRpcEngine = /*#__PURE__*/function (_safe_event_emitter_) {\n  _inherits(JsonRpcEngine, _safe_event_emitter_);\n\n  var _super = _createSuper(JsonRpcEngine);\n\n  function JsonRpcEngine() {\n    var _this;\n\n    _classCallCheck(this, JsonRpcEngine);\n\n    _this = _super.call(this);\n    _this._middleware = [];\n    return _this;\n  }\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n\n\n  _createClass(JsonRpcEngine, [{\n    key: \"push\",\n    value: function push(middleware) {\n      this._middleware.push(middleware);\n    }\n  }, {\n    key: \"handle\",\n    value: function handle(req, cb) {\n      if (cb && typeof cb !== 'function') {\n        throw new Error('\"callback\" must be a function if provided.');\n      }\n\n      if (Array.isArray(req)) {\n        if (cb) {\n          return this._handleBatch(req, cb);\n        }\n\n        return this._handleBatch(req);\n      }\n\n      if (cb) {\n        return this._handle(req, cb);\n      }\n\n      return this._promiseHandle(req);\n    }\n    /**\n     * Returns this engine as a middleware function that can be pushed to other\n     * engines.\n     *\n     * @returns This engine as a middleware function.\n     */\n\n  }, {\n    key: \"asMiddleware\",\n    value: function asMiddleware() {\n      var _this2 = this;\n\n      return /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res, next, end) {\n          var _yield$JsonRpcEngine$, _yield$JsonRpcEngine$2, middlewareError, isComplete, returnHandlers;\n\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.prev = 0;\n                  _context2.next = 3;\n                  return JsonRpcEngine._runAllMiddleware(req, res, _this2._middleware);\n\n                case 3:\n                  _yield$JsonRpcEngine$ = _context2.sent;\n                  _yield$JsonRpcEngine$2 = _slicedToArray(_yield$JsonRpcEngine$, 3);\n                  middlewareError = _yield$JsonRpcEngine$2[0];\n                  isComplete = _yield$JsonRpcEngine$2[1];\n                  returnHandlers = _yield$JsonRpcEngine$2[2];\n\n                  if (!isComplete) {\n                    _context2.next = 12;\n                    break;\n                  }\n\n                  _context2.next = 11;\n                  return JsonRpcEngine._runReturnHandlers(returnHandlers);\n\n                case 11:\n                  return _context2.abrupt(\"return\", end(middlewareError));\n\n                case 12:\n                  return _context2.abrupt(\"return\", next( /*#__PURE__*/function () {\n                    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(handlerCallback) {\n                      return _regeneratorRuntime().wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.prev = 0;\n                              _context.next = 3;\n                              return JsonRpcEngine._runReturnHandlers(returnHandlers);\n\n                            case 3:\n                              _context.next = 8;\n                              break;\n\n                            case 5:\n                              _context.prev = 5;\n                              _context.t0 = _context[\"catch\"](0);\n                              return _context.abrupt(\"return\", handlerCallback(_context.t0));\n\n                            case 8:\n                              return _context.abrupt(\"return\", handlerCallback());\n\n                            case 9:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee, null, [[0, 5]]);\n                    }));\n\n                    return function (_x5) {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }()));\n\n                case 15:\n                  _context2.prev = 15;\n                  _context2.t0 = _context2[\"catch\"](0);\n                  return _context2.abrupt(\"return\", end(_context2.t0));\n\n                case 18:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[0, 15]]);\n        }));\n\n        return function (_x, _x2, _x3, _x4) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n  }, {\n    key: \"_handleBatch\",\n    value: function () {\n      var _handleBatch2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(reqs, cb) {\n        var responses;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return Promise.all( // 1. Begin executing each request in the order received\n                reqs.map(this._promiseHandle.bind(this)));\n\n              case 3:\n                responses = _context3.sent;\n\n                if (!cb) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", cb(null, responses));\n\n              case 6:\n                return _context3.abrupt(\"return\", responses);\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n\n                if (!cb) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", cb(_context3.t0));\n\n              case 13:\n                throw _context3.t0;\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 9]]);\n      }));\n\n      function _handleBatch(_x6, _x7) {\n        return _handleBatch2.apply(this, arguments);\n      }\n\n      return _handleBatch;\n    }()\n    /**\n     * A promise-wrapped _handle.\n     */\n\n  }, {\n    key: \"_promiseHandle\",\n    value: function _promiseHandle(req) {\n      var _this3 = this;\n\n      return new Promise(function (resolve) {\n        _this3._handle(req, function (_err, res) {\n          // There will always be a response, and it will always have any error\n          // that is caught and propagated.\n          resolve(res);\n        });\n      });\n    }\n    /**\n     * Ensures that the request object is valid, processes it, and passes any\n     * error and the response object to the given callback.\n     *\n     * Does not reject.\n     */\n\n  }, {\n    key: \"_handle\",\n    value: function () {\n      var _handle2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(callerReq, cb) {\n        var _error2, _error3, req, res, error;\n\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(!callerReq || Array.isArray(callerReq) || typeof callerReq !== 'object')) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                _error2 = new eth_rpc_errors_1.EthereumRpcError(eth_rpc_errors_1.errorCodes.rpc.invalidRequest, \"Requests must be plain objects. Received: \".concat(typeof callerReq), {\n                  request: callerReq\n                });\n                return _context4.abrupt(\"return\", cb(_error2, {\n                  id: undefined,\n                  jsonrpc: '2.0',\n                  error: _error2\n                }));\n\n              case 3:\n                if (!(typeof callerReq.method !== 'string')) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                _error3 = new eth_rpc_errors_1.EthereumRpcError(eth_rpc_errors_1.errorCodes.rpc.invalidRequest, \"Must specify a string method. Received: \".concat(typeof callerReq.method), {\n                  request: callerReq\n                });\n                return _context4.abrupt(\"return\", cb(_error3, {\n                  id: callerReq.id,\n                  jsonrpc: '2.0',\n                  error: _error3\n                }));\n\n              case 6:\n                req = Object.assign({}, callerReq);\n                res = {\n                  id: req.id,\n                  jsonrpc: req.jsonrpc\n                };\n                error = null;\n                _context4.prev = 9;\n                _context4.next = 12;\n                return this._processRequest(req, res);\n\n              case 12:\n                _context4.next = 17;\n                break;\n\n              case 14:\n                _context4.prev = 14;\n                _context4.t0 = _context4[\"catch\"](9);\n                // A request handler error, a re-thrown middleware error, or something\n                // unexpected.\n                error = _context4.t0;\n\n              case 17:\n                if (error) {\n                  // Ensure no result is present on an errored response\n                  delete res.result;\n\n                  if (!res.error) {\n                    res.error = eth_rpc_errors_1.serializeError(error);\n                  }\n                }\n\n                return _context4.abrupt(\"return\", cb(error, res));\n\n              case 19:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[9, 14]]);\n      }));\n\n      function _handle(_x8, _x9) {\n        return _handle2.apply(this, arguments);\n      }\n\n      return _handle;\n    }()\n    /**\n     * For the given request and response, runs all middleware and their return\n     * handlers, if any, and ensures that internal request processing semantics\n     * are satisfied.\n     */\n\n  }, {\n    key: \"_processRequest\",\n    value: function () {\n      var _processRequest2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n        var _yield$JsonRpcEngine$3, _yield$JsonRpcEngine$4, error, isComplete, returnHandlers;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return JsonRpcEngine._runAllMiddleware(req, res, this._middleware);\n\n              case 2:\n                _yield$JsonRpcEngine$3 = _context5.sent;\n                _yield$JsonRpcEngine$4 = _slicedToArray(_yield$JsonRpcEngine$3, 3);\n                error = _yield$JsonRpcEngine$4[0];\n                isComplete = _yield$JsonRpcEngine$4[1];\n                returnHandlers = _yield$JsonRpcEngine$4[2];\n\n                // Throw if \"end\" was not called, or if the response has neither a result\n                // nor an error.\n                JsonRpcEngine._checkForCompletion(req, res, isComplete); // The return handlers should run even if an error was encountered during\n                // middleware processing.\n\n\n                _context5.next = 10;\n                return JsonRpcEngine._runReturnHandlers(returnHandlers);\n\n              case 10:\n                if (!error) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                throw error;\n\n              case 12:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function _processRequest(_x10, _x11) {\n        return _processRequest2.apply(this, arguments);\n      }\n\n      return _processRequest;\n    }()\n    /**\n     * Serially executes the given stack of middleware.\n     *\n     * @returns An array of any error encountered during middleware execution,\n     * a boolean indicating whether the request was completed, and an array of\n     * middleware-defined return handlers.\n     */\n\n  }], [{\n    key: \"_runAllMiddleware\",\n    value: function () {\n      var _runAllMiddleware2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(req, res, middlewareStack) {\n        var returnHandlers, error, isComplete, _iterator, _step, middleware, _yield$JsonRpcEngine$5, _yield$JsonRpcEngine$6;\n\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                returnHandlers = [];\n                error = null;\n                isComplete = false; // Go down stack of middleware, call and collect optional returnHandlers\n\n                _iterator = _createForOfIteratorHelper(middlewareStack);\n                _context6.prev = 4;\n\n                _iterator.s();\n\n              case 6:\n                if ((_step = _iterator.n()).done) {\n                  _context6.next = 18;\n                  break;\n                }\n\n                middleware = _step.value;\n                _context6.next = 10;\n                return JsonRpcEngine._runMiddleware(req, res, middleware, returnHandlers);\n\n              case 10:\n                _yield$JsonRpcEngine$5 = _context6.sent;\n                _yield$JsonRpcEngine$6 = _slicedToArray(_yield$JsonRpcEngine$5, 2);\n                error = _yield$JsonRpcEngine$6[0];\n                isComplete = _yield$JsonRpcEngine$6[1];\n\n                if (!isComplete) {\n                  _context6.next = 16;\n                  break;\n                }\n\n                return _context6.abrupt(\"break\", 18);\n\n              case 16:\n                _context6.next = 6;\n                break;\n\n              case 18:\n                _context6.next = 23;\n                break;\n\n              case 20:\n                _context6.prev = 20;\n                _context6.t0 = _context6[\"catch\"](4);\n\n                _iterator.e(_context6.t0);\n\n              case 23:\n                _context6.prev = 23;\n\n                _iterator.f();\n\n                return _context6.finish(23);\n\n              case 26:\n                return _context6.abrupt(\"return\", [error, isComplete, returnHandlers.reverse()]);\n\n              case 27:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, null, [[4, 20, 23, 26]]);\n      }));\n\n      function _runAllMiddleware(_x12, _x13, _x14) {\n        return _runAllMiddleware2.apply(this, arguments);\n      }\n\n      return _runAllMiddleware;\n    }()\n    /**\n     * Runs an individual middleware.\n     *\n     * @returns An array of any error encountered during middleware exection,\n     * and a boolean indicating whether the request should end.\n     */\n\n  }, {\n    key: \"_runMiddleware\",\n    value: function _runMiddleware(req, res, middleware, returnHandlers) {\n      return new Promise(function (resolve) {\n        var end = function end(err) {\n          var error = err || res.error;\n\n          if (error) {\n            res.error = eth_rpc_errors_1.serializeError(error);\n          } // True indicates that the request should end\n\n\n          resolve([error, true]);\n        };\n\n        var next = function next(returnHandler) {\n          if (res.error) {\n            end(res.error);\n          } else {\n            if (returnHandler) {\n              if (typeof returnHandler !== 'function') {\n                end(new eth_rpc_errors_1.EthereumRpcError(eth_rpc_errors_1.errorCodes.rpc.internal, \"JsonRpcEngine: \\\"next\\\" return handlers must be functions. \" + \"Received \\\"\".concat(typeof returnHandler, \"\\\" for request:\\n\").concat(jsonify(req)), {\n                  request: req\n                }));\n              }\n\n              returnHandlers.push(returnHandler);\n            } // False indicates that the request should not end\n\n\n            resolve([null, false]);\n          }\n        };\n\n        try {\n          middleware(req, res, next, end);\n        } catch (error) {\n          end(error);\n        }\n      });\n    }\n    /**\n     * Serially executes array of return handlers. The request and response are\n     * assumed to be in their scope.\n     */\n\n  }, {\n    key: \"_runReturnHandlers\",\n    value: function () {\n      var _runReturnHandlers2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(handlers) {\n        var _iterator2, _step2, _loop;\n\n        return _regeneratorRuntime().wrap(function _callee7$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _iterator2 = _createForOfIteratorHelper(handlers);\n                _context8.prev = 1;\n                _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n                  var handler;\n                  return _regeneratorRuntime().wrap(function _loop$(_context7) {\n                    while (1) {\n                      switch (_context7.prev = _context7.next) {\n                        case 0:\n                          handler = _step2.value;\n                          _context7.next = 3;\n                          return new Promise(function (resolve, reject) {\n                            handler(function (err) {\n                              return err ? reject(err) : resolve();\n                            });\n                          });\n\n                        case 3:\n                        case \"end\":\n                          return _context7.stop();\n                      }\n                    }\n                  }, _loop);\n                });\n\n                _iterator2.s();\n\n              case 4:\n                if ((_step2 = _iterator2.n()).done) {\n                  _context8.next = 8;\n                  break;\n                }\n\n                return _context8.delegateYield(_loop(), \"t0\", 6);\n\n              case 6:\n                _context8.next = 4;\n                break;\n\n              case 8:\n                _context8.next = 13;\n                break;\n\n              case 10:\n                _context8.prev = 10;\n                _context8.t1 = _context8[\"catch\"](1);\n\n                _iterator2.e(_context8.t1);\n\n              case 13:\n                _context8.prev = 13;\n\n                _iterator2.f();\n\n                return _context8.finish(13);\n\n              case 16:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee7, null, [[1, 10, 13, 16]]);\n      }));\n\n      function _runReturnHandlers(_x15) {\n        return _runReturnHandlers2.apply(this, arguments);\n      }\n\n      return _runReturnHandlers;\n    }()\n    /**\n     * Throws an error if the response has neither a result nor an error, or if\n     * the \"isComplete\" flag is falsy.\n     */\n\n  }, {\n    key: \"_checkForCompletion\",\n    value: function _checkForCompletion(req, res, isComplete) {\n      if (!('result' in res) && !('error' in res)) {\n        throw new eth_rpc_errors_1.EthereumRpcError(eth_rpc_errors_1.errorCodes.rpc.internal, \"JsonRpcEngine: Response has no error or result for request:\\n\".concat(jsonify(req)), {\n          request: req\n        });\n      }\n\n      if (!isComplete) {\n        throw new eth_rpc_errors_1.EthereumRpcError(eth_rpc_errors_1.errorCodes.rpc.internal, \"JsonRpcEngine: Nothing ended request:\\n\".concat(jsonify(req)), {\n          request: req\n        });\n      }\n    }\n  }]);\n\n  return JsonRpcEngine;\n}(safe_event_emitter_1.default);\n\nexports.JsonRpcEngine = JsonRpcEngine;\n\nfunction jsonify(request) {\n  return JSON.stringify(request, null, 2);\n}","map":{"version":3,"mappings":"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","names":["JsonRpcEngine","_middleware","middleware","push","req","cb","Error","Array","isArray","_handleBatch","_handle","_promiseHandle","res","next","end","_runAllMiddleware","middlewareError","isComplete","returnHandlers","_runReturnHandlers","handlerCallback","reqs","Promise","all","map","bind","responses","resolve","_err","callerReq","error","eth_rpc_errors_1","rpc","invalidRequest","request","id","undefined","jsonrpc","method","Object","_processRequest","result","_checkForCompletion","middlewareStack","_runMiddleware","reverse","err","returnHandler","internal","jsonify","handlers","handler","reject","safe_event_emitter_1","exports","JSON","stringify"],"sourceRoot":"","sources":["../src/JsonRpcEngine.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}