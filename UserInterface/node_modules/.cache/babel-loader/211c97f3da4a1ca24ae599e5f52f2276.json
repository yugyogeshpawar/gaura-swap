{"ast":null,"code":"import _slicedToArray from\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Pair,Token}from'@uniswap/sdk';import flatMap from'lodash.flatmap';import{useCallback,useMemo}from'react';import{shallowEqual,useDispatch,useSelector}from'react-redux';import{BASES_TO_TRACK_LIQUIDITY_FOR,PINNED_PAIRS,LP_TOKEN_NAME,LP_TOKEN_SYMBOL}from'../../constants';import{useActiveWeb3React}from'../../hooks';import{useAllTokens}from'../../hooks/Tokens';import{addSerializedPair,addSerializedToken,removeSerializedToken,updateUserDarkMode,updateUserDeadline,updateUserExpertMode,updateUserSlippageTolerance,toggleURLWarning,updateUserSingleHopOnly}from'./actions';function serializeToken(token){return{chainId:token.chainId,address:token.address,decimals:token.decimals,symbol:token.symbol,name:token.name};}function deserializeToken(serializedToken){return new Token(serializedToken.chainId,serializedToken.address,serializedToken.decimals,serializedToken.symbol,serializedToken.name);}export function useIsDarkMode(){var _useSelector=useSelector(function(_ref){var _ref$user=_ref.user,matchesDarkMode=_ref$user.matchesDarkMode,userDarkMode=_ref$user.userDarkMode;return{userDarkMode:userDarkMode,matchesDarkMode:matchesDarkMode};},shallowEqual),userDarkMode=_useSelector.userDarkMode,matchesDarkMode=_useSelector.matchesDarkMode;return userDarkMode===null?matchesDarkMode:userDarkMode;}export function useDarkModeManager(){var dispatch=useDispatch();var darkMode=useIsDarkMode();var toggleSetDarkMode=useCallback(function(){dispatch(updateUserDarkMode({userDarkMode:!darkMode}));},[darkMode,dispatch]);return[darkMode,toggleSetDarkMode];}export function useIsExpertMode(){return useSelector(function(state){return state.user.userExpertMode;});}export function useExpertModeManager(){var dispatch=useDispatch();var expertMode=useIsExpertMode();var toggleSetExpertMode=useCallback(function(){dispatch(updateUserExpertMode({userExpertMode:!expertMode}));},[expertMode,dispatch]);return[expertMode,toggleSetExpertMode];}export function useUserSingleHopOnly(){var dispatch=useDispatch();var singleHopOnly=useSelector(function(state){return state.user.userSingleHopOnly;});var setSingleHopOnly=useCallback(function(newSingleHopOnly){dispatch(updateUserSingleHopOnly({userSingleHopOnly:newSingleHopOnly}));},[dispatch]);return[singleHopOnly,setSingleHopOnly];}export function useUserSlippageTolerance(){var dispatch=useDispatch();var userSlippageTolerance=useSelector(function(state){return state.user.userSlippageTolerance;});var setUserSlippageTolerance=useCallback(function(userSlippageTolerance){dispatch(updateUserSlippageTolerance({userSlippageTolerance:userSlippageTolerance}));},[dispatch]);return[userSlippageTolerance,setUserSlippageTolerance];}export function useUserTransactionTTL(){var dispatch=useDispatch();var userDeadline=useSelector(function(state){return state.user.userDeadline;});var setUserDeadline=useCallback(function(userDeadline){dispatch(updateUserDeadline({userDeadline:userDeadline}));},[dispatch]);return[userDeadline,setUserDeadline];}export function useAddUserToken(){var dispatch=useDispatch();return useCallback(function(token){dispatch(addSerializedToken({serializedToken:serializeToken(token)}));},[dispatch]);}export function useRemoveUserAddedToken(){var dispatch=useDispatch();return useCallback(function(chainId,address){dispatch(removeSerializedToken({chainId:chainId,address:address}));},[dispatch]);}export function useUserAddedTokens(){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var serializedTokensMap=useSelector(function(_ref2){var tokens=_ref2.user.tokens;return tokens;});return useMemo(function(){var _serializedTokensMap;if(!chainId)return[];return Object.values((_serializedTokensMap=serializedTokensMap[chainId])!==null&&_serializedTokensMap!==void 0?_serializedTokensMap:{}).map(deserializeToken);},[serializedTokensMap,chainId]);}function serializePair(pair){return{token0:serializeToken(pair.token0),token1:serializeToken(pair.token1)};}export function usePairAdder(){var dispatch=useDispatch();return useCallback(function(pair){dispatch(addSerializedPair({serializedPair:serializePair(pair)}));},[dispatch]);}export function useURLWarningVisible(){return useSelector(function(state){return state.user.URLWarningVisible;});}export function useURLWarningToggle(){var dispatch=useDispatch();return useCallback(function(){return dispatch(toggleURLWarning());},[dispatch]);}/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */export function toV2LiquidityToken(_ref3){var _ref4=_slicedToArray(_ref3,2),tokenA=_ref4[0],tokenB=_ref4[1];return new Token(tokenA.chainId,Pair.getAddress(tokenA,tokenB),18,LP_TOKEN_SYMBOL,LP_TOKEN_NAME);}/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */export function useTrackedTokenPairs(){var _useActiveWeb3React2=useActiveWeb3React(),chainId=_useActiveWeb3React2.chainId;var tokens=useAllTokens();// pinned pairs\nvar pinnedPairs=useMemo(function(){var _PINNED_PAIRS$chainId;return chainId?(_PINNED_PAIRS$chainId=PINNED_PAIRS[chainId])!==null&&_PINNED_PAIRS$chainId!==void 0?_PINNED_PAIRS$chainId:[]:[];},[chainId]);// pairs for every token against every base\nvar generatedPairs=useMemo(function(){return chainId?flatMap(Object.keys(tokens),function(tokenAddress){var _BASES_TO_TRACK_LIQUI;var token=tokens[tokenAddress];// for each token on the current chain,\nreturn(// loop though all bases on the current chain\n((_BASES_TO_TRACK_LIQUI=BASES_TO_TRACK_LIQUIDITY_FOR[chainId])!==null&&_BASES_TO_TRACK_LIQUI!==void 0?_BASES_TO_TRACK_LIQUI:[]// to construct pairs of the given token with each base\n).map(function(base){if(base.address===token.address){return null;}else{return[base,token];}}).filter(function(p){return p!==null;}));}):[];},[tokens,chainId]);// pairs saved by users\nvar savedSerializedPairs=useSelector(function(_ref5){var pairs=_ref5.user.pairs;return pairs;});var userPairs=useMemo(function(){if(!chainId||!savedSerializedPairs)return[];var forChain=savedSerializedPairs[chainId];if(!forChain)return[];return Object.keys(forChain).map(function(pairId){return[deserializeToken(forChain[pairId].token0),deserializeToken(forChain[pairId].token1)];});},[savedSerializedPairs,chainId]);var combinedList=useMemo(function(){return userPairs.concat(generatedPairs).concat(pinnedPairs);},[generatedPairs,pinnedPairs,userPairs]);return useMemo(function(){// dedupes pairs of tokens in the combined list\nvar keyed=combinedList.reduce(function(memo,_ref6){var _ref7=_slicedToArray(_ref6,2),tokenA=_ref7[0],tokenB=_ref7[1];var sorted=tokenA.sortsBefore(tokenB);var key=sorted?\"\".concat(tokenA.address,\":\").concat(tokenB.address):\"\".concat(tokenB.address,\":\").concat(tokenA.address);if(memo[key])return memo;memo[key]=sorted?[tokenA,tokenB]:[tokenB,tokenA];return memo;},{});return Object.keys(keyed).map(function(key){return keyed[key];});},[combinedList]);}","map":{"version":3,"names":["Pair","Token","flatMap","useCallback","useMemo","shallowEqual","useDispatch","useSelector","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","LP_TOKEN_NAME","LP_TOKEN_SYMBOL","useActiveWeb3React","useAllTokens","addSerializedPair","addSerializedToken","removeSerializedToken","updateUserDarkMode","updateUserDeadline","updateUserExpertMode","updateUserSlippageTolerance","toggleURLWarning","updateUserSingleHopOnly","serializeToken","token","chainId","address","decimals","symbol","name","deserializeToken","serializedToken","useIsDarkMode","user","matchesDarkMode","userDarkMode","useDarkModeManager","dispatch","darkMode","toggleSetDarkMode","useIsExpertMode","state","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useUserSingleHopOnly","singleHopOnly","userSingleHopOnly","setSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","setUserSlippageTolerance","useUserTransactionTTL","userDeadline","setUserDeadline","useAddUserToken","useRemoveUserAddedToken","useUserAddedTokens","serializedTokensMap","tokens","Object","values","map","serializePair","pair","token0","token1","usePairAdder","serializedPair","useURLWarningVisible","URLWarningVisible","useURLWarningToggle","toV2LiquidityToken","tokenA","tokenB","getAddress","useTrackedTokenPairs","pinnedPairs","generatedPairs","keys","tokenAddress","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","key"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/state/user/hooks.tsx"],"sourcesContent":["import { ChainId, Pair, Token } from '@uniswap/sdk';\nimport flatMap from 'lodash.flatmap';\nimport { useCallback, useMemo } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS, LP_TOKEN_NAME, LP_TOKEN_SYMBOL } from '../../constants';\n\nimport { useActiveWeb3React } from '../../hooks';\nimport { useAllTokens } from '../../hooks/Tokens';\nimport { AppDispatch, AppState } from '../index';\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserDarkMode,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  toggleURLWarning,\n  updateUserSingleHopOnly,\n} from './actions';\n\nfunction serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  };\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  );\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useSelector<\n    AppState,\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\n  >(\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode,\n    }),\n    shallowEqual\n  );\n\n  return userDarkMode === null ? matchesDarkMode : userDarkMode;\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>();\n  const darkMode = useIsDarkMode();\n\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }));\n  }, [darkMode, dispatch]);\n\n  return [darkMode, toggleSetDarkMode];\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode);\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>();\n  const expertMode = useIsExpertMode();\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }));\n  }, [expertMode, dispatch]);\n\n  return [expertMode, toggleSetExpertMode];\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly\n  );\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }));\n    },\n    [dispatch]\n  );\n\n  return [singleHopOnly, setSingleHopOnly];\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>();\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance;\n  });\n\n  const setUserSlippageTolerance = useCallback(\n    (userSlippageTolerance: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance }));\n    },\n    [dispatch]\n  );\n\n  return [userSlippageTolerance, setUserSlippageTolerance];\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>();\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline;\n  });\n\n  const setUserDeadline = useCallback(\n    (userDeadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline }));\n    },\n    [dispatch]\n  );\n\n  return [userDeadline, setUserDeadline];\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>();\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }));\n    },\n    [dispatch]\n  );\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>();\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }));\n    },\n    [dispatch]\n  );\n}\n\nexport function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React();\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens);\n\n  return useMemo(() => {\n    if (!chainId) return [];\n    return Object.values(serializedTokensMap[chainId as ChainId] ?? {}).map(deserializeToken);\n  }, [serializedTokensMap, chainId]);\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  };\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>();\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }));\n    },\n    [dispatch]\n  );\n}\n\nexport function useURLWarningVisible(): boolean {\n  return useSelector((state: AppState) => state.user.URLWarningVisible);\n}\n\nexport function useURLWarningToggle(): () => void {\n  const dispatch = useDispatch();\n  return useCallback(() => dispatch(toggleURLWarning()), [dispatch]);\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, LP_TOKEN_SYMBOL, LP_TOKEN_NAME);\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React();\n  const tokens = useAllTokens();\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId]);\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress];\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null;\n                  } else {\n                    return [base, token];\n                  }\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            );\n          })\n        : [],\n    [tokens, chainId]\n  );\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs);\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return [];\n    const forChain = savedSerializedPairs[chainId];\n    if (!forChain) return [];\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)];\n    });\n  }, [savedSerializedPairs, chainId]);\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs]\n  );\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB);\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`;\n      if (memo[key]) return memo;\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA];\n      return memo;\n    }, {});\n\n    return Object.keys(keyed).map((key) => keyed[key]);\n  }, [combinedList]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}