{"ast":null,"code":"\"use strict\";\n\nimport _assertThisInitialized from \"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nvar allowedTransactionKeys = [\"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"];\nvar forwardErrors = [Logger.errors.INSUFFICIENT_FUNDS, Logger.errors.NONCE_EXPIRED, Logger.errors.REPLACEMENT_UNDERPRICED];\n;\n;\nexport var Signer = /*#__PURE__*/function () {\n  ///////////////////\n  // Sub-classes MUST call super\n  function Signer() {\n    _classCallCheck(this, Signer);\n\n    logger.checkAbstract(this instanceof Signer ? this.constructor : void 0, Signer);\n    defineReadOnly(this, \"_isSigner\", true);\n  } ///////////////////\n  // Sub-classes MAY override these\n\n\n  _createClass(Signer, [{\n    key: \"getBalance\",\n    value: function getBalance(blockTag) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this._checkProvider(\"getBalance\");\n\n                _context.next = 3;\n                return this.provider.getBalance(this.getAddress(), blockTag);\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"getTransactionCount\",\n    value: function getTransactionCount(blockTag) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this._checkProvider(\"getTransactionCount\");\n\n                _context2.next = 3;\n                return this.provider.getTransactionCount(this.getAddress(), blockTag);\n\n              case 3:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    } // Populates \"from\" if unspecified, and estimates the gas for the transaction\n\n  }, {\n    key: \"estimateGas\",\n    value: function estimateGas(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var tx;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this._checkProvider(\"estimateGas\");\n\n                _context3.next = 3;\n                return resolveProperties(this.checkTransaction(transaction));\n\n              case 3:\n                tx = _context3.sent;\n                _context3.next = 6;\n                return this.provider.estimateGas(tx);\n\n              case 6:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    } // Populates \"from\" if unspecified, and calls with the transaction\n\n  }, {\n    key: \"call\",\n    value: function call(transaction, blockTag) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var tx;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this._checkProvider(\"call\");\n\n                _context4.next = 3;\n                return resolveProperties(this.checkTransaction(transaction));\n\n              case 3:\n                tx = _context4.sent;\n                _context4.next = 6;\n                return this.provider.call(tx, blockTag);\n\n              case 6:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    } // Populates all fields in a transaction, signs it and sends it to the network\n\n  }, {\n    key: \"sendTransaction\",\n    value: function sendTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var tx, signedTx;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this._checkProvider(\"sendTransaction\");\n\n                _context5.next = 3;\n                return this.populateTransaction(transaction);\n\n              case 3:\n                tx = _context5.sent;\n                _context5.next = 6;\n                return this.signTransaction(tx);\n\n              case 6:\n                signedTx = _context5.sent;\n                _context5.next = 9;\n                return this.provider.sendTransaction(signedTx);\n\n              case 9:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n  }, {\n    key: \"getChainId\",\n    value: function getChainId() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var network;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this._checkProvider(\"getChainId\");\n\n                _context6.next = 3;\n                return this.provider.getNetwork();\n\n              case 3:\n                network = _context6.sent;\n                return _context6.abrupt(\"return\", network.chainId);\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n  }, {\n    key: \"getGasPrice\",\n    value: function getGasPrice() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this._checkProvider(\"getGasPrice\");\n\n                _context7.next = 3;\n                return this.provider.getGasPrice();\n\n              case 3:\n                return _context7.abrupt(\"return\", _context7.sent);\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n  }, {\n    key: \"getFeeData\",\n    value: function getFeeData() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                this._checkProvider(\"getFeeData\");\n\n                _context8.next = 3;\n                return this.provider.getFeeData();\n\n              case 3:\n                return _context8.abrupt(\"return\", _context8.sent);\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n    }\n  }, {\n    key: \"resolveName\",\n    value: function resolveName(name) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this._checkProvider(\"resolveName\");\n\n                _context9.next = 3;\n                return this.provider.resolveName(name);\n\n              case 3:\n                return _context9.abrupt(\"return\", _context9.sent);\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n    } // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n\n  }, {\n    key: \"checkTransaction\",\n    value: function checkTransaction(transaction) {\n      for (var key in transaction) {\n        if (allowedTransactionKeys.indexOf(key) === -1) {\n          logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n        }\n      }\n\n      var tx = shallowCopy(transaction);\n\n      if (tx.from == null) {\n        tx.from = this.getAddress();\n      } else {\n        // Make sure any provided address matches this signer\n        tx.from = Promise.all([Promise.resolve(tx.from), this.getAddress()]).then(function (result) {\n          if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n            logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n          }\n\n          return result[0];\n        });\n      }\n\n      return tx;\n    } // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n\n  }, {\n    key: \"populateTransaction\",\n    value: function populateTransaction(transaction) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        var _this = this;\n\n        var tx, hasEip1559, feeData, gasPrice;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return resolveProperties(this.checkTransaction(transaction));\n\n              case 2:\n                tx = _context11.sent;\n\n                if (tx.to != null) {\n                  tx.to = Promise.resolve(tx.to).then(function (to) {\n                    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n                      var address;\n                      return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n                        while (1) {\n                          switch (_context10.prev = _context10.next) {\n                            case 0:\n                              if (!(to == null)) {\n                                _context10.next = 2;\n                                break;\n                              }\n\n                              return _context10.abrupt(\"return\", null);\n\n                            case 2:\n                              _context10.next = 4;\n                              return this.resolveName(to);\n\n                            case 4:\n                              address = _context10.sent;\n\n                              if (address == null) {\n                                logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                              }\n\n                              return _context10.abrupt(\"return\", address);\n\n                            case 7:\n                            case \"end\":\n                              return _context10.stop();\n                          }\n                        }\n                      }, _callee10, this);\n                    }));\n                  }); // Prevent this error from causing an UnhandledPromiseException\n\n                  tx.to.catch(function (error) {});\n                } // Do not allow mixing pre-eip-1559 and eip-1559 properties\n\n\n                hasEip1559 = tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null;\n\n                if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n                  logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n                } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n                  logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n                }\n\n                if (!((tx.type === 2 || tx.type == null) && tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n                  _context11.next = 10;\n                  break;\n                }\n\n                // Fully-formed EIP-1559 transaction (skip getFeeData)\n                tx.type = 2;\n                _context11.next = 18;\n                break;\n\n              case 10:\n                if (!(tx.type === 0 || tx.type === 1)) {\n                  _context11.next = 14;\n                  break;\n                }\n\n                // Explicit Legacy or EIP-2930 transaction\n                // Populate missing gasPrice\n                if (tx.gasPrice == null) {\n                  tx.gasPrice = this.getGasPrice();\n                }\n\n                _context11.next = 18;\n                break;\n\n              case 14:\n                _context11.next = 16;\n                return this.getFeeData();\n\n              case 16:\n                feeData = _context11.sent;\n\n                if (tx.type == null) {\n                  // We need to auto-detect the intended type of this transaction...\n                  if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                      // Using legacy gasPrice property on an eip-1559 network,\n                      // so use gasPrice as both fee properties\n                      gasPrice = tx.gasPrice;\n                      delete tx.gasPrice;\n                      tx.maxFeePerGas = gasPrice;\n                      tx.maxPriorityFeePerGas = gasPrice;\n                    } else {\n                      // Populate missing fee data\n                      if (tx.maxFeePerGas == null) {\n                        tx.maxFeePerGas = feeData.maxFeePerGas;\n                      }\n\n                      if (tx.maxPriorityFeePerGas == null) {\n                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                      }\n                    }\n                  } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                      logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"populateTransaction\"\n                      });\n                    } // Populate missing fee data\n\n\n                    if (tx.gasPrice == null) {\n                      tx.gasPrice = feeData.gasPrice;\n                    } // Explicitly set untyped transaction to legacy\n\n\n                    tx.type = 0;\n                  } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                      operation: \"signer.getFeeData\"\n                    });\n                  }\n                } else if (tx.type === 2) {\n                  // Explicitly using EIP-1559\n                  // Populate missing fee data\n                  if (tx.maxFeePerGas == null) {\n                    tx.maxFeePerGas = feeData.maxFeePerGas;\n                  }\n\n                  if (tx.maxPriorityFeePerGas == null) {\n                    tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                  }\n                }\n\n              case 18:\n                if (tx.nonce == null) {\n                  tx.nonce = this.getTransactionCount(\"pending\");\n                }\n\n                if (tx.gasLimit == null) {\n                  tx.gasLimit = this.estimateGas(tx).catch(function (error) {\n                    if (forwardErrors.indexOf(error.code) >= 0) {\n                      throw error;\n                    }\n\n                    return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                      error: error,\n                      tx: tx\n                    });\n                  });\n                }\n\n                if (tx.chainId == null) {\n                  tx.chainId = this.getChainId();\n                } else {\n                  tx.chainId = Promise.all([Promise.resolve(tx.chainId), this.getChainId()]).then(function (results) {\n                    if (results[1] !== 0 && results[0] !== results[1]) {\n                      logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                    }\n\n                    return results[0];\n                  });\n                }\n\n                _context11.next = 23;\n                return resolveProperties(tx);\n\n              case 23:\n                return _context11.abrupt(\"return\", _context11.sent);\n\n              case 24:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n    } ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n  }, {\n    key: \"_checkProvider\",\n    value: function _checkProvider(operation) {\n      if (!this.provider) {\n        logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: operation || \"_checkProvider\"\n        });\n      }\n    }\n  }], [{\n    key: \"isSigner\",\n    value: function isSigner(value) {\n      return !!(value && value._isSigner);\n    }\n  }]);\n\n  return Signer;\n}();\nexport var VoidSigner = /*#__PURE__*/function (_Signer) {\n  _inherits(VoidSigner, _Signer);\n\n  var _super = _createSuper(VoidSigner);\n\n  function VoidSigner(address, provider) {\n    var _this2;\n\n    _classCallCheck(this, VoidSigner);\n\n    _this2 = _super.call(this);\n    defineReadOnly(_assertThisInitialized(_this2), \"address\", address);\n    defineReadOnly(_assertThisInitialized(_this2), \"provider\", provider || null);\n    return _this2;\n  }\n\n  _createClass(VoidSigner, [{\n    key: \"getAddress\",\n    value: function getAddress() {\n      return Promise.resolve(this.address);\n    }\n  }, {\n    key: \"_fail\",\n    value: function _fail(message, operation) {\n      return Promise.resolve().then(function () {\n        logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: operation\n        });\n      });\n    }\n  }, {\n    key: \"signMessage\",\n    value: function signMessage(message) {\n      return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n  }, {\n    key: \"signTransaction\",\n    value: function signTransaction(transaction) {\n      return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n  }, {\n    key: \"_signTypedData\",\n    value: function _signTypedData(domain, types, value) {\n      return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n  }, {\n    key: \"connect\",\n    value: function connect(provider) {\n      return new VoidSigner(this.address, provider);\n    }\n  }]);\n\n  return VoidSigner;\n}(Signer);","map":{"version":3,"mappings":"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","names":["defineReadOnly","resolveProperties","shallowCopy","Logger","version","logger","allowedTransactionKeys","forwardErrors","errors","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","Signer","checkAbstract","blockTag","_checkProvider","provider","getBalance","getAddress","getTransactionCount","transaction","checkTransaction","tx","estimateGas","call","populateTransaction","signTransaction","signedTx","sendTransaction","getNetwork","network","chainId","getGasPrice","getFeeData","name","resolveName","key","indexOf","throwArgumentError","from","Promise","all","resolve","then","result","toLowerCase","to","__awaiter","address","catch","error","hasEip1559","maxFeePerGas","maxPriorityFeePerGas","gasPrice","type","feeData","throwError","UNSUPPORTED_OPERATION","operation","nonce","gasLimit","code","UNPREDICTABLE_GAS_LIMIT","getChainId","results","value","_isSigner","VoidSigner","message","_fail","domain","types"],"sourceRoot":"","sources":["../src.ts/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}