{"ast":null,"code":"'use strict';\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n *\n * @param {Array<ArrayLike<number>>} arrays\n * @param {number} [length]\n */\n\nfunction concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n\n  const output = new Uint8Array(length);\n  let offset = 0;\n\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n\n  return output;\n}\n\nmodule.exports = concat;","map":{"version":3,"names":["concat","arrays","length","reduce","acc","curr","output","Uint8Array","offset","arr","set","module","exports"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/uint8arrays/concat.js"],"sourcesContent":["'use strict'\n\n/**\n * Returns a new Uint8Array created by concatenating the passed ArrayLikes\n *\n * @param {Array<ArrayLike<number>>} arrays\n * @param {number} [length]\n */\nfunction concat (arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0)\n  }\n\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrays) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = concat\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,MAAT,CAAiBC,MAAjB,EAAyBC,MAAzB,EAAiC;EAC/B,IAAI,CAACA,MAAL,EAAa;IACXA,MAAM,GAAGD,MAAM,CAACE,MAAP,CAAc,CAACC,GAAD,EAAMC,IAAN,KAAeD,GAAG,GAAGC,IAAI,CAACH,MAAxC,EAAgD,CAAhD,CAAT;EACD;;EAED,MAAMI,MAAM,GAAG,IAAIC,UAAJ,CAAeL,MAAf,CAAf;EACA,IAAIM,MAAM,GAAG,CAAb;;EAEA,KAAK,MAAMC,GAAX,IAAkBR,MAAlB,EAA0B;IACxBK,MAAM,CAACI,GAAP,CAAWD,GAAX,EAAgBD,MAAhB;IACAA,MAAM,IAAIC,GAAG,CAACP,MAAd;EACD;;EAED,OAAOI,MAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBZ,MAAjB"},"metadata":{},"sourceType":"script"}