{"ast":null,"code":"\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = {\n  debug: 1,\n  \"default\": 2,\n  info: 2,\n  warning: 3,\n  error: 4,\n  off: 5\n};\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\n\nfunction _checkNormalize() {\n  try {\n    const missing = []; // Make sure all forms of normalization are supported\n\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(form => {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n\n        ;\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    return error.message;\n  }\n\n  return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport var LogLevel;\n\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"DEBUG\";\n  LogLevel[\"INFO\"] = \"INFO\";\n  LogLevel[\"WARNING\"] = \"WARNING\";\n  LogLevel[\"ERROR\"] = \"ERROR\";\n  LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\n\nexport var ErrorCode;\n\n(function (ErrorCode) {\n  ///////////////////\n  // Generic Errors\n  // Unknown Error\n  ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\"; // Not Implemented\n\n  ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\"; // Unsupported Operation\n  //   - operation\n\n  ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\"; // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n\n  ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\"; // Some sort of bad response from the server\n\n  ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\"; // Timeout\n\n  ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\"; ///////////////////\n  // Operational  Errors\n  // Buffer Overrun\n\n  ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\"; // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n\n  ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\"; ///////////////////\n  // Argument Errors\n  // Missing new operator to an object\n  //  - name: The name of the class\n\n  ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\"; // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n\n  ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\"; // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\"; // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\"; ///////////////////\n  // Blockchain Errors\n  // Call exception\n  //  - transaction: the transaction\n  //  - address?: the contract address\n  //  - args?: The arguments passed into the function\n  //  - method?: The Solidity method signature\n  //  - errorSignature?: The EIP848 error signature\n  //  - errorArgs?: The EIP848 error parameters\n  //  - reason: The reason (only for EIP848 \"Error(string)\")\n\n  ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\"; // Insufficien funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\"; // Nonce has already been used\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\"; // The replacement fee for the transaction is too low\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\"; // The gas limit could not be estimated\n  //   - transaction: the transaction passed to estimateGas\n\n  ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\"; // The transaction was replaced by one with a higher gas price\n  //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n  //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n  //   - hash: original transaction hash\n  //   - replacement: the full TransactionsResponse for the replacement\n  //   - receipt: the receipt of the replacement\n\n  ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n\n;\nexport class Logger {\n  constructor(version) {\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      value: version,\n      writable: false\n    });\n  }\n\n  _log(logLevel, args) {\n    const level = logLevel.toLowerCase();\n\n    if (LogLevels[level] == null) {\n      this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n    }\n\n    if (_logLevel > LogLevels[level]) {\n      return;\n    }\n\n    console.log.apply(console, args);\n  }\n\n  debug() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._log(Logger.levels.DEBUG, args);\n  }\n\n  info() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this._log(Logger.levels.INFO, args);\n  }\n\n  warn() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    this._log(Logger.levels.WARNING, args);\n  }\n\n  makeError(message, code, params) {\n    // Errors are being censored\n    if (_censorErrors) {\n      return this.makeError(\"censored error\", code, {});\n    }\n\n    if (!code) {\n      code = Logger.errors.UNKNOWN_ERROR;\n    }\n\n    if (!params) {\n      params = {};\n    }\n\n    const messageDetails = [];\n    Object.keys(params).forEach(key => {\n      try {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n      } catch (error) {\n        messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n      }\n    });\n    messageDetails.push(`code=${code}`);\n    messageDetails.push(`version=${this.version}`);\n    const reason = message;\n\n    if (messageDetails.length) {\n      message += \" (\" + messageDetails.join(\", \") + \")\";\n    } // @TODO: Any??\n\n\n    const error = new Error(message);\n    error.reason = reason;\n    error.code = code;\n    Object.keys(params).forEach(function (key) {\n      error[key] = params[key];\n    });\n    return error;\n  }\n\n  throwError(message, code, params) {\n    throw this.makeError(message, code, params);\n  }\n\n  throwArgumentError(message, name, value) {\n    return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n      argument: name,\n      value: value\n    });\n  }\n\n  assert(condition, message, code, params) {\n    if (!!condition) {\n      return;\n    }\n\n    this.throwError(message, code, params);\n  }\n\n  assertArgument(condition, message, name, value) {\n    if (!!condition) {\n      return;\n    }\n\n    this.throwArgumentError(message, name, value);\n  }\n\n  checkNormalize(message) {\n    if (message == null) {\n      message = \"platform missing String.prototype.normalize\";\n    }\n\n    if (_normalizeError) {\n      this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"String.prototype.normalize\",\n        form: _normalizeError\n      });\n    }\n  }\n\n  checkSafeUint53(value, message) {\n    if (typeof value !== \"number\") {\n      return;\n    }\n\n    if (message == null) {\n      message = \"value not safe\";\n    }\n\n    if (value < 0 || value >= 0x1fffffffffffff) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"out-of-safe-range\",\n        value: value\n      });\n    }\n\n    if (value % 1) {\n      this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n        operation: \"checkSafeInteger\",\n        fault: \"non-integer\",\n        value: value\n      });\n    }\n  }\n\n  checkArgumentCount(count, expectedCount, message) {\n    if (message) {\n      message = \": \" + message;\n    } else {\n      message = \"\";\n    }\n\n    if (count < expectedCount) {\n      this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n\n    if (count > expectedCount) {\n      this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n        count: count,\n        expectedCount: expectedCount\n      });\n    }\n  }\n\n  checkNew(target, kind) {\n    if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n\n  checkAbstract(target, kind) {\n    if (target === kind) {\n      this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, {\n        name: target.name,\n        operation: \"new\"\n      });\n    } else if (target === Object || target == null) {\n      this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n        name: kind.name\n      });\n    }\n  }\n\n  static globalLogger() {\n    if (!_globalLogger) {\n      _globalLogger = new Logger(version);\n    }\n\n    return _globalLogger;\n  }\n\n  static setCensorship(censorship, permanent) {\n    if (!censorship && permanent) {\n      this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n\n    if (_permanentCensorErrors) {\n      if (!censorship) {\n        return;\n      }\n\n      this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"setCensorship\"\n      });\n    }\n\n    _censorErrors = !!censorship;\n    _permanentCensorErrors = !!permanent;\n  }\n\n  static setLogLevel(logLevel) {\n    const level = LogLevels[logLevel.toLowerCase()];\n\n    if (level == null) {\n      Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n      return;\n    }\n\n    _logLevel = level;\n  }\n\n  static from(version) {\n    return new Logger(version);\n  }\n\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;","map":{"version":3,"mappings":"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","names":["_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","version","_globalLogger","_checkNormalize","missing","forEach","form","normalize","Error","push","length","join","String","fromCharCode","message","_normalizeError","LogLevel","ErrorCode","Logger","constructor","Object","defineProperty","enumerable","value","writable","_log","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","keys","key","JSON","stringify","toString","reason","throwError","name","INVALID_ARGUMENT","argument","assert","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","NUMERIC_FAULT","fault","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","MISSING_NEW","checkAbstract","globalLogger","setCensorship","censorship","permanent","setLogLevel","from"],"sourceRoot":"","sources":["../src.ts/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}