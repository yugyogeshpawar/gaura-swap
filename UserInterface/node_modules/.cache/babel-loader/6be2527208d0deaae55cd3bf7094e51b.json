{"ast":null,"code":"import { isAddress } from '../../utils';\nexport function filterTokens(tokens, search) {\n  if (search.length === 0) return tokens;\n  const searchingAddress = isAddress(search);\n\n  if (searchingAddress) {\n    return tokens.filter(token => token.address === searchingAddress);\n  }\n\n  const lowerSearchParts = search.toLowerCase().split(/\\s+/).filter(s => s.length > 0);\n\n  if (lowerSearchParts.length === 0) {\n    return tokens;\n  }\n\n  const matchesSearch = s => {\n    const sParts = s.toLowerCase().split(/\\s+/).filter(s => s.length > 0);\n    return lowerSearchParts.every(p => p.length === 0 || sParts.some(sp => sp.startsWith(p) || sp.endsWith(p)));\n  };\n\n  return tokens.filter(token => {\n    const {\n      symbol,\n      name\n    } = token;\n    return symbol && matchesSearch(symbol) || name && matchesSearch(name);\n  }); // .sort((t0: Token, t1: Token) => {\n  //   if (t0.symbol && matchesSearch(t0.symbol) && t1.symbol && !matchesSearch(t1.symbol)) {\n  //     return -1\n  //   }\n  //   if (t0.symbol && !matchesSearch(t0.symbol) && t1.symbol && matchesSearch(t1.symbol)) {\n  //     return 1\n  //   }\n  //   return 0\n  // })\n}","map":{"version":3,"names":["isAddress","filterTokens","tokens","search","length","searchingAddress","filter","token","address","lowerSearchParts","toLowerCase","split","s","matchesSearch","sParts","every","p","some","sp","startsWith","endsWith","symbol","name"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/components/SearchModal/filtering.ts"],"sourcesContent":["import { isAddress } from '../../utils';\nimport { Token } from '@uniswap/sdk';\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens;\n\n  const searchingAddress = isAddress(search);\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress);\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0);\n\n  if (lowerSearchParts.length === 0) {\n    return tokens;\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0);\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)));\n  };\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token;\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name));\n  });\n  // .sort((t0: Token, t1: Token) => {\n  //   if (t0.symbol && matchesSearch(t0.symbol) && t1.symbol && !matchesSearch(t1.symbol)) {\n  //     return -1\n  //   }\n  //   if (t0.symbol && !matchesSearch(t0.symbol) && t1.symbol && matchesSearch(t1.symbol)) {\n  //     return 1\n  //   }\n  //   return 0\n  // })\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AAGA,OAAO,SAASC,YAAT,CAAsBC,MAAtB,EAAuCC,MAAvC,EAAgE;EACrE,IAAIA,MAAM,CAACC,MAAP,KAAkB,CAAtB,EAAyB,OAAOF,MAAP;EAEzB,MAAMG,gBAAgB,GAAGL,SAAS,CAACG,MAAD,CAAlC;;EAEA,IAAIE,gBAAJ,EAAsB;IACpB,OAAOH,MAAM,CAACI,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACC,OAAN,KAAkBH,gBAA3C,CAAP;EACD;;EAED,MAAMI,gBAAgB,GAAGN,MAAM,CAC5BO,WADsB,GAEtBC,KAFsB,CAEhB,KAFgB,EAGtBL,MAHsB,CAGdM,CAAD,IAAOA,CAAC,CAACR,MAAF,GAAW,CAHH,CAAzB;;EAKA,IAAIK,gBAAgB,CAACL,MAAjB,KAA4B,CAAhC,EAAmC;IACjC,OAAOF,MAAP;EACD;;EAED,MAAMW,aAAa,GAAID,CAAD,IAAwB;IAC5C,MAAME,MAAM,GAAGF,CAAC,CACbF,WADY,GAEZC,KAFY,CAEN,KAFM,EAGZL,MAHY,CAGJM,CAAD,IAAOA,CAAC,CAACR,MAAF,GAAW,CAHb,CAAf;IAKA,OAAOK,gBAAgB,CAACM,KAAjB,CAAwBC,CAAD,IAAOA,CAAC,CAACZ,MAAF,KAAa,CAAb,IAAkBU,MAAM,CAACG,IAAP,CAAaC,EAAD,IAAQA,EAAE,CAACC,UAAH,CAAcH,CAAd,KAAoBE,EAAE,CAACE,QAAH,CAAYJ,CAAZ,CAAxC,CAAhD,CAAP;EACD,CAPD;;EASA,OAAOd,MAAM,CAACI,MAAP,CAAeC,KAAD,IAAW;IAC9B,MAAM;MAAEc,MAAF;MAAUC;IAAV,IAAmBf,KAAzB;IACA,OAAQc,MAAM,IAAIR,aAAa,CAACQ,MAAD,CAAxB,IAAsCC,IAAI,IAAIT,aAAa,CAACS,IAAD,CAAlE;EACD,CAHM,CAAP,CA3BqE,CA+BrE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD"},"metadata":{},"sourceType":"module"}