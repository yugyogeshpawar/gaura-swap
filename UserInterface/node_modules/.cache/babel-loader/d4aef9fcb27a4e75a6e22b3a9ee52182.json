{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/pages/Swap/index.tsx\";\nimport { JSBI, Token } from '@uniswap/sdk';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { ArrowDown } from 'react-feather';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport AddressInputPanel from '../../components/AddressInputPanel';\nimport { ButtonError, ButtonPrimary, ButtonConfirmed } from '../../components/Button';\nimport Card, { GreyCard } from '../../components/Card';\nimport Column, { AutoColumn } from '../../components/Column';\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport { SwapPoolTabs } from '../../components/NavigationTabs';\nimport { AutoRow, RowBetween } from '../../components/Row';\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee';\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from '../../components/swap/styleds';\nimport TradePrice from '../../components/swap/TradePrice';\nimport TokenWarningModal from '../../components/TokenWarningModal';\nimport ProgressSteps from '../../components/ProgressSteps';\nimport SwapHeader from '../../components/swap/SwapHeader';\nimport AdvancedSwapDetailsDropdown from '../../components/swap/AdvancedSwapDetailsDropdown';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback';\nimport { useSwapCallback } from '../../hooks/useSwapCallback';\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback';\nimport { useToggleSettingsMenu, useWalletModalToggle } from '../../state/application/hooks';\nimport { Field } from '../../state/swap/actions';\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from '../../state/swap/hooks';\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks';\nimport { LinkStyledButton, TYPE } from '../../theme';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices';\nimport AppBody from '../AppBody';\nimport { ClickableText } from '../Pool/styleds';\nimport Loader from '../../components/Loader';\nexport default function Swap() {\n  var _parsedAmounts$indepe, _parsedAmounts$indepe2, _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$indepe3, _parsedAmounts$Field$, _currencies$Field$INP;\n\n  const loadedUrlParams = useDefaultsFromURLSearch(); // token warning stuff\n\n  const [loadedInputCurrency, loadedOutputCurrency] = [useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.inputCurrencyId), useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.outputCurrencyId)];\n  const [dismissTokenWarning, setDismissTokenWarning] = useState(false);\n  const urlLoadedTokens = useMemo(() => {\n    var _filter, _ref;\n\n    return (_filter = (_ref = [loadedInputCurrency, loadedOutputCurrency]) === null || _ref === void 0 ? void 0 : _ref.filter(c => c instanceof Token)) !== null && _filter !== void 0 ? _filter : [];\n  }, [loadedInputCurrency, loadedOutputCurrency]);\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true);\n  }, []); // dismiss warning if all imported tokens are in active lists\n\n  const defaultTokens = useAllTokens();\n  const importTokensNotInDefault = urlLoadedTokens && urlLoadedTokens.filter(token => {\n    return !Boolean(token.address in defaultTokens);\n  });\n  const {\n    account\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext); // toggle wallet when disconnected\n\n  const toggleWalletModal = useWalletModalToggle(); // for expert mode\n\n  const toggleSettings = useToggleSettingsMenu();\n  const [isExpertMode] = useExpertModeManager(); // get custom setting values for user\n\n  const [allowedSlippage] = useUserSlippageTolerance(); // swap state\n\n  const {\n    independentField,\n    typedValue,\n    recipient\n  } = useSwapState();\n  const {\n    v2Trade,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError\n  } = useDerivedSwapInfo();\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue);\n  const showWrap = wrapType !== WrapType.NOT_APPLICABLE;\n  const trade = showWrap ? undefined : v2Trade;\n  const parsedAmounts = showWrap ? {\n    [Field.INPUT]: parsedAmount,\n    [Field.OUTPUT]: parsedAmount\n  } : {\n    [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.inputAmount,\n    [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.outputAmount\n  };\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient\n  } = useSwapActionHandlers();\n  const isValid = !swapInputError;\n  const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  const handleTypeInput = useCallback(value => {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  const handleTypeOutput = useCallback(value => {\n    onUserInput(Field.OUTPUT, value);\n  }, [onUserInput]); // modal and loading\n\n  const [{\n    showConfirm,\n    tradeToConfirm,\n    swapErrorMessage,\n    attemptingTxn,\n    txHash\n  }, setSwapState] = useState({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  });\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap ? (_parsedAmounts$indepe = (_parsedAmounts$indepe2 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe2 === void 0 ? void 0 : _parsedAmounts$indepe2.toExact()) !== null && _parsedAmounts$indepe !== void 0 ? _parsedAmounts$indepe : '' : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  };\n  const route = trade === null || trade === void 0 ? void 0 : trade.route;\n  const userHasSpecifiedInputOutput = Boolean(currencies[Field.INPUT] && currencies[Field.OUTPUT] && ((_parsedAmounts$indepe3 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe3 === void 0 ? void 0 : _parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));\n  const noRoute = !route; // check whether the user has approved the router on the input token\n\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage); // check if user has gone through approval process, used to show two step buttons, reset on token change\n\n  const [approvalSubmitted, setApprovalSubmitted] = useState(false); // mark when a user has submitted an approval, reset onTokenSelection for input field\n\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n  const maxAmountInput = maxAmountSpend(currencyBalances[Field.INPUT]);\n  const atMaxAmountInput = Boolean(maxAmountInput && ((_parsedAmounts$Field$ = parsedAmounts[Field.INPUT]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.equalTo(maxAmountInput))); // the callback to execute the swap\n\n  const {\n    callback: swapCallback,\n    error: swapCallbackError\n  } = useSwapCallback(trade, allowedSlippage, recipient);\n  const {\n    priceImpactWithoutFee\n  } = computeTradePriceBreakdown(trade);\n  const [singleHopOnly] = useUserSingleHopOnly();\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return;\n    }\n\n    if (!swapCallback) {\n      return;\n    }\n\n    setSwapState({\n      attemptingTxn: true,\n      tradeToConfirm,\n      showConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined\n    });\n    swapCallback().then(hash => {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm,\n        showConfirm,\n        swapErrorMessage: undefined,\n        txHash: hash\n      });\n    }).catch(error => {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm,\n        showConfirm,\n        swapErrorMessage: error.message,\n        txHash: undefined\n      });\n    });\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, showConfirm]); // errors\n\n  const [showInverted, setShowInverted] = useState(false); // warnings on slippage\n\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee); // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n\n  const showApproveFlow = !swapInputError && (approval === ApprovalState.NOT_APPROVED || approval === ApprovalState.PENDING || approvalSubmitted && approval === ApprovalState.APPROVED) && !(priceImpactSeverity > 3 && !isExpertMode);\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({\n      showConfirm: false,\n      tradeToConfirm,\n      attemptingTxn,\n      swapErrorMessage,\n      txHash\n    }); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({\n      tradeToConfirm: trade,\n      swapErrorMessage,\n      txHash,\n      attemptingTxn,\n      showConfirm\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n  const handleInputSelect = useCallback(inputCurrency => {\n    setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n    onCurrencySelection(Field.INPUT, inputCurrency);\n  }, [onCurrencySelection]);\n  const handleMaxInput = useCallback(() => {\n    maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact());\n  }, [maxAmountInput, onUserInput]);\n  const handleOutputSelect = useCallback(outputCurrency => onCurrencySelection(Field.OUTPUT, outputCurrency), [onCurrencySelection]);\n  console.log(currencies);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TokenWarningModal, {\n    isOpen: importTokensNotInDefault.length > 0 && !dismissTokenWarning,\n    tokens: importTokensNotInDefault,\n    onConfirm: handleConfirmTokenWarning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SwapPoolTabs, {\n    active: 'swap',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SwapHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    id: \"swap-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmSwapModal, {\n    isOpen: showConfirm,\n    trade: trade,\n    originalTrade: tradeToConfirm,\n    onAcceptChanges: handleAcceptChanges,\n    attemptingTxn: attemptingTxn,\n    txHash: txHash,\n    recipient: recipient,\n    allowedSlippage: allowedSlippage,\n    onConfirm: handleSwap,\n    swapErrorMessage: swapErrorMessage,\n    onDismiss: handleConfirmDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: 'md',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    label: independentField === Field.OUTPUT && !showWrap && trade ? 'From (estimated)' : 'From',\n    value: formattedAmounts[Field.INPUT],\n    showMaxButton: !atMaxAmountInput,\n    currency: currencies[Field.INPUT],\n    onUserInput: handleTypeInput,\n    onMax: handleMaxInput,\n    onCurrencySelect: handleInputSelect,\n    otherCurrency: currencies[Field.OUTPUT],\n    id: \"swap-currency-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AutoRow, {\n    justify: isExpertMode ? 'space-between' : 'center',\n    style: {\n      padding: '0 1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ArrowWrapper, {\n    clickable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArrowDown, {\n    size: \"16\",\n    onClick: () => {\n      setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n      onSwitchTokens();\n    },\n    color: currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 19\n    }\n  })), recipient === null && !showWrap && isExpertMode ? /*#__PURE__*/React.createElement(LinkStyledButton, {\n    id: \"add-recipient-button\",\n    onClick: () => onChangeRecipient(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 19\n    }\n  }, \"+ Add a send (optional)\") : null)), /*#__PURE__*/React.createElement(CurrencyInputPanel, {\n    value: formattedAmounts[Field.OUTPUT],\n    onUserInput: handleTypeOutput,\n    label: independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : 'To',\n    showMaxButton: false,\n    currency: currencies[Field.OUTPUT],\n    onCurrencySelect: handleOutputSelect,\n    otherCurrency: currencies[Field.INPUT],\n    id: \"swap-currency-output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }), recipient !== null && !showWrap ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AutoRow, {\n    justify: \"space-between\",\n    style: {\n      padding: '0 1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArrowWrapper, {\n    clickable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ArrowDown, {\n    size: \"16\",\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(LinkStyledButton, {\n    id: \"remove-recipient-button\",\n    onClick: () => onChangeRecipient(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 19\n    }\n  }, \"- Remove send\")), /*#__PURE__*/React.createElement(AddressInputPanel, {\n    id: \"recipient\",\n    value: recipient,\n    onChange: onChangeRecipient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  })) : null, showWrap ? null : /*#__PURE__*/React.createElement(Card, {\n    padding: showWrap ? '.25rem 1rem 0 1rem' : '0px',\n    borderRadius: '20px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"8px\",\n    style: {\n      padding: '3px 4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  }, Boolean(trade) && /*#__PURE__*/React.createElement(RowBetween, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 14,\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 23\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(TradePrice, {\n    price: trade === null || trade === void 0 ? void 0 : trade.executionPrice,\n    showInverted: showInverted,\n    setShowInverted: setShowInverted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(RowBetween, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ClickableText, {\n    fontWeight: 500,\n    fontSize: 14,\n    color: theme.text2,\n    onClick: toggleSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }, \"Slippage Tolerance\"), /*#__PURE__*/React.createElement(ClickableText, {\n    fontWeight: 500,\n    fontSize: 14,\n    color: theme.text2,\n    onClick: toggleSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }, allowedSlippage / 100, \"%\"))))), /*#__PURE__*/React.createElement(BottomGrouping, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 11\n    }\n  }, !account ? /*#__PURE__*/React.createElement(ButtonPrimary, {\n    onClick: toggleWalletModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 15\n    }\n  }, \"Connect Wallet\") : showWrap ? /*#__PURE__*/React.createElement(ButtonPrimary, {\n    disabled: Boolean(wrapInputError),\n    onClick: onWrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 15\n    }\n  }, wrapInputError !== null && wrapInputError !== void 0 ? wrapInputError : wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null) : noRoute && userHasSpecifiedInputOutput ? /*#__PURE__*/React.createElement(GreyCard, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.main, {\n    mb: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }\n  }, \"Insufficient liquidity for this trade.\"), singleHopOnly && /*#__PURE__*/React.createElement(TYPE.main, {\n    mb: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 35\n    }\n  }, \"Try enabling multi-hop trades.\")) : showApproveFlow ? /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonConfirmed, {\n    onClick: approveCallback,\n    disabled: approval !== ApprovalState.NOT_APPROVED || approvalSubmitted,\n    width: \"48%\",\n    altDisabledStyle: approval === ApprovalState.PENDING // show solid button while waiting\n    ,\n    confirmed: approval === ApprovalState.APPROVED,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  }, approval === ApprovalState.PENDING ? /*#__PURE__*/React.createElement(AutoRow, {\n    gap: \"6px\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 21\n    }\n  }, \"Approving \", /*#__PURE__*/React.createElement(Loader, {\n    stroke: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 33\n    }\n  })) : approvalSubmitted && approval === ApprovalState.APPROVED ? 'Approved' : 'Approve ' + ((_currencies$Field$INP = currencies[Field.INPUT]) === null || _currencies$Field$INP === void 0 ? void 0 : _currencies$Field$INP.symbol)), /*#__PURE__*/React.createElement(ButtonError, {\n    onClick: () => {\n      if (isExpertMode) {\n        handleSwap();\n      } else {\n        setSwapState({\n          tradeToConfirm: trade,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          showConfirm: true,\n          txHash: undefined\n        });\n      }\n    },\n    width: \"48%\",\n    id: \"swap-button\",\n    disabled: !isValid || approval !== ApprovalState.APPROVED || priceImpactSeverity > 3 && !isExpertMode,\n    error: isValid && priceImpactSeverity > 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 16,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 19\n    }\n  }, priceImpactSeverity > 3 && !isExpertMode ? `Price Impact High` : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`))) : /*#__PURE__*/React.createElement(ButtonError, {\n    onClick: () => {\n      if (isExpertMode) {\n        handleSwap();\n      } else {\n        setSwapState({\n          tradeToConfirm: trade,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          showConfirm: true,\n          txHash: undefined\n        });\n      }\n    },\n    id: \"swap-button\",\n    disabled: !isValid || priceImpactSeverity > 3 && !isExpertMode || !!swapCallbackError,\n    error: isValid && priceImpactSeverity > 2 && !swapCallbackError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 20,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 17\n    }\n  }, swapInputError ? swapInputError : priceImpactSeverity > 3 && !isExpertMode ? `Price Impact Too High` : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`)), showApproveFlow && /*#__PURE__*/React.createElement(Column, {\n    style: {\n      marginTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ProgressSteps, {\n    steps: [approval === ApprovalState.APPROVED],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 17\n    }\n  })), isExpertMode && swapErrorMessage ? /*#__PURE__*/React.createElement(SwapCallbackError, {\n    error: swapErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 49\n    }\n  }) : null)), trade && /*#__PURE__*/React.createElement(AdvancedSwapDetailsDropdown, {\n    trade: trade,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 19\n    }\n  })));\n}","map":{"version":3,"names":["JSBI","Token","React","useCallback","useContext","useEffect","useMemo","useState","ArrowDown","Text","ThemeContext","AddressInputPanel","ButtonError","ButtonPrimary","ButtonConfirmed","Card","GreyCard","Column","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","SwapPoolTabs","AutoRow","RowBetween","confirmPriceImpactWithoutFee","ArrowWrapper","BottomGrouping","SwapCallbackError","Wrapper","TradePrice","TokenWarningModal","ProgressSteps","SwapHeader","AdvancedSwapDetailsDropdown","useActiveWeb3React","useCurrency","useAllTokens","ApprovalState","useApproveCallbackFromTrade","useSwapCallback","useWrapCallback","WrapType","useToggleSettingsMenu","useWalletModalToggle","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserSlippageTolerance","useUserSingleHopOnly","LinkStyledButton","TYPE","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","AppBody","ClickableText","Loader","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","inputCurrencyId","outputCurrencyId","dismissTokenWarning","setDismissTokenWarning","urlLoadedTokens","filter","c","handleConfirmTokenWarning","defaultTokens","importTokensNotInDefault","token","Boolean","address","account","theme","toggleWalletModal","toggleSettings","isExpertMode","allowedSlippage","independentField","typedValue","recipient","v2Trade","currencyBalances","parsedAmount","currencies","inputError","swapInputError","wrapType","execute","onWrap","wrapInputError","INPUT","OUTPUT","showWrap","NOT_APPLICABLE","trade","undefined","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","callback","swapCallback","error","swapCallbackError","priceImpactWithoutFee","singleHopOnly","handleSwap","then","hash","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","inputCurrency","handleMaxInput","handleOutputSelect","outputCurrency","console","log","length","padding","primary1","text2","executionPrice","WRAP","UNWRAP","textAlign","symbol","marginTop"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/pages/Swap/index.tsx"],"sourcesContent":["import { CurrencyAmount, JSBI, Token, Trade } from '@uniswap/sdk';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { ArrowDown } from 'react-feather';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport AddressInputPanel from '../../components/AddressInputPanel';\nimport { ButtonError, ButtonPrimary, ButtonConfirmed } from '../../components/Button';\nimport Card, { GreyCard } from '../../components/Card';\nimport Column, { AutoColumn } from '../../components/Column';\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport { SwapPoolTabs } from '../../components/NavigationTabs';\nimport { AutoRow, RowBetween } from '../../components/Row';\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee';\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from '../../components/swap/styleds';\nimport TradePrice from '../../components/swap/TradePrice';\nimport TokenWarningModal from '../../components/TokenWarningModal';\nimport ProgressSteps from '../../components/ProgressSteps';\nimport SwapHeader from '../../components/swap/SwapHeader';\nimport AdvancedSwapDetailsDropdown from '../../components/swap/AdvancedSwapDetailsDropdown';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback';\nimport { useSwapCallback } from '../../hooks/useSwapCallback';\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback';\nimport { useToggleSettingsMenu, useWalletModalToggle } from '../../state/application/hooks';\nimport { Field } from '../../state/swap/actions';\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks';\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks';\nimport { LinkStyledButton, TYPE } from '../../theme';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices';\nimport AppBody from '../AppBody';\nimport { ClickableText } from '../Pool/styleds';\nimport Loader from '../../components/Loader';\n\nexport default function Swap() {\n  const loadedUrlParams = useDefaultsFromURLSearch();\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ];\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false);\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  );\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true);\n  }, []);\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens();\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !Boolean(token.address in defaultTokens);\n    });\n\n  const { account } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle();\n\n  // for expert mode\n  const toggleSettings = useToggleSettingsMenu();\n  const [isExpertMode] = useExpertModeManager();\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance();\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState();\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo();\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue);\n\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE;\n  const trade = showWrap ? undefined : v2Trade;\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      };\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers();\n  const isValid = !swapInputError;\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value);\n    },\n    [onUserInput]\n  );\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value);\n    },\n    [onUserInput]\n  );\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean;\n    tradeToConfirm: Trade | undefined;\n    attemptingTxn: boolean;\n    swapErrorMessage: string | undefined;\n    txHash: string | undefined;\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  });\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  };\n\n  const route = trade?.route;\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  );\n  const noRoute = !route;\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage);\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false);\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT]);\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput));\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient);\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade);\n\n  const [singleHopOnly] = useUserSingleHopOnly();\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return;\n    }\n    if (!swapCallback) {\n      return;\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined });\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash });\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        });\n      });\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, showConfirm]);\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false);\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee);\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode);\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false); // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency);\n    },\n    [onCurrencySelection]\n  );\n\n  const handleMaxInput = useCallback(() => {\n    maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact());\n  }, [maxAmountInput, onUserInput]);\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\n    [onCurrencySelection]\n  );\n\n  console.log(currencies)\n  return (\n    <>\n      <TokenWarningModal\n        isOpen={importTokensNotInDefault.length > 0 && !dismissTokenWarning}\n        tokens={importTokensNotInDefault}\n        onConfirm={handleConfirmTokenWarning}\n      />\n      <SwapPoolTabs active={'swap'} />\n      <AppBody>\n        <SwapHeader />\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n\n          <AutoColumn gap={'md'}>\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? 'From (estimated)' : 'From'}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDown\n                    size=\"16\"\n                    onClick={() => {\n                      setApprovalSubmitted(false); // reset 2 step UI for approvals\n                      onSwitchTokens();\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    + Add a send (optional)\n                  </LinkStyledButton>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : 'To'}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDown size=\"16\" color={theme.text2} />\n                  </ArrowWrapper>\n                  <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    - Remove send\n                  </LinkStyledButton>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <Card padding={showWrap ? '.25rem 1rem 0 1rem' : '0px'} borderRadius={'20px'}>\n                <AutoColumn gap=\"8px\" style={{ padding: '3px 4px' }}>\n                  {Boolean(trade) && (\n                    <RowBetween align=\"center\">\n                      <Text fontWeight={500} fontSize={14} color={theme.text2}>\n                        Price\n                      </Text>\n                      <TradePrice\n                        price={trade?.executionPrice}\n                        showInverted={showInverted}\n                        setShowInverted={setShowInverted}\n                      />\n                    </RowBetween>\n                  )}\n                  <RowBetween align=\"center\">\n                    <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\n                      Slippage Tolerance\n                    </ClickableText>\n                    <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\n                      {allowedSlippage / 100}%\n                    </ClickableText>\n                  </RowBetween>\n                </AutoColumn>\n              </Card>\n            )}\n          </AutoColumn>\n\n          <BottomGrouping>\n            {!account ? (\n              <ButtonPrimary onClick={toggleWalletModal}>Connect Wallet</ButtonPrimary>\n            ) : showWrap ? (\n              <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </ButtonPrimary>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <TYPE.main mb=\"4px\">Insufficient liquidity for this trade.</TYPE.main>\n                {singleHopOnly && <TYPE.main mb=\"4px\">Try enabling multi-hop trades.</TYPE.main>}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <ButtonConfirmed\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                  altDisabledStyle={approval === ApprovalState.PENDING} // show solid button while waiting\n                  confirmed={approval === ApprovalState.APPROVED}\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      Approving <Loader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    'Approved'\n                  ) : (\n                    'Approve ' + currencies[Field.INPUT]?.symbol\n                  )}\n                </ButtonConfirmed>\n                <ButtonError\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap();\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined,\n                      });\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                  error={isValid && priceImpactSeverity > 2}\n                >\n                  <Text fontSize={16} fontWeight={500}>\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                  </Text>\n                </ButtonError>\n              </RowBetween>\n            ) : (\n              <ButtonError\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap();\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      showConfirm: true,\n                      txHash: undefined,\n                    });\n                  }\n                }}\n                id=\"swap-button\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n                error={isValid && priceImpactSeverity > 2 && !swapCallbackError}\n              >\n                <Text fontSize={20} fontWeight={500}>\n                  {swapInputError\n                    ? swapInputError\n                    : priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                </Text>\n              </ButtonError>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </BottomGrouping>\n        </Wrapper>\n\n        {trade && <AdvancedSwapDetailsDropdown trade={trade} />}\n      </AppBody>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}