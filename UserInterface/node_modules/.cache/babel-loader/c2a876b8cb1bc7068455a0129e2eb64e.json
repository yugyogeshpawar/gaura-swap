{"ast":null,"code":"import _defineProperty from\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{JSBI,Token}from'@uniswap/sdk';import React,{useCallback,useContext,useEffect,useMemo,useState}from'react';import{ArrowDown}from'react-feather';import{Text}from'rebass';import{ThemeContext}from'styled-components';import AddressInputPanel from'../../components/AddressInputPanel';import{ButtonError,ButtonPrimary,ButtonConfirmed}from'../../components/Button';import Card,{GreyCard}from'../../components/Card';import Column,{AutoColumn}from'../../components/Column';import ConfirmSwapModal from'../../components/swap/ConfirmSwapModal';import CurrencyInputPanel from'../../components/CurrencyInputPanel';import{SwapPoolTabs}from'../../components/NavigationTabs';import{AutoRow,RowBetween}from'../../components/Row';import confirmPriceImpactWithoutFee from'../../components/swap/confirmPriceImpactWithoutFee';import{ArrowWrapper,BottomGrouping,SwapCallbackError,Wrapper}from'../../components/swap/styleds';import TradePrice from'../../components/swap/TradePrice';import TokenWarningModal from'../../components/TokenWarningModal';import ProgressSteps from'../../components/ProgressSteps';import SwapHeader from'../../components/swap/SwapHeader';import AdvancedSwapDetailsDropdown from'../../components/swap/AdvancedSwapDetailsDropdown';import{useActiveWeb3React}from'../../hooks';import{useCurrency,useAllTokens}from'../../hooks/Tokens';import{ApprovalState,useApproveCallbackFromTrade}from'../../hooks/useApproveCallback';import{useSwapCallback}from'../../hooks/useSwapCallback';import useWrapCallback,{WrapType}from'../../hooks/useWrapCallback';import{useToggleSettingsMenu,useWalletModalToggle}from'../../state/application/hooks';import{Field}from'../../state/swap/actions';import{useDefaultsFromURLSearch,useDerivedSwapInfo,useSwapActionHandlers,useSwapState}from'../../state/swap/hooks';import{useExpertModeManager,useUserSlippageTolerance,useUserSingleHopOnly}from'../../state/user/hooks';import{LinkStyledButton,TYPE}from'../../theme';import{maxAmountSpend}from'../../utils/maxAmountSpend';import{computeTradePriceBreakdown,warningSeverity}from'../../utils/prices';import AppBody from'../AppBody';import{ClickableText}from'../Pool/styleds';import Loader from'../../components/Loader';export default function Swap(){var _ref3,_ref4,_parsedAmounts$indepe,_parsedAmounts$indepe2,_parsedAmounts$depend,_parsedAmounts$depend2,_formattedAmounts,_parsedAmounts$indepe3,_parsedAmounts$Field$,_currencies$Field$INP;var loadedUrlParams=useDefaultsFromURLSearch();// token warning stuff\nvar _ref=[useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.inputCurrencyId),useCurrency(loadedUrlParams===null||loadedUrlParams===void 0?void 0:loadedUrlParams.outputCurrencyId)],loadedInputCurrency=_ref[0],loadedOutputCurrency=_ref[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),dismissTokenWarning=_useState2[0],setDismissTokenWarning=_useState2[1];var urlLoadedTokens=useMemo(function(){var _filter,_ref2;return(_filter=(_ref2=[loadedInputCurrency,loadedOutputCurrency])===null||_ref2===void 0?void 0:_ref2.filter(function(c){return c instanceof Token;}))!==null&&_filter!==void 0?_filter:[];},[loadedInputCurrency,loadedOutputCurrency]);var handleConfirmTokenWarning=useCallback(function(){setDismissTokenWarning(true);},[]);// dismiss warning if all imported tokens are in active lists\nvar defaultTokens=useAllTokens();var importTokensNotInDefault=urlLoadedTokens&&urlLoadedTokens.filter(function(token){return!Boolean(token.address in defaultTokens);});var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var theme=useContext(ThemeContext);// toggle wallet when disconnected\nvar toggleWalletModal=useWalletModalToggle();// for expert mode\nvar toggleSettings=useToggleSettingsMenu();var _useExpertModeManager=useExpertModeManager(),_useExpertModeManager2=_slicedToArray(_useExpertModeManager,1),isExpertMode=_useExpertModeManager2[0];// get custom setting values for user\nvar _useUserSlippageToler=useUserSlippageTolerance(),_useUserSlippageToler2=_slicedToArray(_useUserSlippageToler,1),allowedSlippage=_useUserSlippageToler2[0];// swap state\nvar _useSwapState=useSwapState(),independentField=_useSwapState.independentField,typedValue=_useSwapState.typedValue,recipient=_useSwapState.recipient;var _useDerivedSwapInfo=useDerivedSwapInfo(),v2Trade=_useDerivedSwapInfo.v2Trade,currencyBalances=_useDerivedSwapInfo.currencyBalances,parsedAmount=_useDerivedSwapInfo.parsedAmount,currencies=_useDerivedSwapInfo.currencies,swapInputError=_useDerivedSwapInfo.inputError;var _useWrapCallback=useWrapCallback(currencies[Field.INPUT],currencies[Field.OUTPUT],typedValue),wrapType=_useWrapCallback.wrapType,onWrap=_useWrapCallback.execute,wrapInputError=_useWrapCallback.inputError;var showWrap=wrapType!==WrapType.NOT_APPLICABLE;var trade=showWrap?undefined:v2Trade;var parsedAmounts=showWrap?(_ref3={},_defineProperty(_ref3,Field.INPUT,parsedAmount),_defineProperty(_ref3,Field.OUTPUT,parsedAmount),_ref3):(_ref4={},_defineProperty(_ref4,Field.INPUT,independentField===Field.INPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.inputAmount),_defineProperty(_ref4,Field.OUTPUT,independentField===Field.OUTPUT?parsedAmount:trade===null||trade===void 0?void 0:trade.outputAmount),_ref4);var _useSwapActionHandler=useSwapActionHandlers(),onSwitchTokens=_useSwapActionHandler.onSwitchTokens,onCurrencySelection=_useSwapActionHandler.onCurrencySelection,onUserInput=_useSwapActionHandler.onUserInput,onChangeRecipient=_useSwapActionHandler.onChangeRecipient;var isValid=!swapInputError;var dependentField=independentField===Field.INPUT?Field.OUTPUT:Field.INPUT;var handleTypeInput=useCallback(function(value){onUserInput(Field.INPUT,value);},[onUserInput]);var handleTypeOutput=useCallback(function(value){onUserInput(Field.OUTPUT,value);},[onUserInput]);// modal and loading\nvar _useState3=useState({showConfirm:false,tradeToConfirm:undefined,attemptingTxn:false,swapErrorMessage:undefined,txHash:undefined}),_useState4=_slicedToArray(_useState3,2),_useState4$=_useState4[0],showConfirm=_useState4$.showConfirm,tradeToConfirm=_useState4$.tradeToConfirm,swapErrorMessage=_useState4$.swapErrorMessage,attemptingTxn=_useState4$.attemptingTxn,txHash=_useState4$.txHash,setSwapState=_useState4[1];var formattedAmounts=(_formattedAmounts={},_defineProperty(_formattedAmounts,independentField,typedValue),_defineProperty(_formattedAmounts,dependentField,showWrap?(_parsedAmounts$indepe=(_parsedAmounts$indepe2=parsedAmounts[independentField])===null||_parsedAmounts$indepe2===void 0?void 0:_parsedAmounts$indepe2.toExact())!==null&&_parsedAmounts$indepe!==void 0?_parsedAmounts$indepe:'':(_parsedAmounts$depend=(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_parsedAmounts$depend!==void 0?_parsedAmounts$depend:''),_formattedAmounts);var route=trade===null||trade===void 0?void 0:trade.route;var userHasSpecifiedInputOutput=Boolean(currencies[Field.INPUT]&&currencies[Field.OUTPUT]&&((_parsedAmounts$indepe3=parsedAmounts[independentField])===null||_parsedAmounts$indepe3===void 0?void 0:_parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));var noRoute=!route;// check whether the user has approved the router on the input token\nvar _useApproveCallbackFr=useApproveCallbackFromTrade(trade,allowedSlippage),_useApproveCallbackFr2=_slicedToArray(_useApproveCallbackFr,2),approval=_useApproveCallbackFr2[0],approveCallback=_useApproveCallbackFr2[1];// check if user has gone through approval process, used to show two step buttons, reset on token change\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),approvalSubmitted=_useState6[0],setApprovalSubmitted=_useState6[1];// mark when a user has submitted an approval, reset onTokenSelection for input field\nuseEffect(function(){if(approval===ApprovalState.PENDING){setApprovalSubmitted(true);}},[approval,approvalSubmitted]);var maxAmountInput=maxAmountSpend(currencyBalances[Field.INPUT]);var atMaxAmountInput=Boolean(maxAmountInput&&((_parsedAmounts$Field$=parsedAmounts[Field.INPUT])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.equalTo(maxAmountInput)));// the callback to execute the swap\nvar _useSwapCallback=useSwapCallback(trade,allowedSlippage,recipient),swapCallback=_useSwapCallback.callback,swapCallbackError=_useSwapCallback.error;var _computeTradePriceBre=computeTradePriceBreakdown(trade),priceImpactWithoutFee=_computeTradePriceBre.priceImpactWithoutFee;var _useUserSingleHopOnly=useUserSingleHopOnly(),_useUserSingleHopOnly2=_slicedToArray(_useUserSingleHopOnly,1),singleHopOnly=_useUserSingleHopOnly2[0];var handleSwap=useCallback(function(){if(priceImpactWithoutFee&&!confirmPriceImpactWithoutFee(priceImpactWithoutFee)){return;}if(!swapCallback){return;}setSwapState({attemptingTxn:true,tradeToConfirm:tradeToConfirm,showConfirm:showConfirm,swapErrorMessage:undefined,txHash:undefined});swapCallback().then(function(hash){setSwapState({attemptingTxn:false,tradeToConfirm:tradeToConfirm,showConfirm:showConfirm,swapErrorMessage:undefined,txHash:hash});}).catch(function(error){setSwapState({attemptingTxn:false,tradeToConfirm:tradeToConfirm,showConfirm:showConfirm,swapErrorMessage:error.message,txHash:undefined});});},[priceImpactWithoutFee,swapCallback,tradeToConfirm,showConfirm]);// errors\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showInverted=_useState8[0],setShowInverted=_useState8[1];// warnings on slippage\nvar priceImpactSeverity=warningSeverity(priceImpactWithoutFee);// show approve flow when: no error on inputs, not approved or pending, or approved in current session\n// never show if price impact is above threshold in non expert mode\nvar showApproveFlow=!swapInputError&&(approval===ApprovalState.NOT_APPROVED||approval===ApprovalState.PENDING||approvalSubmitted&&approval===ApprovalState.APPROVED)&&!(priceImpactSeverity>3&&!isExpertMode);var handleConfirmDismiss=useCallback(function(){setSwapState({showConfirm:false,tradeToConfirm:tradeToConfirm,attemptingTxn:attemptingTxn,swapErrorMessage:swapErrorMessage,txHash:txHash});// if there was a tx hash, we want to clear the input\nif(txHash){onUserInput(Field.INPUT,'');}},[attemptingTxn,onUserInput,swapErrorMessage,tradeToConfirm,txHash]);var handleAcceptChanges=useCallback(function(){setSwapState({tradeToConfirm:trade,swapErrorMessage:swapErrorMessage,txHash:txHash,attemptingTxn:attemptingTxn,showConfirm:showConfirm});},[attemptingTxn,showConfirm,swapErrorMessage,trade,txHash]);var handleInputSelect=useCallback(function(inputCurrency){setApprovalSubmitted(false);// reset 2 step UI for approvals\nonCurrencySelection(Field.INPUT,inputCurrency);},[onCurrencySelection]);var handleMaxInput=useCallback(function(){maxAmountInput&&onUserInput(Field.INPUT,maxAmountInput.toExact());},[maxAmountInput,onUserInput]);var handleOutputSelect=useCallback(function(outputCurrency){return onCurrencySelection(Field.OUTPUT,outputCurrency);},[onCurrencySelection]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TokenWarningModal,{isOpen:importTokensNotInDefault.length>0&&!dismissTokenWarning,tokens:importTokensNotInDefault,onConfirm:handleConfirmTokenWarning}),/*#__PURE__*/React.createElement(SwapPoolTabs,{active:'swap'}),/*#__PURE__*/React.createElement(AppBody,null,/*#__PURE__*/React.createElement(SwapHeader,null),/*#__PURE__*/React.createElement(Wrapper,{id:\"swap-page\"},/*#__PURE__*/React.createElement(ConfirmSwapModal,{isOpen:showConfirm,trade:trade,originalTrade:tradeToConfirm,onAcceptChanges:handleAcceptChanges,attemptingTxn:attemptingTxn,txHash:txHash,recipient:recipient,allowedSlippage:allowedSlippage,onConfirm:handleSwap,swapErrorMessage:swapErrorMessage,onDismiss:handleConfirmDismiss}),/*#__PURE__*/React.createElement(AutoColumn,{gap:'md'},/*#__PURE__*/React.createElement(CurrencyInputPanel,{label:independentField===Field.OUTPUT&&!showWrap&&trade?'From (estimated)':'From',value:formattedAmounts[Field.INPUT],showMaxButton:!atMaxAmountInput,currency:currencies[Field.INPUT],onUserInput:handleTypeInput,onMax:handleMaxInput,onCurrencySelect:handleInputSelect,otherCurrency:currencies[Field.OUTPUT],id:\"swap-currency-input\"}),/*#__PURE__*/React.createElement(AutoColumn,{justify:\"space-between\"},/*#__PURE__*/React.createElement(AutoRow,{justify:isExpertMode?'space-between':'center',style:{padding:'0 1rem'}},/*#__PURE__*/React.createElement(ArrowWrapper,{clickable:true},/*#__PURE__*/React.createElement(ArrowDown,{size:\"16\",onClick:function onClick(){setApprovalSubmitted(false);// reset 2 step UI for approvals\nonSwitchTokens();},color:currencies[Field.INPUT]&&currencies[Field.OUTPUT]?theme.primary1:theme.text2})),recipient===null&&!showWrap&&isExpertMode?/*#__PURE__*/React.createElement(LinkStyledButton,{id:\"add-recipient-button\",onClick:function onClick(){return onChangeRecipient('');}},\"+ Add a send (optional)\"):null)),/*#__PURE__*/React.createElement(CurrencyInputPanel,{value:formattedAmounts[Field.OUTPUT],onUserInput:handleTypeOutput,label:independentField===Field.INPUT&&!showWrap&&trade?'To (estimated)':'To',showMaxButton:false,currency:currencies[Field.OUTPUT],onCurrencySelect:handleOutputSelect,otherCurrency:currencies[Field.INPUT],id:\"swap-currency-output\"}),recipient!==null&&!showWrap?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AutoRow,{justify:\"space-between\",style:{padding:'0 1rem'}},/*#__PURE__*/React.createElement(ArrowWrapper,{clickable:false},/*#__PURE__*/React.createElement(ArrowDown,{size:\"16\",color:theme.text2})),/*#__PURE__*/React.createElement(LinkStyledButton,{id:\"remove-recipient-button\",onClick:function onClick(){return onChangeRecipient(null);}},\"- Remove send\")),/*#__PURE__*/React.createElement(AddressInputPanel,{id:\"recipient\",value:recipient,onChange:onChangeRecipient})):null,showWrap?null:/*#__PURE__*/React.createElement(Card,{padding:showWrap?'.25rem 1rem 0 1rem':'0px',borderRadius:'20px'},/*#__PURE__*/React.createElement(AutoColumn,{gap:\"8px\",style:{padding:'3px 4px'}},Boolean(trade)&&/*#__PURE__*/React.createElement(RowBetween,{align:\"center\"},/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:14,color:theme.text2},\"Price\"),/*#__PURE__*/React.createElement(TradePrice,{price:trade===null||trade===void 0?void 0:trade.executionPrice,showInverted:showInverted,setShowInverted:setShowInverted})),/*#__PURE__*/React.createElement(RowBetween,{align:\"center\"},/*#__PURE__*/React.createElement(ClickableText,{fontWeight:500,fontSize:14,color:theme.text2,onClick:toggleSettings},\"Slippage Tolerance\"),/*#__PURE__*/React.createElement(ClickableText,{fontWeight:500,fontSize:14,color:theme.text2,onClick:toggleSettings},allowedSlippage/100,\"%\"))))),/*#__PURE__*/React.createElement(BottomGrouping,null,!account?/*#__PURE__*/React.createElement(ButtonPrimary,{onClick:toggleWalletModal},\"Connect Wallet\"):showWrap?/*#__PURE__*/React.createElement(ButtonPrimary,{disabled:Boolean(wrapInputError),onClick:onWrap},wrapInputError!==null&&wrapInputError!==void 0?wrapInputError:wrapType===WrapType.WRAP?'Wrap':wrapType===WrapType.UNWRAP?'Unwrap':null):noRoute&&userHasSpecifiedInputOutput?/*#__PURE__*/React.createElement(GreyCard,{style:{textAlign:'center'}},/*#__PURE__*/React.createElement(TYPE.main,{mb:\"4px\"},\"Insufficient liquidity for this trade.\"),singleHopOnly&&/*#__PURE__*/React.createElement(TYPE.main,{mb:\"4px\"},\"Try enabling multi-hop trades.\")):showApproveFlow?/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(ButtonConfirmed,{onClick:approveCallback,disabled:approval!==ApprovalState.NOT_APPROVED||approvalSubmitted,width:\"48%\",altDisabledStyle:approval===ApprovalState.PENDING// show solid button while waiting\n,confirmed:approval===ApprovalState.APPROVED},approval===ApprovalState.PENDING?/*#__PURE__*/React.createElement(AutoRow,{gap:\"6px\",justify:\"center\"},\"Approving \",/*#__PURE__*/React.createElement(Loader,{stroke:\"white\"})):approvalSubmitted&&approval===ApprovalState.APPROVED?'Approved':'Approve '+((_currencies$Field$INP=currencies[Field.INPUT])===null||_currencies$Field$INP===void 0?void 0:_currencies$Field$INP.symbol)),/*#__PURE__*/React.createElement(ButtonError,{onClick:function onClick(){if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},width:\"48%\",id:\"swap-button\",disabled:!isValid||approval!==ApprovalState.APPROVED||priceImpactSeverity>3&&!isExpertMode,error:isValid&&priceImpactSeverity>2},/*#__PURE__*/React.createElement(Text,{fontSize:16,fontWeight:500},priceImpactSeverity>3&&!isExpertMode?\"Price Impact High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':'')))):/*#__PURE__*/React.createElement(ButtonError,{onClick:function onClick(){if(isExpertMode){handleSwap();}else{setSwapState({tradeToConfirm:trade,attemptingTxn:false,swapErrorMessage:undefined,showConfirm:true,txHash:undefined});}},id:\"swap-button\",disabled:!isValid||priceImpactSeverity>3&&!isExpertMode||!!swapCallbackError,error:isValid&&priceImpactSeverity>2&&!swapCallbackError},/*#__PURE__*/React.createElement(Text,{fontSize:20,fontWeight:500},swapInputError?swapInputError:priceImpactSeverity>3&&!isExpertMode?\"Price Impact Too High\":\"Swap\".concat(priceImpactSeverity>2?' Anyway':''))),showApproveFlow&&/*#__PURE__*/React.createElement(Column,{style:{marginTop:'1rem'}},/*#__PURE__*/React.createElement(ProgressSteps,{steps:[approval===ApprovalState.APPROVED]})),isExpertMode&&swapErrorMessage?/*#__PURE__*/React.createElement(SwapCallbackError,{error:swapErrorMessage}):null)),trade&&/*#__PURE__*/React.createElement(AdvancedSwapDetailsDropdown,{trade:trade})));}","map":{"version":3,"names":["JSBI","Token","React","useCallback","useContext","useEffect","useMemo","useState","ArrowDown","Text","ThemeContext","AddressInputPanel","ButtonError","ButtonPrimary","ButtonConfirmed","Card","GreyCard","Column","AutoColumn","ConfirmSwapModal","CurrencyInputPanel","SwapPoolTabs","AutoRow","RowBetween","confirmPriceImpactWithoutFee","ArrowWrapper","BottomGrouping","SwapCallbackError","Wrapper","TradePrice","TokenWarningModal","ProgressSteps","SwapHeader","AdvancedSwapDetailsDropdown","useActiveWeb3React","useCurrency","useAllTokens","ApprovalState","useApproveCallbackFromTrade","useSwapCallback","useWrapCallback","WrapType","useToggleSettingsMenu","useWalletModalToggle","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","useUserSlippageTolerance","useUserSingleHopOnly","LinkStyledButton","TYPE","maxAmountSpend","computeTradePriceBreakdown","warningSeverity","AppBody","ClickableText","Loader","Swap","loadedUrlParams","inputCurrencyId","outputCurrencyId","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","urlLoadedTokens","filter","c","handleConfirmTokenWarning","defaultTokens","importTokensNotInDefault","token","Boolean","address","account","theme","toggleWalletModal","toggleSettings","isExpertMode","allowedSlippage","independentField","typedValue","recipient","v2Trade","currencyBalances","parsedAmount","currencies","swapInputError","inputError","INPUT","OUTPUT","wrapType","onWrap","execute","wrapInputError","showWrap","NOT_APPLICABLE","trade","undefined","parsedAmounts","inputAmount","outputAmount","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","showConfirm","tradeToConfirm","attemptingTxn","swapErrorMessage","txHash","setSwapState","formattedAmounts","toExact","toSignificant","route","userHasSpecifiedInputOutput","greaterThan","BigInt","noRoute","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","PENDING","maxAmountInput","atMaxAmountInput","equalTo","swapCallback","callback","swapCallbackError","error","priceImpactWithoutFee","singleHopOnly","handleSwap","then","hash","catch","message","showInverted","setShowInverted","priceImpactSeverity","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","inputCurrency","handleMaxInput","handleOutputSelect","outputCurrency","length","padding","primary1","text2","executionPrice","WRAP","UNWRAP","textAlign","symbol","marginTop"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/pages/Swap/index.tsx"],"sourcesContent":["import { CurrencyAmount, JSBI, Token, Trade } from '@uniswap/sdk';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { ArrowDown } from 'react-feather';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport AddressInputPanel from '../../components/AddressInputPanel';\nimport { ButtonError, ButtonPrimary, ButtonConfirmed } from '../../components/Button';\nimport Card, { GreyCard } from '../../components/Card';\nimport Column, { AutoColumn } from '../../components/Column';\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport { SwapPoolTabs } from '../../components/NavigationTabs';\nimport { AutoRow, RowBetween } from '../../components/Row';\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee';\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from '../../components/swap/styleds';\nimport TradePrice from '../../components/swap/TradePrice';\nimport TokenWarningModal from '../../components/TokenWarningModal';\nimport ProgressSteps from '../../components/ProgressSteps';\nimport SwapHeader from '../../components/swap/SwapHeader';\nimport AdvancedSwapDetailsDropdown from '../../components/swap/AdvancedSwapDetailsDropdown';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback';\nimport { useSwapCallback } from '../../hooks/useSwapCallback';\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback';\nimport { useToggleSettingsMenu, useWalletModalToggle } from '../../state/application/hooks';\nimport { Field } from '../../state/swap/actions';\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks';\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks';\nimport { LinkStyledButton, TYPE } from '../../theme';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices';\nimport AppBody from '../AppBody';\nimport { ClickableText } from '../Pool/styleds';\nimport Loader from '../../components/Loader';\n\nexport default function Swap() {\n  const loadedUrlParams = useDefaultsFromURLSearch();\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ];\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false);\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  );\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true);\n  }, []);\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens();\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !Boolean(token.address in defaultTokens);\n    });\n\n  const { account } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle();\n\n  // for expert mode\n  const toggleSettings = useToggleSettingsMenu();\n  const [isExpertMode] = useExpertModeManager();\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance();\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState();\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo();\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue);\n\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE;\n  const trade = showWrap ? undefined : v2Trade;\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      };\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers();\n  const isValid = !swapInputError;\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value);\n    },\n    [onUserInput]\n  );\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value);\n    },\n    [onUserInput]\n  );\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean;\n    tradeToConfirm: Trade | undefined;\n    attemptingTxn: boolean;\n    swapErrorMessage: string | undefined;\n    txHash: string | undefined;\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  });\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  };\n\n  const route = trade?.route;\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  );\n  const noRoute = !route;\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage);\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false);\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approval, approvalSubmitted]);\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT]);\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput));\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient);\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade);\n\n  const [singleHopOnly] = useUserSingleHopOnly();\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return;\n    }\n    if (!swapCallback) {\n      return;\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined });\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash });\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        });\n      });\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, showConfirm]);\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false);\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee);\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode);\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false); // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency);\n    },\n    [onCurrencySelection]\n  );\n\n  const handleMaxInput = useCallback(() => {\n    maxAmountInput && onUserInput(Field.INPUT, maxAmountInput.toExact());\n  }, [maxAmountInput, onUserInput]);\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\n    [onCurrencySelection]\n  );\n  return (\n    <>\n      <TokenWarningModal\n        isOpen={importTokensNotInDefault.length > 0 && !dismissTokenWarning}\n        tokens={importTokensNotInDefault}\n        onConfirm={handleConfirmTokenWarning}\n      />\n      <SwapPoolTabs active={'swap'} />\n      <AppBody>\n        <SwapHeader />\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n\n          <AutoColumn gap={'md'}>\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? 'From (estimated)' : 'From'}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDown\n                    size=\"16\"\n                    onClick={() => {\n                      setApprovalSubmitted(false); // reset 2 step UI for approvals\n                      onSwitchTokens();\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.primary1 : theme.text2}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    + Add a send (optional)\n                  </LinkStyledButton>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : 'To'}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDown size=\"16\" color={theme.text2} />\n                  </ArrowWrapper>\n                  <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    - Remove send\n                  </LinkStyledButton>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <Card padding={showWrap ? '.25rem 1rem 0 1rem' : '0px'} borderRadius={'20px'}>\n                <AutoColumn gap=\"8px\" style={{ padding: '3px 4px' }}>\n                  {Boolean(trade) && (\n                    <RowBetween align=\"center\">\n                      <Text fontWeight={500} fontSize={14} color={theme.text2}>\n                        Price\n                      </Text>\n                      <TradePrice\n                        price={trade?.executionPrice}\n                        showInverted={showInverted}\n                        setShowInverted={setShowInverted}\n                      />\n                    </RowBetween>\n                  )}\n                  <RowBetween align=\"center\">\n                    <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\n                      Slippage Tolerance\n                    </ClickableText>\n                    <ClickableText fontWeight={500} fontSize={14} color={theme.text2} onClick={toggleSettings}>\n                      {allowedSlippage / 100}%\n                    </ClickableText>\n                  </RowBetween>\n                </AutoColumn>\n              </Card>\n            )}\n          </AutoColumn>\n\n          <BottomGrouping>\n            {!account ? (\n              <ButtonPrimary onClick={toggleWalletModal}>Connect Wallet</ButtonPrimary>\n            ) : showWrap ? (\n              <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </ButtonPrimary>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <TYPE.main mb=\"4px\">Insufficient liquidity for this trade.</TYPE.main>\n                {singleHopOnly && <TYPE.main mb=\"4px\">Try enabling multi-hop trades.</TYPE.main>}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <ButtonConfirmed\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                  altDisabledStyle={approval === ApprovalState.PENDING} // show solid button while waiting\n                  confirmed={approval === ApprovalState.APPROVED}\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      Approving <Loader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    'Approved'\n                  ) : (\n                    'Approve ' + currencies[Field.INPUT]?.symbol\n                  )}\n                </ButtonConfirmed>\n                <ButtonError\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap();\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined,\n                      });\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                  error={isValid && priceImpactSeverity > 2}\n                >\n                  <Text fontSize={16} fontWeight={500}>\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                  </Text>\n                </ButtonError>\n              </RowBetween>\n            ) : (\n              <ButtonError\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap();\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      showConfirm: true,\n                      txHash: undefined,\n                    });\n                  }\n                }}\n                id=\"swap-button\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n                error={isValid && priceImpactSeverity > 2 && !swapCallbackError}\n              >\n                <Text fontSize={20} fontWeight={500}>\n                  {swapInputError\n                    ? swapInputError\n                    : priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                </Text>\n              </ButtonError>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </BottomGrouping>\n        </Wrapper>\n\n        {trade && <AdvancedSwapDetailsDropdown trade={trade} />}\n      </AppBody>\n    </>\n  );\n}\n"],"mappings":"wXAAA,OAAyBA,IAAzB,CAA+BC,KAA/B,KAAmD,cAAnD,CACA,MAAOC,MAAP,EAAgBC,WAAhB,CAA6BC,UAA7B,CAAyCC,SAAzC,CAAoDC,OAApD,CAA6DC,QAA7D,KAA6E,OAA7E,CACA,OAASC,SAAT,KAA0B,eAA1B,CACA,OAASC,IAAT,KAAqB,QAArB,CACA,OAASC,YAAT,KAA6B,mBAA7B,CACA,MAAOC,kBAAP,KAA8B,oCAA9B,CACA,OAASC,WAAT,CAAsBC,aAAtB,CAAqCC,eAArC,KAA4D,yBAA5D,CACA,MAAOC,KAAP,EAAeC,QAAf,KAA+B,uBAA/B,CACA,MAAOC,OAAP,EAAiBC,UAAjB,KAAmC,yBAAnC,CACA,MAAOC,iBAAP,KAA6B,wCAA7B,CACA,MAAOC,mBAAP,KAA+B,qCAA/B,CACA,OAASC,YAAT,KAA6B,iCAA7B,CACA,OAASC,OAAT,CAAkBC,UAAlB,KAAoC,sBAApC,CACA,MAAOC,6BAAP,KAAyC,oDAAzC,CACA,OAASC,YAAT,CAAuBC,cAAvB,CAAuCC,iBAAvC,CAA0DC,OAA1D,KAAyE,+BAAzE,CACA,MAAOC,WAAP,KAAuB,kCAAvB,CACA,MAAOC,kBAAP,KAA8B,oCAA9B,CACA,MAAOC,cAAP,KAA0B,gCAA1B,CACA,MAAOC,WAAP,KAAuB,kCAAvB,CACA,MAAOC,4BAAP,KAAwC,mDAAxC,CACA,OAASC,kBAAT,KAAmC,aAAnC,CACA,OAASC,WAAT,CAAsBC,YAAtB,KAA0C,oBAA1C,CACA,OAASC,aAAT,CAAwBC,2BAAxB,KAA2D,gCAA3D,CACA,OAASC,eAAT,KAAgC,6BAAhC,CACA,MAAOC,gBAAP,EAA0BC,QAA1B,KAA0C,6BAA1C,CACA,OAASC,qBAAT,CAAgCC,oBAAhC,KAA4D,+BAA5D,CACA,OAASC,KAAT,KAAsB,0BAAtB,CACA,OACEC,wBADF,CAEEC,kBAFF,CAGEC,qBAHF,CAIEC,YAJF,KAKO,wBALP,CAMA,OAASC,oBAAT,CAA+BC,wBAA/B,CAAyDC,oBAAzD,KAAqF,wBAArF,CACA,OAASC,gBAAT,CAA2BC,IAA3B,KAAuC,aAAvC,CACA,OAASC,cAAT,KAA+B,4BAA/B,CACA,OAASC,0BAAT,CAAqCC,eAArC,KAA4D,oBAA5D,CACA,MAAOC,QAAP,KAAoB,YAApB,CACA,OAASC,aAAT,KAA8B,iBAA9B,CACA,MAAOC,OAAP,KAAmB,yBAAnB,CAEA,cAAe,SAASC,KAAT,EAAgB,gMAC7B,GAAMC,gBAAe,CAAGhB,wBAAwB,EAAhD,CAEA;AACA,SAAoD,CAClDV,WAAW,CAAC0B,eAAD,SAACA,eAAD,iBAACA,eAAe,CAAEC,eAAlB,CADuC,CAElD3B,WAAW,CAAC0B,eAAD,SAACA,eAAD,iBAACA,eAAe,CAAEE,gBAAlB,CAFuC,CAApD,CAAOC,mBAAP,SAA4BC,oBAA5B,SAIA,cAAsD1D,QAAQ,CAAU,KAAV,CAA9D,wCAAO2D,mBAAP,eAA4BC,sBAA5B,eACA,GAAMC,gBAAwB,CAAG9D,OAAO,CACtC,mDAAM,CAAC0D,mBAAD,CAAsBC,oBAAtB,CAAN,gCAAM,MAA6CI,MAA7C,CAAoD,SAACC,CAAD,QAAmBA,EAAC,WAAYrE,MAAhC,EAApD,CAAN,mCAAoG,EAApG,EADsC,CAEtC,CAAC+D,mBAAD,CAAsBC,oBAAtB,CAFsC,CAAxC,CAIA,GAAMM,0BAAyB,CAAGpE,WAAW,CAAC,UAAM,CAClDgE,sBAAsB,CAAC,IAAD,CAAtB,CACD,CAF4C,CAE1C,EAF0C,CAA7C,CAIA;AACA,GAAMK,cAAa,CAAGpC,YAAY,EAAlC,CACA,GAAMqC,yBAAwB,CAC5BL,eAAe,EACfA,eAAe,CAACC,MAAhB,CAAuB,SAACK,KAAD,CAAkB,CACvC,MAAO,CAACC,OAAO,CAACD,KAAK,CAACE,OAAN,GAAiBJ,cAAlB,CAAf,CACD,CAFD,CAFF,CAMA,wBAAoBtC,kBAAkB,EAAtC,CAAQ2C,OAAR,qBAAQA,OAAR,CACA,GAAMC,MAAK,CAAG1E,UAAU,CAACM,YAAD,CAAxB,CAEA;AACA,GAAMqE,kBAAiB,CAAGpC,oBAAoB,EAA9C,CAEA;AACA,GAAMqC,eAAc,CAAGtC,qBAAqB,EAA5C,CACA,0BAAuBO,oBAAoB,EAA3C,gEAAOgC,YAAP,2BAEA;AACA,0BAA0B/B,wBAAwB,EAAlD,gEAAOgC,eAAP,2BAEA;AACA,kBAAoDlC,YAAY,EAAhE,CAAQmC,gBAAR,eAAQA,gBAAR,CAA0BC,UAA1B,eAA0BA,UAA1B,CAAsCC,SAAtC,eAAsCA,SAAtC,CACA,wBAA4FvC,kBAAkB,EAA9G,CAAQwC,OAAR,qBAAQA,OAAR,CAAiBC,gBAAjB,qBAAiBA,gBAAjB,CAAmCC,YAAnC,qBAAmCA,YAAnC,CAAiDC,UAAjD,qBAAiDA,UAAjD,CAAyEC,cAAzE,qBAA6DC,UAA7D,CACA,qBAIInD,eAAe,CAACiD,UAAU,CAAC7C,KAAK,CAACgD,KAAP,CAAX,CAA0BH,UAAU,CAAC7C,KAAK,CAACiD,MAAP,CAApC,CAAoDT,UAApD,CAJnB,CACEU,QADF,kBACEA,QADF,CAEWC,MAFX,kBAEEC,OAFF,CAGcC,cAHd,kBAGEN,UAHF,CAMA,GAAMO,SAAiB,CAAGJ,QAAQ,GAAKrD,QAAQ,CAAC0D,cAAhD,CACA,GAAMC,MAAK,CAAGF,QAAQ,CAAGG,SAAH,CAAef,OAArC,CAEA,GAAMgB,cAAa,CAAGJ,QAAQ,iCAEvBtD,KAAK,CAACgD,KAFiB,CAETJ,YAFS,wBAGvB5C,KAAK,CAACiD,MAHiB,CAGRL,YAHQ,yCAMvB5C,KAAK,CAACgD,KANiB,CAMTT,gBAAgB,GAAKvC,KAAK,CAACgD,KAA3B,CAAmCJ,YAAnC,CAAkDY,KAAlD,SAAkDA,KAAlD,iBAAkDA,KAAK,CAAEG,WANhD,wBAOvB3D,KAAK,CAACiD,MAPiB,CAORV,gBAAgB,GAAKvC,KAAK,CAACiD,MAA3B,CAAoCL,YAApC,CAAmDY,KAAnD,SAAmDA,KAAnD,iBAAmDA,KAAK,CAAEI,YAPlD,QAA9B,CAUA,0BAAgFzD,qBAAqB,EAArG,CAAQ0D,cAAR,uBAAQA,cAAR,CAAwBC,mBAAxB,uBAAwBA,mBAAxB,CAA6CC,WAA7C,uBAA6CA,WAA7C,CAA0DC,iBAA1D,uBAA0DA,iBAA1D,CACA,GAAMC,QAAO,CAAG,CAACnB,cAAjB,CACA,GAAMoB,eAAqB,CAAG3B,gBAAgB,GAAKvC,KAAK,CAACgD,KAA3B,CAAmChD,KAAK,CAACiD,MAAzC,CAAkDjD,KAAK,CAACgD,KAAtF,CAEA,GAAMmB,gBAAe,CAAG5G,WAAW,CACjC,SAAC6G,KAAD,CAAmB,CACjBL,WAAW,CAAC/D,KAAK,CAACgD,KAAP,CAAcoB,KAAd,CAAX,CACD,CAHgC,CAIjC,CAACL,WAAD,CAJiC,CAAnC,CAMA,GAAMM,iBAAgB,CAAG9G,WAAW,CAClC,SAAC6G,KAAD,CAAmB,CACjBL,WAAW,CAAC/D,KAAK,CAACiD,MAAP,CAAemB,KAAf,CAAX,CACD,CAHiC,CAIlC,CAACL,WAAD,CAJkC,CAApC,CAOA;AACA,eAAiGpG,QAAQ,CAMtG,CACD2G,WAAW,CAAE,KADZ,CAEDC,cAAc,CAAEd,SAFf,CAGDe,aAAa,CAAE,KAHd,CAIDC,gBAAgB,CAAEhB,SAJjB,CAKDiB,MAAM,CAAEjB,SALP,CANsG,CAAzG,mEAASa,WAAT,aAASA,WAAT,CAAsBC,cAAtB,aAAsBA,cAAtB,CAAsCE,gBAAtC,aAAsCA,gBAAtC,CAAwDD,aAAxD,aAAwDA,aAAxD,CAAuEE,MAAvE,aAAuEA,MAAvE,CAAiFC,YAAjF,eAcA,GAAMC,iBAAgB,yDACnBrC,gBADmB,CACAC,UADA,oCAEnB0B,cAFmB,CAEFZ,QAAQ,gDACtBI,aAAa,CAACnB,gBAAD,CADS,iDACtB,uBAAiCsC,OAAjC,EADsB,+DACwB,EADxB,gDAEtBnB,aAAa,CAACQ,cAAD,CAFS,iDAEtB,uBAA+BY,aAA/B,CAA6C,CAA7C,CAFsB,+DAE6B,EAJnC,oBAAtB,CAOA,GAAMC,MAAK,CAAGvB,KAAH,SAAGA,KAAH,iBAAGA,KAAK,CAAEuB,KAArB,CACA,GAAMC,4BAA2B,CAAGjD,OAAO,CACzCc,UAAU,CAAC7C,KAAK,CAACgD,KAAP,CAAV,EAA2BH,UAAU,CAAC7C,KAAK,CAACiD,MAAP,CAArC,2BAAuDS,aAAa,CAACnB,gBAAD,CAApE,iDAAuD,uBAAiC0C,WAAjC,CAA6C7H,IAAI,CAAC8H,MAAL,CAAY,CAAZ,CAA7C,CAAvD,CADyC,CAA3C,CAGA,GAAMC,QAAO,CAAG,CAACJ,KAAjB,CAEA;AACA,0BAAoCrF,2BAA2B,CAAC8D,KAAD,CAAQlB,eAAR,CAA/D,gEAAO8C,QAAP,2BAAiBC,eAAjB,2BAEA;AACA,eAAkD1H,QAAQ,CAAU,KAAV,CAA1D,yCAAO2H,iBAAP,eAA0BC,oBAA1B,eAEA;AACA9H,SAAS,CAAC,UAAM,CACd,GAAI2H,QAAQ,GAAK3F,aAAa,CAAC+F,OAA/B,CAAwC,CACtCD,oBAAoB,CAAC,IAAD,CAApB,CACD,CACF,CAJQ,CAIN,CAACH,QAAD,CAAWE,iBAAX,CAJM,CAAT,CAMA,GAAMG,eAA0C,CAAG/E,cAAc,CAACiC,gBAAgB,CAAC3C,KAAK,CAACgD,KAAP,CAAjB,CAAjE,CACA,GAAM0C,iBAAgB,CAAG3D,OAAO,CAAC0D,cAAc,0BAAI/B,aAAa,CAAC1D,KAAK,CAACgD,KAAP,CAAjB,gDAAI,sBAA4B2C,OAA5B,CAAoCF,cAApC,CAAJ,CAAf,CAAhC,CAEA;AACA,qBAA6D9F,eAAe,CAAC6D,KAAD,CAAQlB,eAAR,CAAyBG,SAAzB,CAA5E,CAAkBmD,YAAlB,kBAAQC,QAAR,CAAuCC,iBAAvC,kBAAgCC,KAAhC,CAEA,0BAAkCpF,0BAA0B,CAAC6C,KAAD,CAA5D,CAAQwC,qBAAR,uBAAQA,qBAAR,CAEA,0BAAwBzF,oBAAoB,EAA5C,gEAAO0F,aAAP,2BAEA,GAAMC,WAAU,CAAG3I,WAAW,CAAC,UAAM,CACnC,GAAIyI,qBAAqB,EAAI,CAACpH,4BAA4B,CAACoH,qBAAD,CAA1D,CAAmF,CACjF,OACD,CACD,GAAI,CAACJ,YAAL,CAAmB,CACjB,OACD,CACDjB,YAAY,CAAC,CAAEH,aAAa,CAAE,IAAjB,CAAuBD,cAAc,CAAdA,cAAvB,CAAuCD,WAAW,CAAXA,WAAvC,CAAoDG,gBAAgB,CAAEhB,SAAtE,CAAiFiB,MAAM,CAAEjB,SAAzF,CAAD,CAAZ,CACAmC,YAAY,GACTO,IADH,CACQ,SAACC,IAAD,CAAU,CACdzB,YAAY,CAAC,CAAEH,aAAa,CAAE,KAAjB,CAAwBD,cAAc,CAAdA,cAAxB,CAAwCD,WAAW,CAAXA,WAAxC,CAAqDG,gBAAgB,CAAEhB,SAAvE,CAAkFiB,MAAM,CAAE0B,IAA1F,CAAD,CAAZ,CACD,CAHH,EAIGC,KAJH,CAIS,SAACN,KAAD,CAAW,CAChBpB,YAAY,CAAC,CACXH,aAAa,CAAE,KADJ,CAEXD,cAAc,CAAdA,cAFW,CAGXD,WAAW,CAAXA,WAHW,CAIXG,gBAAgB,CAAEsB,KAAK,CAACO,OAJb,CAKX5B,MAAM,CAAEjB,SALG,CAAD,CAAZ,CAOD,CAZH,EAaD,CArB6B,CAqB3B,CAACuC,qBAAD,CAAwBJ,YAAxB,CAAsCrB,cAAtC,CAAsDD,WAAtD,CArB2B,CAA9B,CAuBA;AACA,eAAwC3G,QAAQ,CAAU,KAAV,CAAhD,yCAAO4I,YAAP,eAAqBC,eAArB,eAEA;AACA,GAAMC,oBAAmB,CAAG7F,eAAe,CAACoF,qBAAD,CAA3C,CAEA;AACA;AACA,GAAMU,gBAAe,CACnB,CAAC5D,cAAD,GACCsC,QAAQ,GAAK3F,aAAa,CAACkH,YAA3B,EACCvB,QAAQ,GAAK3F,aAAa,CAAC+F,OAD5B,EAEEF,iBAAiB,EAAIF,QAAQ,GAAK3F,aAAa,CAACmH,QAHnD,GAIA,EAAEH,mBAAmB,CAAG,CAAtB,EAA2B,CAACpE,YAA9B,CALF,CAOA,GAAMwE,qBAAoB,CAAGtJ,WAAW,CAAC,UAAM,CAC7CoH,YAAY,CAAC,CAAEL,WAAW,CAAE,KAAf,CAAsBC,cAAc,CAAdA,cAAtB,CAAsCC,aAAa,CAAbA,aAAtC,CAAqDC,gBAAgB,CAAhBA,gBAArD,CAAuEC,MAAM,CAANA,MAAvE,CAAD,CAAZ,CACA;AACA,GAAIA,MAAJ,CAAY,CACVX,WAAW,CAAC/D,KAAK,CAACgD,KAAP,CAAc,EAAd,CAAX,CACD,CACF,CANuC,CAMrC,CAACwB,aAAD,CAAgBT,WAAhB,CAA6BU,gBAA7B,CAA+CF,cAA/C,CAA+DG,MAA/D,CANqC,CAAxC,CAQA,GAAMoC,oBAAmB,CAAGvJ,WAAW,CAAC,UAAM,CAC5CoH,YAAY,CAAC,CAAEJ,cAAc,CAAEf,KAAlB,CAAyBiB,gBAAgB,CAAhBA,gBAAzB,CAA2CC,MAAM,CAANA,MAA3C,CAAmDF,aAAa,CAAbA,aAAnD,CAAkEF,WAAW,CAAXA,WAAlE,CAAD,CAAZ,CACD,CAFsC,CAEpC,CAACE,aAAD,CAAgBF,WAAhB,CAA6BG,gBAA7B,CAA+CjB,KAA/C,CAAsDkB,MAAtD,CAFoC,CAAvC,CAIA,GAAMqC,kBAAiB,CAAGxJ,WAAW,CACnC,SAACyJ,aAAD,CAAmB,CACjBzB,oBAAoB,CAAC,KAAD,CAApB,CAA6B;AAC7BzB,mBAAmB,CAAC9D,KAAK,CAACgD,KAAP,CAAcgE,aAAd,CAAnB,CACD,CAJkC,CAKnC,CAAClD,mBAAD,CALmC,CAArC,CAQA,GAAMmD,eAAc,CAAG1J,WAAW,CAAC,UAAM,CACvCkI,cAAc,EAAI1B,WAAW,CAAC/D,KAAK,CAACgD,KAAP,CAAcyC,cAAc,CAACZ,OAAf,EAAd,CAA7B,CACD,CAFiC,CAE/B,CAACY,cAAD,CAAiB1B,WAAjB,CAF+B,CAAlC,CAIA,GAAMmD,mBAAkB,CAAG3J,WAAW,CACpC,SAAC4J,cAAD,QAAoBrD,oBAAmB,CAAC9D,KAAK,CAACiD,MAAP,CAAekE,cAAf,CAAvC,EADoC,CAEpC,CAACrD,mBAAD,CAFoC,CAAtC,CAIA,mBACE,qDACE,oBAAC,iBAAD,EACE,MAAM,CAAEjC,wBAAwB,CAACuF,MAAzB,CAAkC,CAAlC,EAAuC,CAAC9F,mBADlD,CAEE,MAAM,CAAEO,wBAFV,CAGE,SAAS,CAAEF,yBAHb,EADF,cAME,oBAAC,YAAD,EAAc,MAAM,CAAE,MAAtB,EANF,cAOE,oBAAC,OAAD,mBACE,oBAAC,UAAD,MADF,cAEE,oBAAC,OAAD,EAAS,EAAE,CAAC,WAAZ,eACE,oBAAC,gBAAD,EACE,MAAM,CAAE2C,WADV,CAEE,KAAK,CAAEd,KAFT,CAGE,aAAa,CAAEe,cAHjB,CAIE,eAAe,CAAEuC,mBAJnB,CAKE,aAAa,CAAEtC,aALjB,CAME,MAAM,CAAEE,MANV,CAOE,SAAS,CAAEjC,SAPb,CAQE,eAAe,CAAEH,eARnB,CASE,SAAS,CAAE4D,UATb,CAUE,gBAAgB,CAAEzB,gBAVpB,CAWE,SAAS,CAAEoC,oBAXb,EADF,cAeE,oBAAC,UAAD,EAAY,GAAG,CAAE,IAAjB,eACE,oBAAC,kBAAD,EACE,KAAK,CAAEtE,gBAAgB,GAAKvC,KAAK,CAACiD,MAA3B,EAAqC,CAACK,QAAtC,EAAkDE,KAAlD,CAA0D,kBAA1D,CAA+E,MADxF,CAEE,KAAK,CAAEoB,gBAAgB,CAAC5E,KAAK,CAACgD,KAAP,CAFzB,CAGE,aAAa,CAAE,CAAC0C,gBAHlB,CAIE,QAAQ,CAAE7C,UAAU,CAAC7C,KAAK,CAACgD,KAAP,CAJtB,CAKE,WAAW,CAAEmB,eALf,CAME,KAAK,CAAE8C,cANT,CAOE,gBAAgB,CAAEF,iBAPpB,CAQE,aAAa,CAAElE,UAAU,CAAC7C,KAAK,CAACiD,MAAP,CAR3B,CASE,EAAE,CAAC,qBATL,EADF,cAYE,oBAAC,UAAD,EAAY,OAAO,CAAC,eAApB,eACE,oBAAC,OAAD,EAAS,OAAO,CAAEZ,YAAY,CAAG,eAAH,CAAqB,QAAnD,CAA6D,KAAK,CAAE,CAAEgF,OAAO,CAAE,QAAX,CAApE,eACE,oBAAC,YAAD,EAAc,SAAS,KAAvB,eACE,oBAAC,SAAD,EACE,IAAI,CAAC,IADP,CAEE,OAAO,CAAE,kBAAM,CACb9B,oBAAoB,CAAC,KAAD,CAApB,CAA6B;AAC7B1B,cAAc,GACf,CALH,CAME,KAAK,CAAEhB,UAAU,CAAC7C,KAAK,CAACgD,KAAP,CAAV,EAA2BH,UAAU,CAAC7C,KAAK,CAACiD,MAAP,CAArC,CAAsDf,KAAK,CAACoF,QAA5D,CAAuEpF,KAAK,CAACqF,KANtF,EADF,CADF,CAWG9E,SAAS,GAAK,IAAd,EAAsB,CAACa,QAAvB,EAAmCjB,YAAnC,cACC,oBAAC,gBAAD,EAAkB,EAAE,CAAC,sBAArB,CAA4C,OAAO,CAAE,yBAAM2B,kBAAiB,CAAC,EAAD,CAAvB,EAArD,4BADD,CAIG,IAfN,CADF,CAZF,cA+BE,oBAAC,kBAAD,EACE,KAAK,CAAEY,gBAAgB,CAAC5E,KAAK,CAACiD,MAAP,CADzB,CAEE,WAAW,CAAEoB,gBAFf,CAGE,KAAK,CAAE9B,gBAAgB,GAAKvC,KAAK,CAACgD,KAA3B,EAAoC,CAACM,QAArC,EAAiDE,KAAjD,CAAyD,gBAAzD,CAA4E,IAHrF,CAIE,aAAa,CAAE,KAJjB,CAKE,QAAQ,CAAEX,UAAU,CAAC7C,KAAK,CAACiD,MAAP,CALtB,CAME,gBAAgB,CAAEiE,kBANpB,CAOE,aAAa,CAAErE,UAAU,CAAC7C,KAAK,CAACgD,KAAP,CAP3B,CAQE,EAAE,CAAC,sBARL,EA/BF,CA0CGP,SAAS,GAAK,IAAd,EAAsB,CAACa,QAAvB,cACC,qDACE,oBAAC,OAAD,EAAS,OAAO,CAAC,eAAjB,CAAiC,KAAK,CAAE,CAAE+D,OAAO,CAAE,QAAX,CAAxC,eACE,oBAAC,YAAD,EAAc,SAAS,CAAE,KAAzB,eACE,oBAAC,SAAD,EAAW,IAAI,CAAC,IAAhB,CAAqB,KAAK,CAAEnF,KAAK,CAACqF,KAAlC,EADF,CADF,cAIE,oBAAC,gBAAD,EAAkB,EAAE,CAAC,yBAArB,CAA+C,OAAO,CAAE,yBAAMvD,kBAAiB,CAAC,IAAD,CAAvB,EAAxD,kBAJF,CADF,cASE,oBAAC,iBAAD,EAAmB,EAAE,CAAC,WAAtB,CAAkC,KAAK,CAAEvB,SAAzC,CAAoD,QAAQ,CAAEuB,iBAA9D,EATF,CADD,CAYG,IAtDN,CAwDGV,QAAQ,CAAG,IAAH,cACP,oBAAC,IAAD,EAAM,OAAO,CAAEA,QAAQ,CAAG,oBAAH,CAA0B,KAAjD,CAAwD,YAAY,CAAE,MAAtE,eACE,oBAAC,UAAD,EAAY,GAAG,CAAC,KAAhB,CAAsB,KAAK,CAAE,CAAE+D,OAAO,CAAE,SAAX,CAA7B,EACGtF,OAAO,CAACyB,KAAD,CAAP,eACC,oBAAC,UAAD,EAAY,KAAK,CAAC,QAAlB,eACE,oBAAC,IAAD,EAAM,UAAU,CAAE,GAAlB,CAAuB,QAAQ,CAAE,EAAjC,CAAqC,KAAK,CAAEtB,KAAK,CAACqF,KAAlD,UADF,cAIE,oBAAC,UAAD,EACE,KAAK,CAAE/D,KAAF,SAAEA,KAAF,iBAAEA,KAAK,CAAEgE,cADhB,CAEE,YAAY,CAAEjB,YAFhB,CAGE,eAAe,CAAEC,eAHnB,EAJF,CAFJ,cAaE,oBAAC,UAAD,EAAY,KAAK,CAAC,QAAlB,eACE,oBAAC,aAAD,EAAe,UAAU,CAAE,GAA3B,CAAgC,QAAQ,CAAE,EAA1C,CAA8C,KAAK,CAAEtE,KAAK,CAACqF,KAA3D,CAAkE,OAAO,CAAEnF,cAA3E,uBADF,cAIE,oBAAC,aAAD,EAAe,UAAU,CAAE,GAA3B,CAAgC,QAAQ,CAAE,EAA1C,CAA8C,KAAK,CAAEF,KAAK,CAACqF,KAA3D,CAAkE,OAAO,CAAEnF,cAA3E,EACGE,eAAe,CAAG,GADrB,KAJF,CAbF,CADF,CAzDJ,CAfF,cAmGE,oBAAC,cAAD,MACG,CAACL,OAAD,cACC,oBAAC,aAAD,EAAe,OAAO,CAAEE,iBAAxB,mBADD,CAEGmB,QAAQ,cACV,oBAAC,aAAD,EAAe,QAAQ,CAAEvB,OAAO,CAACsB,cAAD,CAAhC,CAAkD,OAAO,CAAEF,MAA3D,EACGE,cADH,SACGA,cADH,UACGA,cADH,CAEKH,QAAQ,GAAKrD,QAAQ,CAAC4H,IAAtB,CAA6B,MAA7B,CAAsCvE,QAAQ,GAAKrD,QAAQ,CAAC6H,MAAtB,CAA+B,QAA/B,CAA0C,IAFrF,CADU,CAKRvC,OAAO,EAAIH,2BAAX,cACF,oBAAC,QAAD,EAAU,KAAK,CAAE,CAAE2C,SAAS,CAAE,QAAb,CAAjB,eACE,oBAAC,IAAD,CAAM,IAAN,EAAW,EAAE,CAAC,KAAd,2CADF,CAEG1B,aAAa,eAAI,oBAAC,IAAD,CAAM,IAAN,EAAW,EAAE,CAAC,KAAd,mCAFpB,CADE,CAKAS,eAAe,cACjB,oBAAC,UAAD,mBACE,oBAAC,eAAD,EACE,OAAO,CAAErB,eADX,CAEE,QAAQ,CAAED,QAAQ,GAAK3F,aAAa,CAACkH,YAA3B,EAA2CrB,iBAFvD,CAGE,KAAK,CAAC,KAHR,CAIE,gBAAgB,CAAEF,QAAQ,GAAK3F,aAAa,CAAC+F,OAAS;AAJxD,CAKE,SAAS,CAAEJ,QAAQ,GAAK3F,aAAa,CAACmH,QALxC,EAOGxB,QAAQ,GAAK3F,aAAa,CAAC+F,OAA3B,cACC,oBAAC,OAAD,EAAS,GAAG,CAAC,KAAb,CAAmB,OAAO,CAAC,QAA3B,4BACY,oBAAC,MAAD,EAAQ,MAAM,CAAC,OAAf,EADZ,CADD,CAIGF,iBAAiB,EAAIF,QAAQ,GAAK3F,aAAa,CAACmH,QAAhD,CACF,UADE,CAGF,mCAAa/D,UAAU,CAAC7C,KAAK,CAACgD,KAAP,CAAvB,gDAAa,sBAAyB4E,MAAtC,CAdJ,CADF,cAkBE,oBAAC,WAAD,EACE,OAAO,CAAE,kBAAM,CACb,GAAIvF,YAAJ,CAAkB,CAChB6D,UAAU,GACX,CAFD,IAEO,CACLvB,YAAY,CAAC,CACXJ,cAAc,CAAEf,KADL,CAEXgB,aAAa,CAAE,KAFJ,CAGXC,gBAAgB,CAAEhB,SAHP,CAIXa,WAAW,CAAE,IAJF,CAKXI,MAAM,CAAEjB,SALG,CAAD,CAAZ,CAOD,CACF,CAbH,CAcE,KAAK,CAAC,KAdR,CAeE,EAAE,CAAC,aAfL,CAgBE,QAAQ,CACN,CAACQ,OAAD,EAAYmB,QAAQ,GAAK3F,aAAa,CAACmH,QAAvC,EAAoDH,mBAAmB,CAAG,CAAtB,EAA2B,CAACpE,YAjBpF,CAmBE,KAAK,CAAE4B,OAAO,EAAIwC,mBAAmB,CAAG,CAnB1C,eAqBE,oBAAC,IAAD,EAAM,QAAQ,CAAE,EAAhB,CAAoB,UAAU,CAAE,GAAhC,EACGA,mBAAmB,CAAG,CAAtB,EAA2B,CAACpE,YAA5B,mCAEUoE,mBAAmB,CAAG,CAAtB,CAA0B,SAA1B,CAAsC,EAFhD,CADH,CArBF,CAlBF,CADiB,cAgDjB,oBAAC,WAAD,EACE,OAAO,CAAE,kBAAM,CACb,GAAIpE,YAAJ,CAAkB,CAChB6D,UAAU,GACX,CAFD,IAEO,CACLvB,YAAY,CAAC,CACXJ,cAAc,CAAEf,KADL,CAEXgB,aAAa,CAAE,KAFJ,CAGXC,gBAAgB,CAAEhB,SAHP,CAIXa,WAAW,CAAE,IAJF,CAKXI,MAAM,CAAEjB,SALG,CAAD,CAAZ,CAOD,CACF,CAbH,CAcE,EAAE,CAAC,aAdL,CAeE,QAAQ,CAAE,CAACQ,OAAD,EAAawC,mBAAmB,CAAG,CAAtB,EAA2B,CAACpE,YAAzC,EAA0D,CAAC,CAACyD,iBAfxE,CAgBE,KAAK,CAAE7B,OAAO,EAAIwC,mBAAmB,CAAG,CAAjC,EAAsC,CAACX,iBAhBhD,eAkBE,oBAAC,IAAD,EAAM,QAAQ,CAAE,EAAhB,CAAoB,UAAU,CAAE,GAAhC,EACGhD,cAAc,CACXA,cADW,CAEX2D,mBAAmB,CAAG,CAAtB,EAA2B,CAACpE,YAA5B,uCAEOoE,mBAAmB,CAAG,CAAtB,CAA0B,SAA1B,CAAsC,EAF7C,CAHN,CAlBF,CA7DJ,CAwFGC,eAAe,eACd,oBAAC,MAAD,EAAQ,KAAK,CAAE,CAAEmB,SAAS,CAAE,MAAb,CAAf,eACE,oBAAC,aAAD,EAAe,KAAK,CAAE,CAACzC,QAAQ,GAAK3F,aAAa,CAACmH,QAA5B,CAAtB,EADF,CAzFJ,CA6FGvE,YAAY,EAAIoC,gBAAhB,cAAmC,oBAAC,iBAAD,EAAmB,KAAK,CAAEA,gBAA1B,EAAnC,CAAoF,IA7FvF,CAnGF,CAFF,CAsMGjB,KAAK,eAAI,oBAAC,2BAAD,EAA6B,KAAK,CAAEA,KAApC,EAtMZ,CAPF,CADF,CAkND"},"metadata":{},"sourceType":"module"}