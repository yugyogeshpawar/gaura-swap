{"ast":null,"code":"import { DEFAULT_ACTIVE_LIST_URLS } from './../../constants/lists';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists';\nimport { DEFAULT_LIST_OF_LISTS } from '../../constants/lists';\nimport { updateVersion } from '../global/actions';\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions';\nconst NEW_LIST_STATE = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null\n};\nconst initialState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: { ...DEFAULT_LIST_OF_LISTS.reduce((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE;\n      return memo;\n    }, {})\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS\n};\nexport default createReducer(initialState, builder => builder.addCase(fetchTokenList.pending, (state, _ref) => {\n  let {\n    payload: {\n      requestId,\n      url\n    }\n  } = _ref;\n  state.byUrl[url] = {\n    current: null,\n    pendingUpdate: null,\n    ...state.byUrl[url],\n    loadingRequestId: requestId,\n    error: null\n  };\n}).addCase(fetchTokenList.fulfilled, (state, _ref2) => {\n  var _state$byUrl$url, _state$byUrl$url2;\n\n  let {\n    payload: {\n      requestId,\n      tokenList,\n      url\n    }\n  } = _ref2;\n  const current = (_state$byUrl$url = state.byUrl[url]) === null || _state$byUrl$url === void 0 ? void 0 : _state$byUrl$url.current;\n  const loadingRequestId = (_state$byUrl$url2 = state.byUrl[url]) === null || _state$byUrl$url2 === void 0 ? void 0 : _state$byUrl$url2.loadingRequestId; // no-op if update does nothing\n\n  if (current) {\n    const upgradeType = getVersionUpgrade(current.version, tokenList.version);\n    if (upgradeType === VersionUpgrade.NONE) return;\n\n    if (loadingRequestId === null || loadingRequestId === requestId) {\n      state.byUrl[url] = { ...state.byUrl[url],\n        loadingRequestId: null,\n        error: null,\n        current: current,\n        pendingUpdate: tokenList\n      };\n    }\n  } else {\n    // activate if on default active\n    if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n      var _state$activeListUrls;\n\n      (_state$activeListUrls = state.activeListUrls) === null || _state$activeListUrls === void 0 ? void 0 : _state$activeListUrls.push(url);\n    }\n\n    state.byUrl[url] = { ...state.byUrl[url],\n      loadingRequestId: null,\n      error: null,\n      current: tokenList,\n      pendingUpdate: null\n    };\n  }\n}).addCase(fetchTokenList.rejected, (state, _ref3) => {\n  var _state$byUrl$url3;\n\n  let {\n    payload: {\n      url,\n      requestId,\n      errorMessage\n    }\n  } = _ref3;\n\n  if (((_state$byUrl$url3 = state.byUrl[url]) === null || _state$byUrl$url3 === void 0 ? void 0 : _state$byUrl$url3.loadingRequestId) !== requestId) {\n    // no-op since it's not the latest request\n    return;\n  }\n\n  state.byUrl[url] = { ...state.byUrl[url],\n    loadingRequestId: null,\n    error: errorMessage,\n    current: null,\n    pendingUpdate: null\n  };\n}).addCase(addList, (state, _ref4) => {\n  let {\n    payload: url\n  } = _ref4;\n\n  if (!state.byUrl[url]) {\n    state.byUrl[url] = NEW_LIST_STATE;\n  }\n}).addCase(removeList, (state, _ref5) => {\n  let {\n    payload: url\n  } = _ref5;\n\n  if (state.byUrl[url]) {\n    delete state.byUrl[url];\n  } // remove list from active urls if needed\n\n\n  if (state.activeListUrls && state.activeListUrls.includes(url)) {\n    state.activeListUrls = state.activeListUrls.filter(u => u !== url);\n  }\n}).addCase(enableList, (state, _ref6) => {\n  let {\n    payload: url\n  } = _ref6;\n\n  if (!state.byUrl[url]) {\n    state.byUrl[url] = NEW_LIST_STATE;\n  }\n\n  if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n    state.activeListUrls.push(url);\n  }\n\n  if (!state.activeListUrls) {\n    state.activeListUrls = [url];\n  }\n}).addCase(disableList, (state, _ref7) => {\n  let {\n    payload: url\n  } = _ref7;\n\n  if (state.activeListUrls && state.activeListUrls.includes(url)) {\n    state.activeListUrls = state.activeListUrls.filter(u => u !== url);\n  }\n}).addCase(acceptListUpdate, (state, _ref8) => {\n  var _state$byUrl$url4;\n\n  let {\n    payload: url\n  } = _ref8;\n\n  if (!((_state$byUrl$url4 = state.byUrl[url]) === null || _state$byUrl$url4 === void 0 ? void 0 : _state$byUrl$url4.pendingUpdate)) {\n    throw new Error('accept list update called without pending update');\n  }\n\n  state.byUrl[url] = { ...state.byUrl[url],\n    pendingUpdate: null,\n    current: state.byUrl[url].pendingUpdate\n  };\n}).addCase(updateVersion, state => {\n  // state loaded from localStorage, but new lists have never been initialized\n  if (!state.lastInitializedDefaultListOfLists) {\n    state.byUrl = initialState.byUrl;\n    state.activeListUrls = initialState.activeListUrls;\n  } else if (state.lastInitializedDefaultListOfLists) {\n    const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce((s, l) => s.add(l), new Set());\n    const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce((s, l) => s.add(l), new Set());\n    DEFAULT_LIST_OF_LISTS.forEach(listUrl => {\n      if (!lastInitializedSet.has(listUrl)) {\n        state.byUrl[listUrl] = NEW_LIST_STATE;\n      }\n    });\n    state.lastInitializedDefaultListOfLists.forEach(listUrl => {\n      if (!newListOfListsSet.has(listUrl)) {\n        delete state.byUrl[listUrl];\n      }\n    });\n  }\n\n  state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS; // if no active lists, activate defaults\n\n  if (!state.activeListUrls) {\n    state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS; // for each list on default list, initialize if needed\n\n    DEFAULT_ACTIVE_LIST_URLS.map(listUrl => {\n      if (!state.byUrl[listUrl]) {\n        state.byUrl[listUrl] = NEW_LIST_STATE;\n      }\n\n      return true;\n    });\n  }\n}));","map":{"version":3,"names":["DEFAULT_ACTIVE_LIST_URLS","createReducer","getVersionUpgrade","VersionUpgrade","DEFAULT_LIST_OF_LISTS","updateVersion","acceptListUpdate","addList","fetchTokenList","removeList","enableList","disableList","NEW_LIST_STATE","error","current","loadingRequestId","pendingUpdate","initialState","lastInitializedDefaultListOfLists","byUrl","reduce","memo","listUrl","activeListUrls","builder","addCase","pending","state","payload","requestId","url","fulfilled","tokenList","upgradeType","version","NONE","includes","push","rejected","errorMessage","filter","u","Error","lastInitializedSet","s","l","add","Set","newListOfListsSet","forEach","has","map"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/state/lists/reducer.ts"],"sourcesContent":["import { DEFAULT_ACTIVE_LIST_URLS } from './../../constants/lists';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists';\nimport { TokenList } from '@uniswap/token-lists/dist/types';\nimport { DEFAULT_LIST_OF_LISTS } from '../../constants/lists';\nimport { updateVersion } from '../global/actions';\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions';\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null;\n      readonly pendingUpdate: TokenList | null;\n      readonly loadingRequestId: string | null;\n      readonly error: string | null;\n    };\n  };\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[];\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined;\n}\n\ntype ListState = ListsState['byUrl'][string];\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n};\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] };\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE;\n      return memo;\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n};\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      };\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current;\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId;\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version);\n\n        if (upgradeType === VersionUpgrade.NONE) return;\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current: current,\n            pendingUpdate: tokenList,\n          };\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url);\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        };\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return;\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      };\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE;\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url];\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url);\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE;\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url);\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url];\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url);\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update');\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      };\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl;\n        state.activeListUrls = initialState.activeListUrls;\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set()\n        );\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set());\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE;\n          }\n        });\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl];\n          }\n        });\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS;\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS;\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE;\n          }\n          return true;\n        });\n      }\n    })\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}