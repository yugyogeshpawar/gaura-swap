{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar _toConsumableArray = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _asyncToGenerator = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterFromParam = exports.FilterPolyfill = void 0;\n\nvar types_1 = require(\"../types\");\n\nvar util_1 = require(\"../util\");\n\nvar TIMEOUT = 5 * 60 * 1000; // 5 minutes\n\nvar JSONRPC_TEMPLATE = {\n  jsonrpc: \"2.0\",\n  id: 0\n};\n\nvar FilterPolyfill = /*#__PURE__*/function () {\n  function FilterPolyfill(provider) {\n    _classCallCheck(this, FilterPolyfill);\n\n    this.logFilters = new Map(); // <id, filter>\n\n    this.blockFilters = new Set(); // <id>\n\n    this.pendingTransactionFilters = new Set(); // <id, true>\n\n    this.cursors = new Map(); // <id, cursor>\n\n    this.timeouts = new Map(); // <id, setTimeout id>\n\n    this.nextFilterId = (0, types_1.IntNumber)(1);\n    this.provider = provider;\n  }\n\n  _createClass(FilterPolyfill, [{\n    key: \"newFilter\",\n    value: function () {\n      var _newFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(param) {\n        var filter, id, cursor;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                filter = filterFromParam(param);\n                id = this.makeFilterId();\n                _context.next = 4;\n                return this.setInitialCursorPosition(id, filter.fromBlock);\n\n              case 4:\n                cursor = _context.sent;\n                console.log(\"Installing new log filter(\".concat(id, \"):\"), filter, \"initial cursor position:\", cursor);\n                this.logFilters.set(id, filter);\n                this.setFilterTimeout(id);\n                return _context.abrupt(\"return\", (0, util_1.hexStringFromIntNumber)(id));\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function newFilter(_x) {\n        return _newFilter.apply(this, arguments);\n      }\n\n      return newFilter;\n    }()\n  }, {\n    key: \"newBlockFilter\",\n    value: function () {\n      var _newBlockFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var id, cursor;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                id = this.makeFilterId();\n                _context2.next = 3;\n                return this.setInitialCursorPosition(id, \"latest\");\n\n              case 3:\n                cursor = _context2.sent;\n                console.log(\"Installing new block filter (\".concat(id, \") with initial cursor position:\"), cursor);\n                this.blockFilters.add(id);\n                this.setFilterTimeout(id);\n                return _context2.abrupt(\"return\", (0, util_1.hexStringFromIntNumber)(id));\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function newBlockFilter() {\n        return _newBlockFilter.apply(this, arguments);\n      }\n\n      return newBlockFilter;\n    }()\n  }, {\n    key: \"newPendingTransactionFilter\",\n    value: function () {\n      var _newPendingTransactionFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var id, cursor;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                id = this.makeFilterId();\n                _context3.next = 3;\n                return this.setInitialCursorPosition(id, \"latest\");\n\n              case 3:\n                cursor = _context3.sent;\n                console.log(\"Installing new block filter (\".concat(id, \") with initial cursor position:\"), cursor);\n                this.pendingTransactionFilters.add(id);\n                this.setFilterTimeout(id);\n                return _context3.abrupt(\"return\", (0, util_1.hexStringFromIntNumber)(id));\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function newPendingTransactionFilter() {\n        return _newPendingTransactionFilter.apply(this, arguments);\n      }\n\n      return newPendingTransactionFilter;\n    }()\n  }, {\n    key: \"uninstallFilter\",\n    value: function uninstallFilter(filterId) {\n      var id = (0, util_1.intNumberFromHexString)(filterId);\n      console.log(\"Uninstalling filter (\".concat(id, \")\"));\n      this.deleteFilter(id);\n      return true;\n    }\n  }, {\n    key: \"getFilterChanges\",\n    value: function getFilterChanges(filterId) {\n      var id = (0, util_1.intNumberFromHexString)(filterId);\n\n      if (this.timeouts.has(id)) {\n        // extend timeout\n        this.setFilterTimeout(id);\n      }\n\n      if (this.logFilters.has(id)) {\n        return this.getLogFilterChanges(id);\n      } else if (this.blockFilters.has(id)) {\n        return this.getBlockFilterChanges(id);\n      } else if (this.pendingTransactionFilters.has(id)) {\n        return this.getPendingTransactionFilterChanges(id);\n      }\n\n      return Promise.resolve(filterNotFoundError());\n    }\n  }, {\n    key: \"getFilterLogs\",\n    value: function () {\n      var _getFilterLogs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(filterId) {\n        var id, filter;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                id = (0, util_1.intNumberFromHexString)(filterId);\n                filter = this.logFilters.get(id);\n\n                if (filter) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", filterNotFoundError());\n\n              case 4:\n                return _context4.abrupt(\"return\", this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  method: \"eth_getLogs\",\n                  params: [paramFromFilter(filter)]\n                })));\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getFilterLogs(_x2) {\n        return _getFilterLogs.apply(this, arguments);\n      }\n\n      return getFilterLogs;\n    }()\n  }, {\n    key: \"makeFilterId\",\n    value: function makeFilterId() {\n      return (0, types_1.IntNumber)(++this.nextFilterId);\n    }\n  }, {\n    key: \"sendAsyncPromise\",\n    value: function sendAsyncPromise(request) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.provider.sendAsync(request, function (err, response) {\n          if (err) {\n            return reject(err);\n          }\n\n          if (Array.isArray(response) || response == null) {\n            return reject(new Error(\"unexpected response received: \".concat(JSON.stringify(response))));\n          }\n\n          resolve(response);\n        });\n      });\n    }\n  }, {\n    key: \"deleteFilter\",\n    value: function deleteFilter(id) {\n      console.log(\"Deleting filter (\".concat(id, \")\"));\n      this.logFilters.delete(id);\n      this.blockFilters.delete(id);\n      this.pendingTransactionFilters.delete(id);\n      this.cursors.delete(id);\n      this.timeouts.delete(id);\n    }\n  }, {\n    key: \"getLogFilterChanges\",\n    value: function () {\n      var _getLogFilterChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(id) {\n        var filter, cursorPosition, currentBlockHeight, toBlock, response, blocks, highestBlock, newCursorPosition;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                filter = this.logFilters.get(id);\n                cursorPosition = this.cursors.get(id);\n\n                if (!(!cursorPosition || !filter)) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", filterNotFoundError());\n\n              case 4:\n                _context5.next = 6;\n                return this.getCurrentBlockHeight();\n\n              case 6:\n                currentBlockHeight = _context5.sent;\n                toBlock = filter.toBlock === \"latest\" ? currentBlockHeight : filter.toBlock;\n\n                if (!(cursorPosition > currentBlockHeight)) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", emptyResult());\n\n              case 10:\n                if (!(cursorPosition > filter.toBlock)) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", emptyResult());\n\n              case 12:\n                console.log(\"Fetching logs from \".concat(cursorPosition, \" to \").concat(toBlock, \" for filter \").concat(id));\n                _context5.next = 15;\n                return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  method: \"eth_getLogs\",\n                  params: [paramFromFilter(Object.assign(Object.assign({}, filter), {\n                    fromBlock: cursorPosition,\n                    toBlock: toBlock\n                  }))]\n                }));\n\n              case 15:\n                response = _context5.sent;\n\n                if (Array.isArray(response.result)) {\n                  blocks = response.result.map(function (log) {\n                    return (0, util_1.intNumberFromHexString)(log.blockNumber || \"0x0\");\n                  });\n                  highestBlock = Math.max.apply(Math, _toConsumableArray(blocks));\n\n                  if (highestBlock && highestBlock > cursorPosition) {\n                    newCursorPosition = (0, types_1.IntNumber)(highestBlock + 1);\n                    console.log(\"Moving cursor position for filter (\".concat(id, \") from \").concat(cursorPosition, \" to \").concat(newCursorPosition));\n                    this.cursors.set(id, newCursorPosition);\n                  }\n                }\n\n                return _context5.abrupt(\"return\", response);\n\n              case 18:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getLogFilterChanges(_x3) {\n        return _getLogFilterChanges.apply(this, arguments);\n      }\n\n      return getLogFilterChanges;\n    }()\n  }, {\n    key: \"getBlockFilterChanges\",\n    value: function () {\n      var _getBlockFilterChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(id) {\n        var _this2 = this;\n\n        var cursorPosition, currentBlockHeight, blocks, newCursorPosition;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                cursorPosition = this.cursors.get(id);\n\n                if (cursorPosition) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", filterNotFoundError());\n\n              case 3:\n                _context6.next = 5;\n                return this.getCurrentBlockHeight();\n\n              case 5:\n                currentBlockHeight = _context6.sent;\n\n                if (!(cursorPosition > currentBlockHeight)) {\n                  _context6.next = 8;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", emptyResult());\n\n              case 8:\n                console.log(\"Fetching blocks from \".concat(cursorPosition, \" to \").concat(currentBlockHeight, \" for filter (\").concat(id, \")\"));\n                _context6.next = 11;\n                return Promise.all( // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n                (0, util_1.range)(cursorPosition, currentBlockHeight + 1).map(function (i) {\n                  return _this2.getBlockHashByNumber((0, types_1.IntNumber)(i));\n                }));\n\n              case 11:\n                blocks = _context6.sent.filter(function (hash) {\n                  return !!hash;\n                });\n                // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n                newCursorPosition = (0, types_1.IntNumber)(cursorPosition + blocks.length);\n                console.log(\"Moving cursor position for filter (\".concat(id, \") from \").concat(cursorPosition, \" to \").concat(newCursorPosition));\n                this.cursors.set(id, newCursorPosition);\n                return _context6.abrupt(\"return\", Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  result: blocks\n                }));\n\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getBlockFilterChanges(_x4) {\n        return _getBlockFilterChanges.apply(this, arguments);\n      }\n\n      return getBlockFilterChanges;\n    }()\n  }, {\n    key: \"getPendingTransactionFilterChanges\",\n    value: function () {\n      var _getPendingTransactionFilterChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(_id) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", Promise.resolve(emptyResult()));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function getPendingTransactionFilterChanges(_x5) {\n        return _getPendingTransactionFilterChanges.apply(this, arguments);\n      }\n\n      return getPendingTransactionFilterChanges;\n    }()\n  }, {\n    key: \"setInitialCursorPosition\",\n    value: function () {\n      var _setInitialCursorPosition = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(id, startBlock) {\n        var currentBlockHeight, initialCursorPosition;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.getCurrentBlockHeight();\n\n              case 2:\n                currentBlockHeight = _context8.sent;\n                initialCursorPosition = typeof startBlock === \"number\" && startBlock > currentBlockHeight ? startBlock : currentBlockHeight;\n                this.cursors.set(id, initialCursorPosition);\n                return _context8.abrupt(\"return\", initialCursorPosition);\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function setInitialCursorPosition(_x6, _x7) {\n        return _setInitialCursorPosition.apply(this, arguments);\n      }\n\n      return setInitialCursorPosition;\n    }()\n  }, {\n    key: \"setFilterTimeout\",\n    value: function setFilterTimeout(id) {\n      var _this3 = this;\n\n      var existing = this.timeouts.get(id);\n\n      if (existing) {\n        window.clearTimeout(existing);\n      }\n\n      var timeout = window.setTimeout(function () {\n        console.log(\"Filter (\".concat(id, \") timed out\"));\n\n        _this3.deleteFilter(id);\n      }, TIMEOUT);\n      this.timeouts.set(id, timeout);\n    }\n  }, {\n    key: \"getCurrentBlockHeight\",\n    value: function () {\n      var _getCurrentBlockHeight = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _yield$this$sendAsync, result;\n\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  method: \"eth_blockNumber\",\n                  params: []\n                }));\n\n              case 2:\n                _yield$this$sendAsync = _context9.sent;\n                result = _yield$this$sendAsync.result;\n                return _context9.abrupt(\"return\", (0, util_1.intNumberFromHexString)((0, util_1.ensureHexString)(result)));\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getCurrentBlockHeight() {\n        return _getCurrentBlockHeight.apply(this, arguments);\n      }\n\n      return getCurrentBlockHeight;\n    }()\n  }, {\n    key: \"getBlockHashByNumber\",\n    value: function () {\n      var _getBlockHashByNumber = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(blockNumber) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  method: \"eth_getBlockByNumber\",\n                  params: [(0, util_1.hexStringFromIntNumber)(blockNumber), false]\n                }));\n\n              case 2:\n                response = _context10.sent;\n\n                if (!(response.result && typeof response.result.hash === \"string\")) {\n                  _context10.next = 5;\n                  break;\n                }\n\n                return _context10.abrupt(\"return\", (0, util_1.ensureHexString)(response.result.hash));\n\n              case 5:\n                return _context10.abrupt(\"return\", null);\n\n              case 6:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function getBlockHashByNumber(_x8) {\n        return _getBlockHashByNumber.apply(this, arguments);\n      }\n\n      return getBlockHashByNumber;\n    }()\n  }]);\n\n  return FilterPolyfill;\n}();\n\nexports.FilterPolyfill = FilterPolyfill;\n\nfunction filterFromParam(param) {\n  return {\n    fromBlock: intBlockHeightFromHexBlockHeight(param.fromBlock),\n    toBlock: intBlockHeightFromHexBlockHeight(param.toBlock),\n    addresses: param.address === undefined ? null : Array.isArray(param.address) ? param.address : [param.address],\n    topics: param.topics || []\n  };\n}\n\nexports.filterFromParam = filterFromParam;\n\nfunction paramFromFilter(filter) {\n  var param = {\n    fromBlock: hexBlockHeightFromIntBlockHeight(filter.fromBlock),\n    toBlock: hexBlockHeightFromIntBlockHeight(filter.toBlock),\n    topics: filter.topics\n  };\n\n  if (filter.addresses !== null) {\n    param.address = filter.addresses;\n  }\n\n  return param;\n}\n\nfunction intBlockHeightFromHexBlockHeight(value) {\n  if (value === undefined || value === \"latest\" || value === \"pending\") {\n    return \"latest\";\n  } else if (value === \"earliest\") {\n    return (0, types_1.IntNumber)(0);\n  } else if ((0, util_1.isHexString)(value)) {\n    return (0, util_1.intNumberFromHexString)(value);\n  }\n\n  throw new Error(\"Invalid block option: \".concat(String(value)));\n}\n\nfunction hexBlockHeightFromIntBlockHeight(value) {\n  if (value === \"latest\") {\n    return value;\n  }\n\n  return (0, util_1.hexStringFromIntNumber)(value);\n}\n\nfunction filterNotFoundError() {\n  return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n    error: {\n      code: -32000,\n      message: \"filter not found\"\n    }\n  });\n}\n\nfunction emptyResult() {\n  return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n    result: []\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","filterFromParam","FilterPolyfill","types_1","require","util_1","TIMEOUT","JSONRPC_TEMPLATE","jsonrpc","id","provider","logFilters","Map","blockFilters","Set","pendingTransactionFilters","cursors","timeouts","nextFilterId","IntNumber","param","filter","makeFilterId","setInitialCursorPosition","fromBlock","cursor","console","log","set","setFilterTimeout","hexStringFromIntNumber","add","filterId","intNumberFromHexString","deleteFilter","has","getLogFilterChanges","getBlockFilterChanges","getPendingTransactionFilterChanges","Promise","resolve","filterNotFoundError","get","sendAsyncPromise","assign","method","params","paramFromFilter","request","reject","sendAsync","err","response","Array","isArray","Error","JSON","stringify","delete","cursorPosition","getCurrentBlockHeight","currentBlockHeight","toBlock","emptyResult","result","blocks","map","blockNumber","highestBlock","Math","max","newCursorPosition","all","range","i","getBlockHashByNumber","hash","length","_id","startBlock","initialCursorPosition","existing","window","clearTimeout","timeout","setTimeout","ensureHexString","intBlockHeightFromHexBlockHeight","addresses","address","undefined","topics","hexBlockHeightFromIntBlockHeight","isHexString","String","error","code","message"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/walletlink/dist/provider/FilterPolyfill.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterFromParam = exports.FilterPolyfill = void 0;\nconst types_1 = require(\"../types\");\nconst util_1 = require(\"../util\");\nconst TIMEOUT = 5 * 60 * 1000; // 5 minutes\nconst JSONRPC_TEMPLATE = {\n    jsonrpc: \"2.0\",\n    id: 0\n};\nclass FilterPolyfill {\n    constructor(provider) {\n        this.logFilters = new Map(); // <id, filter>\n        this.blockFilters = new Set(); // <id>\n        this.pendingTransactionFilters = new Set(); // <id, true>\n        this.cursors = new Map(); // <id, cursor>\n        this.timeouts = new Map(); // <id, setTimeout id>\n        this.nextFilterId = (0, types_1.IntNumber)(1);\n        this.provider = provider;\n    }\n    async newFilter(param) {\n        const filter = filterFromParam(param);\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, filter.fromBlock);\n        console.log(`Installing new log filter(${id}):`, filter, \"initial cursor position:\", cursor);\n        this.logFilters.set(id, filter);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    async newBlockFilter() {\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, \"latest\");\n        console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n        this.blockFilters.add(id);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    async newPendingTransactionFilter() {\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, \"latest\");\n        console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n        this.pendingTransactionFilters.add(id);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    uninstallFilter(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        console.log(`Uninstalling filter (${id})`);\n        this.deleteFilter(id);\n        return true;\n    }\n    getFilterChanges(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        if (this.timeouts.has(id)) {\n            // extend timeout\n            this.setFilterTimeout(id);\n        }\n        if (this.logFilters.has(id)) {\n            return this.getLogFilterChanges(id);\n        }\n        else if (this.blockFilters.has(id)) {\n            return this.getBlockFilterChanges(id);\n        }\n        else if (this.pendingTransactionFilters.has(id)) {\n            return this.getPendingTransactionFilterChanges(id);\n        }\n        return Promise.resolve(filterNotFoundError());\n    }\n    async getFilterLogs(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        const filter = this.logFilters.get(id);\n        if (!filter) {\n            return filterNotFoundError();\n        }\n        return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getLogs\", params: [paramFromFilter(filter)] }));\n    }\n    makeFilterId() {\n        return (0, types_1.IntNumber)(++this.nextFilterId);\n    }\n    sendAsyncPromise(request) {\n        return new Promise((resolve, reject) => {\n            this.provider.sendAsync(request, (err, response) => {\n                if (err) {\n                    return reject(err);\n                }\n                if (Array.isArray(response) || response == null) {\n                    return reject(new Error(`unexpected response received: ${JSON.stringify(response)}`));\n                }\n                resolve(response);\n            });\n        });\n    }\n    deleteFilter(id) {\n        console.log(`Deleting filter (${id})`);\n        this.logFilters.delete(id);\n        this.blockFilters.delete(id);\n        this.pendingTransactionFilters.delete(id);\n        this.cursors.delete(id);\n        this.timeouts.delete(id);\n    }\n    async getLogFilterChanges(id) {\n        const filter = this.logFilters.get(id);\n        const cursorPosition = this.cursors.get(id);\n        if (!cursorPosition || !filter) {\n            return filterNotFoundError();\n        }\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        const toBlock = filter.toBlock === \"latest\" ? currentBlockHeight : filter.toBlock;\n        if (cursorPosition > currentBlockHeight) {\n            return emptyResult();\n        }\n        if (cursorPosition > filter.toBlock) {\n            return emptyResult();\n        }\n        console.log(`Fetching logs from ${cursorPosition} to ${toBlock} for filter ${id}`);\n        const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getLogs\", params: [\n                paramFromFilter(Object.assign(Object.assign({}, filter), { fromBlock: cursorPosition, toBlock }))\n            ] }));\n        if (Array.isArray(response.result)) {\n            const blocks = response.result.map(log => (0, util_1.intNumberFromHexString)(log.blockNumber || \"0x0\"));\n            const highestBlock = Math.max(...blocks);\n            if (highestBlock && highestBlock > cursorPosition) {\n                const newCursorPosition = (0, types_1.IntNumber)(highestBlock + 1);\n                console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n                this.cursors.set(id, newCursorPosition);\n            }\n        }\n        return response;\n    }\n    async getBlockFilterChanges(id) {\n        const cursorPosition = this.cursors.get(id);\n        if (!cursorPosition) {\n            return filterNotFoundError();\n        }\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        if (cursorPosition > currentBlockHeight) {\n            return emptyResult();\n        }\n        console.log(`Fetching blocks from ${cursorPosition} to ${currentBlockHeight} for filter (${id})`);\n        const blocks = (await Promise.all(\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        (0, util_1.range)(cursorPosition, currentBlockHeight + 1).map(i => this.getBlockHashByNumber((0, types_1.IntNumber)(i))))).filter(hash => !!hash);\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        const newCursorPosition = (0, types_1.IntNumber)(cursorPosition + blocks.length);\n        console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n        this.cursors.set(id, newCursorPosition);\n        return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { result: blocks });\n    }\n    async getPendingTransactionFilterChanges(_id) {\n        // pending transaction filters are not supported\n        return Promise.resolve(emptyResult());\n    }\n    async setInitialCursorPosition(id, startBlock) {\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        const initialCursorPosition = typeof startBlock === \"number\" && startBlock > currentBlockHeight\n            ? startBlock\n            : currentBlockHeight;\n        this.cursors.set(id, initialCursorPosition);\n        return initialCursorPosition;\n    }\n    setFilterTimeout(id) {\n        const existing = this.timeouts.get(id);\n        if (existing) {\n            window.clearTimeout(existing);\n        }\n        const timeout = window.setTimeout(() => {\n            console.log(`Filter (${id}) timed out`);\n            this.deleteFilter(id);\n        }, TIMEOUT);\n        this.timeouts.set(id, timeout);\n    }\n    async getCurrentBlockHeight() {\n        const { result } = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_blockNumber\", params: [] }));\n        return (0, util_1.intNumberFromHexString)((0, util_1.ensureHexString)(result));\n    }\n    async getBlockHashByNumber(blockNumber) {\n        const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getBlockByNumber\", params: [(0, util_1.hexStringFromIntNumber)(blockNumber), false] }));\n        if (response.result && typeof response.result.hash === \"string\") {\n            return (0, util_1.ensureHexString)(response.result.hash);\n        }\n        return null;\n    }\n}\nexports.FilterPolyfill = FilterPolyfill;\nfunction filterFromParam(param) {\n    return {\n        fromBlock: intBlockHeightFromHexBlockHeight(param.fromBlock),\n        toBlock: intBlockHeightFromHexBlockHeight(param.toBlock),\n        addresses: param.address === undefined\n            ? null\n            : Array.isArray(param.address)\n                ? param.address\n                : [param.address],\n        topics: param.topics || []\n    };\n}\nexports.filterFromParam = filterFromParam;\nfunction paramFromFilter(filter) {\n    const param = {\n        fromBlock: hexBlockHeightFromIntBlockHeight(filter.fromBlock),\n        toBlock: hexBlockHeightFromIntBlockHeight(filter.toBlock),\n        topics: filter.topics\n    };\n    if (filter.addresses !== null) {\n        param.address = filter.addresses;\n    }\n    return param;\n}\nfunction intBlockHeightFromHexBlockHeight(value) {\n    if (value === undefined || value === \"latest\" || value === \"pending\") {\n        return \"latest\";\n    }\n    else if (value === \"earliest\") {\n        return (0, types_1.IntNumber)(0);\n    }\n    else if ((0, util_1.isHexString)(value)) {\n        return (0, util_1.intNumberFromHexString)(value);\n    }\n    throw new Error(`Invalid block option: ${String(value)}`);\n}\nfunction hexBlockHeightFromIntBlockHeight(value) {\n    if (value === \"latest\") {\n        return value;\n    }\n    return (0, util_1.hexStringFromIntNumber)(value);\n}\nfunction filterNotFoundError() {\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { error: { code: -32000, message: \"filter not found\" } });\n}\nfunction emptyResult() {\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { result: [] });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}