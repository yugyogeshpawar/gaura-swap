{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { Field, typeInput } from './actions';\nconst initialState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0'\n};\nexport default createReducer(initialState, builder => builder.addCase(typeInput, (state, _ref) => {\n  let {\n    payload: {\n      field,\n      typedValue\n    }\n  } = _ref;\n  return { ...state,\n    independentField: field,\n    typedValue\n  };\n}));","map":{"version":3,"names":["createReducer","Field","typeInput","initialState","independentField","LIQUIDITY_PERCENT","typedValue","builder","addCase","state","payload","field"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/state/burn/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\nimport { Field, typeInput } from './actions';\n\nexport interface BurnState {\n  readonly independentField: Field;\n  readonly typedValue: string;\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n};\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    };\n  })\n);\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,WAAjC;AAOA,MAAMC,YAAuB,GAAG;EAC9BC,gBAAgB,EAAEH,KAAK,CAACI,iBADM;EAE9BC,UAAU,EAAE;AAFkB,CAAhC;AAKA,eAAeN,aAAa,CAAYG,YAAZ,EAA2BI,OAAD,IACpDA,OAAO,CAACC,OAAR,CAAgBN,SAAhB,EAA2B,CAACO,KAAD,WAA+C;EAAA,IAAvC;IAAEC,OAAO,EAAE;MAAEC,KAAF;MAASL;IAAT;EAAX,CAAuC;EACxE,OAAO,EACL,GAAGG,KADE;IAELL,gBAAgB,EAAEO,KAFb;IAGLL;EAHK,CAAP;AAKD,CAND,CAD0B,CAA5B"},"metadata":{},"sourceType":"module"}