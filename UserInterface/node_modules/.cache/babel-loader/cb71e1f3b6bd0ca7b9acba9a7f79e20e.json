{"ast":null,"code":"import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useAddPopup, useBlockNumber } from '../application/hooks';\nimport { checkedTransaction, finalizeTransaction } from './actions';\nexport function shouldCheck(lastBlockNumber, tx) {\n  if (tx.receipt) return false;\n  if (!tx.lastCheckedBlockNumber) return true;\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber;\n  if (blocksSinceCheck < 1) return false;\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60;\n\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9;\n  } else if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2;\n  } else {\n    // otherwise every block\n    return true;\n  }\n}\nexport default function Updater() {\n  var _state$chainId;\n\n  const {\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const lastBlockNumber = useBlockNumber();\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.transactions);\n  const transactions = chainId ? (_state$chainId = state[chainId]) !== null && _state$chainId !== void 0 ? _state$chainId : {} : {}; // show popup on confirm\n\n  const addPopup = useAddPopup();\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return;\n    Object.keys(transactions).filter(hash => shouldCheck(lastBlockNumber, transactions[hash])).forEach(hash => {\n      library.getTransactionReceipt(hash).then(receipt => {\n        if (receipt) {\n          var _transactions$hash;\n\n          dispatch(finalizeTransaction({\n            chainId,\n            hash,\n            receipt: {\n              blockHash: receipt.blockHash,\n              blockNumber: receipt.blockNumber,\n              contractAddress: receipt.contractAddress,\n              from: receipt.from,\n              status: receipt.status,\n              to: receipt.to,\n              transactionHash: receipt.transactionHash,\n              transactionIndex: receipt.transactionIndex\n            }\n          }));\n          addPopup({\n            txn: {\n              hash,\n              success: receipt.status === 1,\n              summary: (_transactions$hash = transactions[hash]) === null || _transactions$hash === void 0 ? void 0 : _transactions$hash.summary\n            }\n          }, hash);\n        } else {\n          dispatch(checkedTransaction({\n            chainId,\n            hash,\n            blockNumber: lastBlockNumber\n          }));\n        }\n      }).catch(error => {\n        console.error(`failed to check transaction hash: ${hash}`, error);\n      });\n    });\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup]);\n  return null;\n}","map":{"version":3,"names":["useEffect","useDispatch","useSelector","useActiveWeb3React","useAddPopup","useBlockNumber","checkedTransaction","finalizeTransaction","shouldCheck","lastBlockNumber","tx","receipt","lastCheckedBlockNumber","blocksSinceCheck","minutesPending","Date","getTime","addedTime","Updater","chainId","library","dispatch","state","transactions","addPopup","Object","keys","filter","hash","forEach","getTransactionReceipt","then","blockHash","blockNumber","contractAddress","from","status","to","transactionHash","transactionIndex","txn","success","summary","catch","error","console"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/state/transactions/updater.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useAddPopup, useBlockNumber } from '../application/hooks';\nimport { AppDispatch, AppState } from '../index';\nimport { checkedTransaction, finalizeTransaction } from './actions';\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: {}; lastCheckedBlockNumber?: number }\n): boolean {\n  if (tx.receipt) return false;\n  if (!tx.lastCheckedBlockNumber) return true;\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber;\n  if (blocksSinceCheck < 1) return false;\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60;\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9;\n  } else if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2;\n  } else {\n    // otherwise every block\n    return true;\n  }\n}\n\nexport default function Updater(): null {\n  const { chainId, library } = useActiveWeb3React();\n\n  const lastBlockNumber = useBlockNumber();\n\n  const dispatch = useDispatch<AppDispatch>();\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\n\n  const transactions = chainId ? state[chainId] ?? {} : {};\n\n  // show popup on confirm\n  const addPopup = useAddPopup();\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return;\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                })\n              );\n\n              addPopup(\n                {\n                  txn: {\n                    hash,\n                    success: receipt.status === 1,\n                    summary: transactions[hash]?.summary,\n                  },\n                },\n                hash\n              );\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }));\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error);\n          });\n      });\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup]);\n\n  return null;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}