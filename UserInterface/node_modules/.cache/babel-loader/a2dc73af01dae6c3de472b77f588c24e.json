{"ast":null,"code":"import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { parse } from 'qs';\nimport { updateUserDarkMode } from '../state/user/actions';\nexport default function DarkModeQueryParamReader(_ref) {\n  let {\n    location: {\n      search\n    }\n  } = _ref;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!search) return;\n    if (search.length < 2) return;\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true\n    });\n    const theme = parsed.theme;\n    if (typeof theme !== 'string') return;\n\n    if (theme.toLowerCase() === 'light') {\n      dispatch(updateUserDarkMode({\n        userDarkMode: false\n      }));\n    } else if (theme.toLowerCase() === 'dark') {\n      dispatch(updateUserDarkMode({\n        userDarkMode: true\n      }));\n    }\n  }, [dispatch, search]);\n  return null;\n}","map":{"version":3,"names":["useEffect","useDispatch","parse","updateUserDarkMode","DarkModeQueryParamReader","location","search","dispatch","length","parsed","parseArrays","ignoreQueryPrefix","theme","toLowerCase","userDarkMode"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/theme/DarkModeQueryParamReader.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { parse } from 'qs';\nimport { AppDispatch } from '../state';\nimport { updateUserDarkMode } from '../state/user/actions';\n\nexport default function DarkModeQueryParamReader({ location: { search } }: RouteComponentProps): null {\n  const dispatch = useDispatch<AppDispatch>();\n\n  useEffect(() => {\n    if (!search) return;\n    if (search.length < 2) return;\n\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true,\n    });\n\n    const theme = parsed.theme;\n\n    if (typeof theme !== 'string') return;\n\n    if (theme.toLowerCase() === 'light') {\n      dispatch(updateUserDarkMode({ userDarkMode: false }));\n    } else if (theme.toLowerCase() === 'dark') {\n      dispatch(updateUserDarkMode({ userDarkMode: true }));\n    }\n  }, [dispatch, search]);\n\n  return null;\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,KAAT,QAAsB,IAAtB;AAEA,SAASC,kBAAT,QAAmC,uBAAnC;AAEA,eAAe,SAASC,wBAAT,OAAuF;EAAA,IAArD;IAAEC,QAAQ,EAAE;MAAEC;IAAF;EAAZ,CAAqD;EACpG,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EAEAD,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,MAAL,EAAa;IACb,IAAIA,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;IAEvB,MAAMC,MAAM,GAAGP,KAAK,CAACI,MAAD,EAAS;MAC3BI,WAAW,EAAE,KADc;MAE3BC,iBAAiB,EAAE;IAFQ,CAAT,CAApB;IAKA,MAAMC,KAAK,GAAGH,MAAM,CAACG,KAArB;IAEA,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;;IAE/B,IAAIA,KAAK,CAACC,WAAN,OAAwB,OAA5B,EAAqC;MACnCN,QAAQ,CAACJ,kBAAkB,CAAC;QAAEW,YAAY,EAAE;MAAhB,CAAD,CAAnB,CAAR;IACD,CAFD,MAEO,IAAIF,KAAK,CAACC,WAAN,OAAwB,MAA5B,EAAoC;MACzCN,QAAQ,CAACJ,kBAAkB,CAAC;QAAEW,YAAY,EAAE;MAAhB,CAAD,CAAnB,CAAR;IACD;EACF,CAlBQ,EAkBN,CAACP,QAAD,EAAWD,MAAX,CAlBM,CAAT;EAoBA,OAAO,IAAP;AACD"},"metadata":{},"sourceType":"module"}