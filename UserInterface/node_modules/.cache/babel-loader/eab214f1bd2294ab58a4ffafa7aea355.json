{"ast":null,"code":"import { TokenAmount, Pair } from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { Interface } from '@ethersproject/abi';\nimport { useActiveWeb3React } from '../hooks';\nimport { useMultipleContractSingleData } from '../state/multicall/hooks';\nimport { wrappedCurrency } from '../utils/wrappedCurrency';\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI);\nexport let PairState;\n\n(function (PairState) {\n  PairState[PairState[\"LOADING\"] = 0] = \"LOADING\";\n  PairState[PairState[\"NOT_EXISTS\"] = 1] = \"NOT_EXISTS\";\n  PairState[PairState[\"EXISTS\"] = 2] = \"EXISTS\";\n  PairState[PairState[\"INVALID\"] = 3] = \"INVALID\";\n})(PairState || (PairState = {}));\n\nexport function usePairs(currencies) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const tokens = useMemo(() => currencies.map(_ref => {\n    let [currencyA, currencyB] = _ref;\n    return [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)];\n  }), [chainId, currencies]);\n  const pairAddresses = useMemo(() => tokens.map(_ref2 => {\n    let [tokenA, tokenB] = _ref2;\n    return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined;\n  }), [tokens]); // computePairAddress\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves');\n  console.groupEnd();\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const {\n        result: reserves,\n        loading\n      } = result;\n      const tokenA = tokens[i][0];\n      const tokenB = tokens[i][1];\n      if (loading) return [PairState.LOADING, null];\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null];\n      if (!reserves) return [PairState.NOT_EXISTS, null];\n      const {\n        reserve0,\n        reserve1\n      } = reserves;\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\n      return [PairState.EXISTS, new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString()))];\n    });\n  }, [results, tokens]);\n}\nexport function usePair(tokenA, tokenB) {\n  return usePairs([[tokenA, tokenB]])[0];\n}","map":{"version":3,"names":["TokenAmount","Pair","useMemo","abi","IUniswapV2PairABI","Interface","useActiveWeb3React","useMultipleContractSingleData","wrappedCurrency","PAIR_INTERFACE","PairState","usePairs","currencies","chainId","tokens","map","currencyA","currencyB","pairAddresses","tokenA","tokenB","equals","getAddress","undefined","results","console","groupEnd","result","i","reserves","loading","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","token0","token1","sortsBefore","EXISTS","toString","usePair"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/data/Reserves.ts"],"sourcesContent":["import { TokenAmount, Pair, Currency } from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { Interface } from '@ethersproject/abi';\nimport { useActiveWeb3React } from '../hooks';\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks';\nimport { wrappedCurrency } from '../utils/wrappedCurrency';\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI);\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React();\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies]\n  );\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined;\n      }),\n    [tokens]\n  );\n  // computePairAddress\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves');\n\n  console.groupEnd();\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result;\n      const tokenA = tokens[i][0];\n      const tokenB = tokens[i][1];\n\n      if (loading) return [PairState.LOADING, null];\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null];\n      if (!reserves) return [PairState.NOT_EXISTS, null];\n      const { reserve0, reserve1 } = reserves;\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ];\n    });\n  }, [results, tokens]);\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0];\n}\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,IAAtB,QAA4C,cAA5C;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,GAAG,IAAIC,iBAAhB,QAAyC,4CAAzC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AAEA,SAASC,6BAAT,QAA8C,0BAA9C;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,MAAMC,cAAc,GAAG,IAAIJ,SAAJ,CAAcD,iBAAd,CAAvB;AAEA,WAAYM,SAAZ;;WAAYA,S;EAAAA,S,CAAAA,S;EAAAA,S,CAAAA,S;EAAAA,S,CAAAA,S;EAAAA,S,CAAAA,S;GAAAA,S,KAAAA,S;;AAOZ,OAAO,SAASC,QAAT,CAAkBC,UAAlB,EAA0G;EAC/G,MAAM;IAAEC;EAAF,IAAcP,kBAAkB,EAAtC;EAEA,MAAMQ,MAAM,GAAGZ,OAAO,CACpB,MACEU,UAAU,CAACG,GAAX,CAAe;IAAA,IAAC,CAACC,SAAD,EAAYC,SAAZ,CAAD;IAAA,OAA4B,CACzCT,eAAe,CAACQ,SAAD,EAAYH,OAAZ,CAD0B,EAEzCL,eAAe,CAACS,SAAD,EAAYJ,OAAZ,CAF0B,CAA5B;EAAA,CAAf,CAFkB,EAMpB,CAACA,OAAD,EAAUD,UAAV,CANoB,CAAtB;EASA,MAAMM,aAAa,GAAGhB,OAAO,CAC3B,MACEY,MAAM,CAACC,GAAP,CAAW,SAAsB;IAAA,IAArB,CAACI,MAAD,EAASC,MAAT,CAAqB;IAC/B,OAAOD,MAAM,IAAIC,MAAV,IAAoB,CAACD,MAAM,CAACE,MAAP,CAAcD,MAAd,CAArB,GAA6CnB,IAAI,CAACqB,UAAL,CAAgBH,MAAhB,EAAwBC,MAAxB,CAA7C,GAA+EG,SAAtF;EACD,CAFD,CAFyB,EAK3B,CAACT,MAAD,CAL2B,CAA7B,CAZ+G,CAmB/G;;EACA,MAAMU,OAAO,GAAGjB,6BAA6B,CAACW,aAAD,EAAgBT,cAAhB,EAAgC,aAAhC,CAA7C;EAEAgB,OAAO,CAACC,QAAR;EAEA,OAAOxB,OAAO,CAAC,MAAM;IACnB,OAAOsB,OAAO,CAACT,GAAR,CAAY,CAACY,MAAD,EAASC,CAAT,KAAe;MAChC,MAAM;QAAED,MAAM,EAAEE,QAAV;QAAoBC;MAApB,IAAgCH,MAAtC;MACA,MAAMR,MAAM,GAAGL,MAAM,CAACc,CAAD,CAAN,CAAU,CAAV,CAAf;MACA,MAAMR,MAAM,GAAGN,MAAM,CAACc,CAAD,CAAN,CAAU,CAAV,CAAf;MAEA,IAAIE,OAAJ,EAAa,OAAO,CAACpB,SAAS,CAACqB,OAAX,EAAoB,IAApB,CAAP;MACb,IAAI,CAACZ,MAAD,IAAW,CAACC,MAAZ,IAAsBD,MAAM,CAACE,MAAP,CAAcD,MAAd,CAA1B,EAAiD,OAAO,CAACV,SAAS,CAACsB,OAAX,EAAoB,IAApB,CAAP;MACjD,IAAI,CAACH,QAAL,EAAe,OAAO,CAACnB,SAAS,CAACuB,UAAX,EAAuB,IAAvB,CAAP;MACf,MAAM;QAAEC,QAAF;QAAYC;MAAZ,IAAyBN,QAA/B;MACA,MAAM,CAACO,MAAD,EAASC,MAAT,IAAmBlB,MAAM,CAACmB,WAAP,CAAmBlB,MAAnB,IAA6B,CAACD,MAAD,EAASC,MAAT,CAA7B,GAAgD,CAACA,MAAD,EAASD,MAAT,CAAzE;MACA,OAAO,CACLT,SAAS,CAAC6B,MADL,EAEL,IAAItC,IAAJ,CAAS,IAAID,WAAJ,CAAgBoC,MAAhB,EAAwBF,QAAQ,CAACM,QAAT,EAAxB,CAAT,EAAuD,IAAIxC,WAAJ,CAAgBqC,MAAhB,EAAwBF,QAAQ,CAACK,QAAT,EAAxB,CAAvD,CAFK,CAAP;IAID,CAdM,CAAP;EAeD,CAhBa,EAgBX,CAAChB,OAAD,EAAUV,MAAV,CAhBW,CAAd;AAiBD;AAED,OAAO,SAAS2B,OAAT,CAAiBtB,MAAjB,EAAoCC,MAApC,EAAiF;EACtF,OAAOT,QAAQ,CAAC,CAAC,CAACQ,MAAD,EAASC,MAAT,CAAD,CAAD,CAAR,CAA6B,CAA7B,CAAP;AACD"},"metadata":{},"sourceType":"module"}