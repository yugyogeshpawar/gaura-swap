{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/components/NumericalInput/index.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { escapeRegExp } from '../../utils';\nconst StyledInput = styled.input`\n  color: ${_ref => {\n  let {\n    error,\n    theme\n  } = _ref;\n  return error ? theme.red1 : theme.text1;\n}};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.bg1;\n}};\n  font-size: ${_ref3 => {\n  let {\n    fontSize\n  } = _ref3;\n  return fontSize !== null && fontSize !== void 0 ? fontSize : '24px';\n}};\n  text-align: ${_ref4 => {\n  let {\n    align\n  } = _ref4;\n  return align && align;\n}};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.text4;\n}};\n  }\n`;\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`); // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput(_ref6) {\n  let {\n    value,\n    onUserInput,\n    placeholder,\n    ...rest\n  } = _ref6;\n\n  const enforcer = nextUserInput => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledInput, Object.assign({}, rest, {\n    value: value,\n    onChange: event => enforcer(event.target.value.replace(/,/g, '.')) // universal input options\n    ,\n    inputMode: \"decimal\",\n    title: \"Token Amount\",\n    autoComplete: \"off\",\n    autoCorrect: \"off\" // text-specific options\n    ,\n    type: \"text\",\n    pattern: \"^[0-9]*[.,]?[0-9]*$\",\n    placeholder: placeholder || '0.0',\n    minLength: 1,\n    maxLength: 79,\n    spellCheck: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }));\n});\nexport default Input;","map":{"version":3,"names":["React","styled","escapeRegExp","StyledInput","input","error","theme","red1","text1","bg1","fontSize","align","text4","inputRegex","RegExp","Input","memo","InnerInput","value","onUserInput","placeholder","rest","enforcer","nextUserInput","test","event","target","replace"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/components/NumericalInput/index.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { escapeRegExp } from '../../utils';\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.red1 : theme.text1)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.bg1};\n  font-size: ${({ fontSize }) => fontSize ?? '24px'};\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text4};\n  }\n`;\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`); // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number;\n  onUserInput: (input: string) => void;\n  error?: boolean;\n  fontSize?: string;\n  align?: 'right' | 'left';\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput);\n    }\n  };\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => enforcer(event.target.value.replace(/,/g, '.'))}\n      // universal input options\n      inputMode=\"decimal\"\n      title=\"Token Amount\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  );\n});\n\nexport default Input;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,aAA7B;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACG,KAA8D;AACzF,WAAW;EAAA,IAAC;IAAEC,KAAF;IAASC;EAAT,CAAD;EAAA,OAAuBD,KAAK,GAAGC,KAAK,CAACC,IAAT,GAAgBD,KAAK,CAACE,KAAlD;AAAA,CAAyD;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;EAAA,IAAC;IAAEF;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACG,GAArB;AAAA,CAAyB;AAC/C,eAAe;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAkBA,QAAlB,aAAkBA,QAAlB,cAAkBA,QAAlB,GAA8B,MAA9B;AAAA,CAAqC;AACpD,gBAAgB;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,OAAeA,KAAK,IAAIA,KAAxB;AAAA,CAA8B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;EAAA,IAAC;IAAEL;EAAF,CAAD;EAAA,OAAeA,KAAK,CAACM,KAArB;AAAA,CAA2B;AACxC;AACA,CAjCA;AAmCA,MAAMC,UAAU,GAAGC,MAAM,CAAE,wBAAF,CAAzB,C,CAAqD;;AAErD,OAAO,MAAMC,KAAK,GAAGf,KAAK,CAACgB,IAAN,CAAW,SAASC,UAAT,QAWwC;EAAA,IAXpB;IAClDC,KADkD;IAElDC,WAFkD;IAGlDC,WAHkD;IAIlD,GAAGC;EAJ+C,CAWoB;;EACtE,MAAMC,QAAQ,GAAIC,aAAD,IAA2B;IAC1C,IAAIA,aAAa,KAAK,EAAlB,IAAwBV,UAAU,CAACW,IAAX,CAAgBtB,YAAY,CAACqB,aAAD,CAA5B,CAA5B,EAA0E;MACxEJ,WAAW,CAACI,aAAD,CAAX;IACD;EACF,CAJD;;EAMA,oBACE,oBAAC,WAAD,oBACMF,IADN;IAEE,KAAK,EAAEH,KAFT;IAGE,QAAQ,EAAGO,KAAD,IAAWH,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaR,KAAb,CAAmBS,OAAnB,CAA2B,IAA3B,EAAiC,GAAjC,CAAD,CAH/B,CAIE;IAJF;IAKE,SAAS,EAAC,SALZ;IAME,KAAK,EAAC,cANR;IAOE,YAAY,EAAC,KAPf;IAQE,WAAW,EAAC,KARd,CASE;IATF;IAUE,IAAI,EAAC,MAVP;IAWE,OAAO,EAAC,qBAXV;IAYE,WAAW,EAAEP,WAAW,IAAI,KAZ9B;IAaE,SAAS,EAAE,CAbb;IAcE,SAAS,EAAE,EAdb;IAeE,UAAU,EAAC,OAfb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GADF;AAmBD,CArCoB,CAAd;AAuCP,eAAeL,KAAf"},"metadata":{},"sourceType":"module"}