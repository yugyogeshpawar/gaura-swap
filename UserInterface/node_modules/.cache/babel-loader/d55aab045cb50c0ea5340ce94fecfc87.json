{"ast":null,"code":"var _classCallCheck = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _asyncToGenerator = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nvar cacheUtils = require('./cache-utils.js');\n\nvar createAsyncMiddleware = require('json-rpc-engine/src/createAsyncMiddleware'); // `<nil>` comes from https://github.com/ethereum/go-ethereum/issues/16925\n\n\nvar emptyValues = [undefined, null, \"<nil>\"];\nmodule.exports = createBlockCacheMiddleware;\n\nfunction createBlockCacheMiddleware() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // validate options\n  var blockTracker = opts.blockTracker;\n  if (!blockTracker) throw new Error('createBlockCacheMiddleware - No BlockTracker specified'); // create caching strategies\n\n  var blockCache = new BlockCacheStrategy();\n  var strategies = {\n    perma: blockCache,\n    block: blockCache,\n    fork: blockCache\n  };\n  return createAsyncMiddleware( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res, next) {\n      var type, strategy, blockTag, requestedBlockNumber, latestBlockNumber, cacheResult;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!req.skipCache) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", next());\n\n            case 2:\n              // check type and matching strategy\n              type = cacheUtils.cacheTypeForPayload(req);\n              strategy = strategies[type]; // If there's no strategy in place, pass it down the chain.\n\n              if (strategy) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", next());\n\n            case 6:\n              if (strategy.canCacheRequest(req)) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", next());\n\n            case 8:\n              // get block reference (number or keyword)\n              blockTag = cacheUtils.blockTagForPayload(req);\n              if (!blockTag) blockTag = 'latest'; // get exact block number\n\n              if (!(blockTag === 'earliest')) {\n                _context.next = 14;\n                break;\n              }\n\n              // this just exists for symmetry with \"latest\"\n              requestedBlockNumber = '0x00';\n              _context.next = 23;\n              break;\n\n            case 14:\n              if (!(blockTag === 'latest')) {\n                _context.next = 22;\n                break;\n              }\n\n              _context.next = 17;\n              return blockTracker.getLatestBlock();\n\n            case 17:\n              latestBlockNumber = _context.sent;\n              // clear all cache before latest block\n              blockCache.clearBefore(latestBlockNumber);\n              requestedBlockNumber = latestBlockNumber;\n              _context.next = 23;\n              break;\n\n            case 22:\n              // We have a hex number\n              requestedBlockNumber = blockTag;\n\n            case 23:\n              _context.next = 25;\n              return strategy.get(req, requestedBlockNumber);\n\n            case 25:\n              cacheResult = _context.sent;\n\n              if (!(cacheResult === undefined)) {\n                _context.next = 33;\n                break;\n              }\n\n              _context.next = 29;\n              return next();\n\n            case 29:\n              _context.next = 31;\n              return strategy.set(req, requestedBlockNumber, res.result);\n\n            case 31:\n              _context.next = 34;\n              break;\n\n            case 33:\n              // fill in result from cache\n              res.result = cacheResult;\n\n            case 34:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n} //\n// Cache Strategies\n//\n\n\nvar BlockCacheStrategy = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function BlockCacheStrategy() {\n    _classCallCheck(this, BlockCacheStrategy);\n\n    this.cache = {};\n  }\n\n  _createClass(BlockCacheStrategy, [{\n    key: \"getBlockCacheForPayload\",\n    value: function getBlockCacheForPayload(payload, blockNumberHex) {\n      var blockNumber = Number.parseInt(blockNumberHex, 16);\n      var blockCache = this.cache[blockNumber]; // create new cache if necesary\n\n      if (!blockCache) {\n        var newCache = {};\n        this.cache[blockNumber] = newCache;\n        blockCache = newCache;\n      }\n\n      return blockCache;\n    }\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(payload, requestedBlockNumber) {\n        var blockCache, identifier, cached;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // lookup block cache\n                blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber);\n\n                if (blockCache) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                // lookup payload in block cache\n                identifier = cacheUtils.cacheIdentifierForPayload(payload, true);\n                cached = blockCache[identifier]; // may be undefined\n\n                return _context2.abrupt(\"return\", cached);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function get(_x4, _x5) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }, {\n    key: \"set\",\n    value: function () {\n      var _set = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(payload, requestedBlockNumber, result) {\n        var canCache, blockCache, identifier;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // check if we can cached this result\n                canCache = this.canCacheResult(payload, result);\n\n                if (canCache) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 3:\n                // set the value in the cache\n                blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber);\n                identifier = cacheUtils.cacheIdentifierForPayload(payload, true);\n                blockCache[identifier] = result;\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function set(_x6, _x7, _x8) {\n        return _set.apply(this, arguments);\n      }\n\n      return set;\n    }()\n  }, {\n    key: \"canCacheRequest\",\n    value: function canCacheRequest(payload) {\n      // check request method\n      if (!cacheUtils.canCache(payload)) {\n        return false;\n      } // check blockTag\n\n\n      var blockTag = cacheUtils.blockTagForPayload(payload);\n\n      if (blockTag === 'pending') {\n        return false;\n      } // can be cached\n\n\n      return true;\n    }\n  }, {\n    key: \"canCacheResult\",\n    value: function canCacheResult(payload, result) {\n      // never cache empty values (e.g. undefined)\n      if (emptyValues.includes(result)) return; // check if transactions have block reference before caching\n\n      if (['eth_getTransactionByHash', 'eth_getTransactionReceipt'].includes(payload.method)) {\n        if (!result || !result.blockHash || result.blockHash === '0x0000000000000000000000000000000000000000000000000000000000000000') {\n          return false;\n        }\n      } // otherwise true\n\n\n      return true;\n    } // removes all block caches with block number lower than `oldBlockHex`\n\n  }, {\n    key: \"clearBefore\",\n    value: function clearBefore(oldBlockHex) {\n      var self = this;\n      var oldBlockNumber = Number.parseInt(oldBlockHex, 16); // clear old caches\n\n      Object.keys(self.cache).map(Number).filter(function (num) {\n        return num < oldBlockNumber;\n      }).forEach(function (num) {\n        return delete self.cache[num];\n      });\n    }\n  }]);\n\n  return BlockCacheStrategy;\n}();","map":{"version":3,"names":["cacheUtils","require","createAsyncMiddleware","emptyValues","undefined","module","exports","createBlockCacheMiddleware","opts","blockTracker","Error","blockCache","BlockCacheStrategy","strategies","perma","block","fork","req","res","next","skipCache","type","cacheTypeForPayload","strategy","canCacheRequest","blockTag","blockTagForPayload","requestedBlockNumber","getLatestBlock","latestBlockNumber","clearBefore","get","cacheResult","set","result","cache","payload","blockNumberHex","blockNumber","Number","parseInt","newCache","getBlockCacheForPayload","identifier","cacheIdentifierForPayload","cached","canCache","canCacheResult","includes","method","blockHash","oldBlockHex","self","oldBlockNumber","Object","keys","map","filter","num","forEach"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/web3-provider-engine/node_modules/eth-json-rpc-middleware/block-cache.js"],"sourcesContent":["const cacheUtils = require('./cache-utils.js')\nconst createAsyncMiddleware = require('json-rpc-engine/src/createAsyncMiddleware')\n// `<nil>` comes from https://github.com/ethereum/go-ethereum/issues/16925\nconst emptyValues = [undefined, null, '\\u003cnil\\u003e']\n\nmodule.exports = createBlockCacheMiddleware\n\n\nfunction createBlockCacheMiddleware(opts = {}) {\n  // validate options\n  const { blockTracker } = opts\n  if (!blockTracker) throw new Error('createBlockCacheMiddleware - No BlockTracker specified')\n\n  // create caching strategies\n  const blockCache = new BlockCacheStrategy()\n  const strategies = {\n    perma: blockCache,\n    block: blockCache,\n    fork: blockCache,\n  }\n\n  return createAsyncMiddleware(async (req, res, next) => {\n    // allow cach to be skipped if so specified\n    if (req.skipCache) {\n      return next()\n    }\n    // check type and matching strategy\n    const type = cacheUtils.cacheTypeForPayload(req)\n    const strategy = strategies[type]\n    // If there's no strategy in place, pass it down the chain.\n    if (!strategy) {\n      return next()\n    }\n    // If the strategy can't cache this request, ignore it.\n    if (!strategy.canCacheRequest(req)) {\n      return next()\n    }\n\n    // get block reference (number or keyword)\n    let blockTag = cacheUtils.blockTagForPayload(req)\n    if (!blockTag) blockTag = 'latest'\n\n    // get exact block number\n    let requestedBlockNumber\n    if (blockTag === 'earliest') {\n      // this just exists for symmetry with \"latest\"\n      requestedBlockNumber = '0x00'\n    } else if (blockTag === 'latest') {\n      // fetch latest block number\n      const latestBlockNumber = await blockTracker.getLatestBlock()\n      // clear all cache before latest block\n      blockCache.clearBefore(latestBlockNumber)\n      requestedBlockNumber = latestBlockNumber\n    } else {\n      // We have a hex number\n      requestedBlockNumber = blockTag\n    }\n\n    // end on a hit, continue on a miss\n    const cacheResult = await strategy.get(req, requestedBlockNumber)\n    if (cacheResult === undefined) {\n      // cache miss\n      // wait for other middleware to handle request\n      await next()\n      // add result to cache\n      await strategy.set(req, requestedBlockNumber, res.result)\n    } else {\n      // fill in result from cache\n      res.result = cacheResult\n    }\n  })\n}\n\n\n//\n// Cache Strategies\n//\n\nclass BlockCacheStrategy {\n  \n  constructor () {\n    this.cache = {}\n  }\n\n  getBlockCacheForPayload (payload, blockNumberHex) {\n    const blockNumber = Number.parseInt(blockNumberHex, 16)\n    let blockCache = this.cache[blockNumber]\n    // create new cache if necesary\n    if (!blockCache) {\n      const newCache = {}\n      this.cache[blockNumber] = newCache\n      blockCache = newCache\n    }\n    return blockCache\n  }\n\n  async get (payload, requestedBlockNumber) {\n    // lookup block cache\n    const blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber)\n    if (!blockCache) return\n    // lookup payload in block cache\n    const identifier = cacheUtils.cacheIdentifierForPayload(payload, true)\n    const cached = blockCache[identifier]\n    // may be undefined\n    return cached\n  }\n\n  async set (payload, requestedBlockNumber, result) {\n    // check if we can cached this result\n    const canCache = this.canCacheResult(payload, result)\n    if (!canCache) return\n    // set the value in the cache\n    const blockCache = this.getBlockCacheForPayload(payload, requestedBlockNumber)\n    const identifier = cacheUtils.cacheIdentifierForPayload(payload, true)\n    blockCache[identifier] = result\n  }\n\n  canCacheRequest (payload) {\n    // check request method\n    if (!cacheUtils.canCache(payload)) {\n      return false\n    }\n    // check blockTag\n    const blockTag = cacheUtils.blockTagForPayload(payload)\n    if (blockTag === 'pending') {\n      return false\n    }\n    // can be cached\n    return true\n  }\n\n  canCacheResult (payload, result) {\n    // never cache empty values (e.g. undefined)\n    if (emptyValues.includes(result)) return\n    // check if transactions have block reference before caching\n    if (['eth_getTransactionByHash', 'eth_getTransactionReceipt'].includes(payload.method)) {\n      if (!result || !result.blockHash || result.blockHash === '0x0000000000000000000000000000000000000000000000000000000000000000') {\n        return false\n      }\n    }\n    // otherwise true\n    return true\n  }\n\n  // removes all block caches with block number lower than `oldBlockHex`\n  clearBefore (oldBlockHex){\n    const self = this\n    const oldBlockNumber = Number.parseInt(oldBlockHex, 16)\n    // clear old caches\n    Object.keys(self.cache)\n      .map(Number)\n      .filter(num => num < oldBlockNumber)\n      .forEach(num => delete self.cache[num])\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}