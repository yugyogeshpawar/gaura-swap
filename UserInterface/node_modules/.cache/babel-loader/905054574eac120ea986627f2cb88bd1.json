{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ethErrors = void 0;\n\nvar classes_1 = require(\"./classes\");\n\nvar utils_1 = require(\"./utils\");\n\nvar error_constants_1 = require(\"./error-constants\");\n\nexports.ethErrors = {\n  rpc: {\n    /**\n     * Get a JSON RPC 2.0 Parse (-32700) error.\n     */\n    parse: function parse(arg) {\n      return getEthJsonRpcError(error_constants_1.errorCodes.rpc.parse, arg);\n    },\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n     */\n    invalidRequest: function invalidRequest(arg) {\n      return getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidRequest, arg);\n    },\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n     */\n    invalidParams: function invalidParams(arg) {\n      return getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidParams, arg);\n    },\n\n    /**\n     * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n     */\n    methodNotFound: function methodNotFound(arg) {\n      return getEthJsonRpcError(error_constants_1.errorCodes.rpc.methodNotFound, arg);\n    },\n\n    /**\n     * Get a JSON RPC 2.0 Internal (-32603) error.\n     */\n    internal: function internal(arg) {\n      return getEthJsonRpcError(error_constants_1.errorCodes.rpc.internal, arg);\n    },\n\n    /**\n     * Get a JSON RPC 2.0 Server error.\n     * Permits integer error codes in the [ -32099 <= -32005 ] range.\n     * Codes -32000 through -32004 are reserved by EIP-1474.\n     */\n    server: function server(opts) {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum RPC Server errors must provide single object argument.');\n      }\n\n      var code = opts.code;\n\n      if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n        throw new Error('\"code\" must be an integer such that: -32099 <= code <= -32005');\n      }\n\n      return getEthJsonRpcError(code, opts);\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n     */\n    invalidInput: function invalidInput(arg) {\n      return getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidInput, arg);\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n     */\n    resourceNotFound: function resourceNotFound(arg) {\n      return getEthJsonRpcError(error_constants_1.errorCodes.rpc.resourceNotFound, arg);\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n     */\n    resourceUnavailable: function resourceUnavailable(arg) {\n      return getEthJsonRpcError(error_constants_1.errorCodes.rpc.resourceUnavailable, arg);\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n     */\n    transactionRejected: function transactionRejected(arg) {\n      return getEthJsonRpcError(error_constants_1.errorCodes.rpc.transactionRejected, arg);\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n     */\n    methodNotSupported: function methodNotSupported(arg) {\n      return getEthJsonRpcError(error_constants_1.errorCodes.rpc.methodNotSupported, arg);\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Limit Exceeded (-32005) error.\n     */\n    limitExceeded: function limitExceeded(arg) {\n      return getEthJsonRpcError(error_constants_1.errorCodes.rpc.limitExceeded, arg);\n    }\n  },\n  provider: {\n    /**\n     * Get an Ethereum Provider User Rejected Request (4001) error.\n     */\n    userRejectedRequest: function userRejectedRequest(arg) {\n      return getEthProviderError(error_constants_1.errorCodes.provider.userRejectedRequest, arg);\n    },\n\n    /**\n     * Get an Ethereum Provider Unauthorized (4100) error.\n     */\n    unauthorized: function unauthorized(arg) {\n      return getEthProviderError(error_constants_1.errorCodes.provider.unauthorized, arg);\n    },\n\n    /**\n     * Get an Ethereum Provider Unsupported Method (4200) error.\n     */\n    unsupportedMethod: function unsupportedMethod(arg) {\n      return getEthProviderError(error_constants_1.errorCodes.provider.unsupportedMethod, arg);\n    },\n\n    /**\n     * Get an Ethereum Provider Not Connected (4900) error.\n     */\n    disconnected: function disconnected(arg) {\n      return getEthProviderError(error_constants_1.errorCodes.provider.disconnected, arg);\n    },\n\n    /**\n     * Get an Ethereum Provider Chain Not Connected (4901) error.\n     */\n    chainDisconnected: function chainDisconnected(arg) {\n      return getEthProviderError(error_constants_1.errorCodes.provider.chainDisconnected, arg);\n    },\n\n    /**\n     * Get a custom Ethereum Provider error.\n     */\n    custom: function custom(opts) {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum Provider custom errors must provide single object argument.');\n      }\n\n      var code = opts.code,\n          message = opts.message,\n          data = opts.data;\n\n      if (!message || typeof message !== 'string') {\n        throw new Error('\"message\" must be a nonempty string');\n      }\n\n      return new classes_1.EthereumProviderError(code, message, data);\n    }\n  }\n}; // Internal\n\nfunction getEthJsonRpcError(code, arg) {\n  var _parseOpts = parseOpts(arg),\n      _parseOpts2 = _slicedToArray(_parseOpts, 2),\n      message = _parseOpts2[0],\n      data = _parseOpts2[1];\n\n  return new classes_1.EthereumRpcError(code, message || utils_1.getMessageFromCode(code), data);\n}\n\nfunction getEthProviderError(code, arg) {\n  var _parseOpts3 = parseOpts(arg),\n      _parseOpts4 = _slicedToArray(_parseOpts3, 2),\n      message = _parseOpts4[0],\n      data = _parseOpts4[1];\n\n  return new classes_1.EthereumProviderError(code, message || utils_1.getMessageFromCode(code), data);\n}\n\nfunction parseOpts(arg) {\n  if (arg) {\n    if (typeof arg === 'string') {\n      return [arg];\n    } else if (typeof arg === 'object' && !Array.isArray(arg)) {\n      var message = arg.message,\n          data = arg.data;\n\n      if (message && typeof message !== 'string') {\n        throw new Error('Must specify string message.');\n      }\n\n      return [message || undefined, data];\n    }\n  }\n\n  return [];\n}","map":{"version":3,"mappings":"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","names":["exports","rpc","parse","arg","getEthJsonRpcError","error_constants_1","invalidRequest","invalidParams","methodNotFound","internal","server","opts","Array","isArray","Error","code","Number","isInteger","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","limitExceeded","provider","userRejectedRequest","getEthProviderError","unauthorized","unsupportedMethod","disconnected","chainDisconnected","custom","message","data","classes_1","parseOpts","utils_1","undefined"],"sourceRoot":"","sources":["../src/errors.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}