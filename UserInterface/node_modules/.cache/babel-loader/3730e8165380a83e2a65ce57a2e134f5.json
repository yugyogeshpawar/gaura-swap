{"ast":null,"code":"import { toChecksumAddress } from 'web3-utils';\nimport DEFAULT_TOKEN_LIST from '@uniswap/default-token-list';\nimport { ChainId, Token } from '@uniswap/sdk';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport sortByListPriority from 'utils/listSort';\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  constructor(tokenInfo, tags) {\n    super(tokenInfo.chainId, toChecksumAddress(tokenInfo.address), tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name);\n    this.tokenInfo = void 0;\n    this.tags = void 0;\n    this.tokenInfo = tokenInfo;\n    this.tags = tags;\n  }\n\n  get logoURI() {\n    return this.tokenInfo.logoURI;\n  }\n\n}\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST = {\n  [ChainId.KOVAN]: {},\n  [ChainId.RINKEBY]: {},\n  [ChainId.ROPSTEN]: {},\n  [ChainId.GÖRLI]: {},\n  [ChainId.MAINNET]: {},\n  [ChainId.GAURA]: {}\n};\nconst listCache = typeof WeakMap !== 'undefined' ? new WeakMap() : null;\nexport function listToTokenMap(list) {\n  const result = listCache === null || listCache === void 0 ? void 0 : listCache.get(list);\n  if (result) return result;\n  const map = list.tokens.reduce((tokenMap, tokenInfo) => {\n    var _tokenInfo$tags$map$f, _tokenInfo$tags, _tokenInfo$tags$map;\n\n    const tags = (_tokenInfo$tags$map$f = (_tokenInfo$tags = tokenInfo.tags) === null || _tokenInfo$tags === void 0 ? void 0 : (_tokenInfo$tags$map = _tokenInfo$tags.map(tagId => {\n      var _list$tags;\n\n      if (!((_list$tags = list.tags) === null || _list$tags === void 0 ? void 0 : _list$tags[tagId])) return undefined;\n      return { ...list.tags[tagId],\n        id: tagId\n      };\n    })) === null || _tokenInfo$tags$map === void 0 ? void 0 : _tokenInfo$tags$map.filter(x => Boolean(x))) !== null && _tokenInfo$tags$map$f !== void 0 ? _tokenInfo$tags$map$f : [];\n    const token = new WrappedTokenInfo(tokenInfo, tags);\n    if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.');\n    return { ...tokenMap,\n      [token.chainId]: { ...tokenMap[token.chainId],\n        [token.address]: {\n          token,\n          list: list\n        }\n      }\n    };\n  }, { ...EMPTY_LIST\n  });\n  listCache === null || listCache === void 0 ? void 0 : listCache.set(list, map);\n  return map;\n}\nexport function useAllLists() {\n  return useSelector(state => state.lists.byUrl);\n}\n\nfunction combineMaps(map1, map2) {\n  return {\n    1: { ...map1[1],\n      ...map2[1]\n    },\n    3: { ...map1[3],\n      ...map2[3]\n    },\n    4: { ...map1[4],\n      ...map2[4]\n    },\n    5: { ...map1[5],\n      ...map2[5]\n    },\n    42: { ...map1[42],\n      ...map2[42]\n    },\n    33982: { ...map1[33982],\n      ...map2[33982]\n    }\n  };\n} // merge tokens contained within lists from urls\n\n\nfunction useCombinedTokenMapFromUrls(urls) {\n  const lists = useAllLists();\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST;\n    return urls.slice() // sort by priority so top priority goes last\n    .sort(sortByListPriority).reduce((allTokens, currentUrl) => {\n      var _lists$currentUrl;\n\n      const current = (_lists$currentUrl = lists[currentUrl]) === null || _lists$currentUrl === void 0 ? void 0 : _lists$currentUrl.current;\n      if (!current) return allTokens;\n\n      try {\n        const newTokens = Object.assign(listToTokenMap(current));\n        return combineMaps(allTokens, newTokens);\n      } catch (error) {\n        console.error('Could not show token list due to error', error);\n        return allTokens;\n      }\n    }, EMPTY_LIST);\n  }, [lists, urls]);\n} // filter out unsupported lists\n\n\nexport function useActiveListUrls() {\n  return useSelector(state => state.lists.activeListUrls);\n}\nexport function useInactiveListUrls() {\n  const lists = useAllLists();\n  const allActiveListUrls = useActiveListUrls();\n  return Object.keys(lists).filter(url => !(allActiveListUrls === null || allActiveListUrls === void 0 ? void 0 : allActiveListUrls.includes(url)));\n} // get all the tokens from active lists, combine with local default tokens\n\nexport function useCombinedActiveList() {\n  const activeListUrls = useActiveListUrls();\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls);\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST);\n  return combineMaps(activeTokens, defaultTokenMap);\n} // all tokens from inactive lists\n\nexport function useCombinedInactiveList() {\n  const allInactiveListUrls = useInactiveListUrls();\n  return useCombinedTokenMapFromUrls(allInactiveListUrls);\n} // used to hide warnings on import for default tokens\n\nexport function useDefaultTokenList() {\n  return listToTokenMap(DEFAULT_TOKEN_LIST);\n}\nexport function useIsListActive(url) {\n  const activeListUrls = useActiveListUrls();\n  return Boolean(activeListUrls === null || activeListUrls === void 0 ? void 0 : activeListUrls.includes(url));\n}","map":{"version":3,"names":["toChecksumAddress","DEFAULT_TOKEN_LIST","ChainId","Token","useMemo","useSelector","sortByListPriority","WrappedTokenInfo","constructor","tokenInfo","tags","chainId","address","decimals","symbol","name","logoURI","EMPTY_LIST","KOVAN","RINKEBY","ROPSTEN","GÖRLI","MAINNET","GAURA","listCache","WeakMap","listToTokenMap","list","result","get","map","tokens","reduce","tokenMap","tagId","undefined","id","filter","x","Boolean","token","Error","set","useAllLists","state","lists","byUrl","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","sort","allTokens","currentUrl","current","newTokens","Object","assign","error","console","useActiveListUrls","activeListUrls","useInactiveListUrls","allActiveListUrls","keys","url","includes","useCombinedActiveList","activeTokens","defaultTokenMap","useCombinedInactiveList","allInactiveListUrls","useDefaultTokenList","useIsListActive"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/state/lists/hooks.ts"],"sourcesContent":["import { toChecksumAddress } from 'web3-utils';\nimport DEFAULT_TOKEN_LIST from '@uniswap/default-token-list';\nimport { ChainId, Token } from '@uniswap/sdk';\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../index';\nimport sortByListPriority from 'utils/listSort';\n\ntype TagDetails = Tags[keyof Tags];\nexport interface TagInfo extends TagDetails {\n  id: string;\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo;\n  public readonly tags: TagInfo[];\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(\n      tokenInfo.chainId,\n      toChecksumAddress(tokenInfo.address),\n      tokenInfo.decimals,\n      tokenInfo.symbol,\n      tokenInfo.name\n    );\n    this.tokenInfo = tokenInfo;\n    this.tags = tags;\n  }\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI;\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>;\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.KOVAN]: {},\n  [ChainId.RINKEBY]: {},\n  [ChainId.ROPSTEN]: {},\n  [ChainId.GÖRLI]: {},\n  [ChainId.MAINNET]: {},\n  [ChainId.GAURA]: {},\n};\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null;\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list);\n  if (result) return result;\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined;\n            return { ...list.tags[tagId], id: tagId };\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? [];\n      const token = new WrappedTokenInfo(tokenInfo, tags);\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.');\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list: list,\n          },\n        },\n      };\n    },\n    { ...EMPTY_LIST }\n  );\n  listCache?.set(list, map);\n  return map;\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null;\n    readonly pendingUpdate: TokenList | null;\n    readonly loadingRequestId: string | null;\n    readonly error: string | null;\n  };\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl);\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    1: { ...map1[1], ...map2[1] },\n    3: { ...map1[3], ...map2[3] },\n    4: { ...map1[4], ...map2[4] },\n    5: { ...map1[5], ...map2[5] },\n    42: { ...map1[42], ...map2[42] },\n    33982: { ...map1[33982], ...map2[33982] },\n  };\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists();\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST;\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current;\n          if (!current) return allTokens;\n          try {\n            const newTokens = Object.assign(listToTokenMap(current));\n            return combineMaps(allTokens, newTokens);\n          } catch (error) {\n            console.error('Could not show token list due to error', error);\n            return allTokens;\n          }\n        }, EMPTY_LIST)\n    );\n  }, [lists, urls]);\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls);\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists();\n  const allActiveListUrls = useActiveListUrls();\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url));\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls();\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls);\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST);\n  return combineMaps(activeTokens, defaultTokenMap);\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls();\n  return useCombinedTokenMapFromUrls(allInactiveListUrls);\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST);\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls();\n  return Boolean(activeListUrls?.includes(url));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}