{"ast":null,"code":"import{useEffect,useRef}from'react';// modified from https://usehooks.com/usePrevious/\nexport default function usePrevious(value){// The ref object is a generic container whose current property is mutable ...\n// ... and can hold any value, similar to an instance property on a class\nvar ref=useRef();// Store current value in ref\nuseEffect(function(){ref.current=value;},[value]);// Only re-run if value changes\n// Return previous value (happens before update in useEffect above)\nreturn ref.current;}","map":{"version":3,"names":["useEffect","useRef","usePrevious","value","ref","current"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/hooks/usePrevious.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n// modified from https://usehooks.com/usePrevious/\nexport default function usePrevious<T>(value: T) {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef<T>();\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current;\n}\n"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,MAApB,KAAkC,OAAlC,CAEA;AACA,cAAe,SAASC,YAAT,CAAwBC,KAAxB,CAAkC,CAC/C;AACA;AACA,GAAMC,IAAG,CAAGH,MAAM,EAAlB,CAEA;AACAD,SAAS,CAAC,UAAM,CACdI,GAAG,CAACC,OAAJ,CAAcF,KAAd,CACD,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAEa;AAEb;AACA,MAAOC,IAAG,CAACC,OAAX,CACD"},"metadata":{},"sourceType":"module"}