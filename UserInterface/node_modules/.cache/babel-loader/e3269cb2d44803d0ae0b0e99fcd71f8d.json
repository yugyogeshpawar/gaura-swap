{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/components/WalletModal/index.tsx\";\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport React, { useEffect, useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport styled from 'styled-components';\nimport MetamaskIcon from '../../assets/images/metamask.png';\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/x.svg\";\nimport { // fortmatic,\ninjected // portis\n} from '../../connectors'; // import { OVERLAY_READY } from '../../connectors/Fortmatic';\n\nimport { SUPPORTED_WALLETS } from '../../constants';\nimport usePrevious from '../../hooks/usePrevious';\nimport { ApplicationModal } from '../../state/application/actions';\nimport { useModalOpen, useWalletModalToggle } from '../../state/application/hooks';\nimport { ExternalLink } from '../../theme';\nimport AccountDetails from '../AccountDetails';\nimport Modal from '../Modal';\nimport Option from './Option';\nimport PendingView from './PendingView';\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 1rem;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n`;\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.text4;\n}};\n  }\n`;\nconst Wrapper = styled.div`\n  ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.flexColumnNoWrap;\n}}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\nconst HeaderRow = styled.div`\n  ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.flexRowNoWrap;\n}};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${props => props.color === 'blue' ? _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.primary1;\n} : 'inherit'};\n  ${_ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `;\n}};\n`;\nconst ContentWrapper = styled.div`\n  background-color: ${_ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return theme.bg2;\n}};\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${_ref7 => {\n  let {\n    theme\n  } = _ref7;\n  return theme.mediaWidth.upToMedium`padding: 1rem`;\n}};\n`;\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`;\nconst Blurb = styled.div`\n  ${_ref8 => {\n  let {\n    theme\n  } = _ref8;\n  return theme.flexRowNoWrap;\n}}\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  ${_ref9 => {\n  let {\n    theme\n  } = _ref9;\n  return theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `;\n}};\n`;\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${_ref10 => {\n  let {\n    theme\n  } = _ref10;\n  return theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `;\n}};\n`;\nconst HoverText = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending'\n};\nexport default function WalletModal(_ref11) {\n  let {\n    pendingTransactions,\n    confirmedTransactions,\n    ENSName\n  } = _ref11;\n  // important that these are destructed from the account-specific web3-react context\n  const {\n    active,\n    account,\n    connector,\n    activate,\n    error\n  } = useWeb3React();\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n  const [pendingWallet, setPendingWallet] = useState();\n  const [pendingError, setPendingError] = useState();\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET);\n  const toggleWalletModal = useWalletModalToggle();\n  const previousAccount = usePrevious(account); // close on connection, when logged out before\n\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal();\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen]); // always reset to account view\n\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false);\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [walletModalOpen]); // close modal when a connection is successful\n\n  const activePrevious = usePrevious(active);\n  const connectorPrevious = usePrevious(connector);\n  useEffect(() => {\n    if (walletModalOpen && (active && !activePrevious || connector && connector !== connectorPrevious && !error)) {\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious]);\n\n  const tryActivation = async connector => {\n    var _connector$walletConn, _connector$walletConn2;\n\n    setPendingWallet(connector); // set wallet for pending view\n\n    setWalletView(WALLET_VIEWS.PENDING); // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n\n    if (connector instanceof WalletConnectConnector && ((_connector$walletConn = connector.walletConnectProvider) === null || _connector$walletConn === void 0 ? void 0 : (_connector$walletConn2 = _connector$walletConn.wc) === null || _connector$walletConn2 === void 0 ? void 0 : _connector$walletConn2.uri)) {\n      connector.walletConnectProvider = undefined;\n    }\n\n    connector && activate(connector, undefined, true).catch(error => {\n      if (error instanceof UnsupportedChainIdError) {\n        activate(connector); // a little janky...can't use setError because the connector isn't set\n      } else {\n        setPendingError(true);\n      }\n    });\n  }; // close wallet modal if fortmatic modal is active\n  // useEffect(() => {\n  //   fortmatic.on(OVERLAY_READY, () => {\n  //     toggleWalletModal();\n  //   });\n  // }, [toggleWalletModal]);\n  // get wallets user can switch too, depending on device/browser\n\n\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask;\n    return Object.keys(SUPPORTED_WALLETS).map(key => {\n      const option = SUPPORTED_WALLETS[key]; // check for mobile options\n\n      if (isMobile) {\n        //disable portis on mobile for now\n        // if (option.connector === portis) {\n        //   return null;\n        // }\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return /*#__PURE__*/React.createElement(Option, {\n            onClick: () => {\n              option.connector !== connector && !option.href && tryActivation(option.connector);\n            },\n            id: `connect-${key}`,\n            key: key,\n            active: option.connector && option.connector === connector,\n            color: option.color,\n            link: option.href,\n            header: option.name,\n            subheader: null,\n            icon: require('../../assets/images/' + option.iconName),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 13\n            }\n          });\n        }\n\n        return null;\n      } // overwrite injected when needed\n\n\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return /*#__PURE__*/React.createElement(Option, {\n              id: `connect-${key}`,\n              key: key,\n              color: '#E8831D',\n              header: 'Install Metamask',\n              subheader: null,\n              link: 'https://metamask.io/',\n              icon: MetamaskIcon,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 15\n              }\n            });\n          } else {\n            return null; //dont want to return install twice\n          }\n        } // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null;\n        } // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null;\n        }\n      } // return rest of options\n\n\n      return !isMobile && !option.mobileOnly && /*#__PURE__*/React.createElement(Option, {\n        id: `connect-${key}`,\n        onClick: () => {\n          option.connector === connector ? setWalletView(WALLET_VIEWS.ACCOUNT) : !option.href && tryActivation(option.connector);\n        },\n        key: key,\n        active: option.connector === connector,\n        color: option.color,\n        link: option.href,\n        header: option.name,\n        subheader: null //use option.descriptio to bring back multi-line\n        ,\n        icon: require('../../assets/images/' + option.iconName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }\n      });\n    });\n  }\n\n  function getModalContent() {\n    if (error) {\n      return /*#__PURE__*/React.createElement(UpperSection, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        onClick: toggleWalletModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CloseColor, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(HeaderRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }\n      }, error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error connecting'), /*#__PURE__*/React.createElement(ContentWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }\n      }, error instanceof UnsupportedChainIdError ? /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }\n      }, \"Please connect to the appropriate GAURA network.\") : 'Error connecting. Try refreshing the page.'));\n    }\n\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return /*#__PURE__*/React.createElement(AccountDetails, {\n        toggleWalletModal: toggleWalletModal,\n        pendingTransactions: pendingTransactions,\n        confirmedTransactions: confirmedTransactions,\n        ENSName: ENSName,\n        openOptions: () => setWalletView(WALLET_VIEWS.OPTIONS),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(UpperSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      onClick: toggleWalletModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CloseColor, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }\n    })), walletView !== WALLET_VIEWS.ACCOUNT ? /*#__PURE__*/React.createElement(HeaderRow, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HoverText, {\n      onClick: () => {\n        setPendingError(false);\n        setWalletView(WALLET_VIEWS.ACCOUNT);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }, \"Back\")) : /*#__PURE__*/React.createElement(HeaderRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HoverText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }\n    }, \"Connect to a wallet\")), /*#__PURE__*/React.createElement(ContentWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }\n    }, walletView === WALLET_VIEWS.PENDING ? /*#__PURE__*/React.createElement(PendingView, {\n      connector: pendingWallet,\n      error: pendingError,\n      setPendingError: setPendingError,\n      tryActivation: tryActivation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(OptionGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }\n    }, getOptions()), walletView !== WALLET_VIEWS.PENDING && /*#__PURE__*/React.createElement(Blurb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 15\n      }\n    }, \"New to Gaura? \\xA0\"), ' ', /*#__PURE__*/React.createElement(ExternalLink, {\n      href: \"https://ethereum.org/wallets/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 15\n      }\n    }, \"Learn more about wallets\"))));\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: walletModalOpen,\n    onDismiss: toggleWalletModal,\n    minHeight: false,\n    maxHeight: 90,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }\n  }, getModalContent()));\n}","map":{"version":3,"names":["UnsupportedChainIdError","useWeb3React","WalletConnectConnector","React","useEffect","useState","isMobile","styled","MetamaskIcon","injected","SUPPORTED_WALLETS","usePrevious","ApplicationModal","useModalOpen","useWalletModalToggle","ExternalLink","AccountDetails","Modal","Option","PendingView","CloseIcon","div","CloseColor","Close","theme","text4","Wrapper","flexColumnNoWrap","HeaderRow","flexRowNoWrap","props","color","primary1","mediaWidth","upToMedium","ContentWrapper","bg2","UpperSection","Blurb","OptionGrid","HoverText","WALLET_VIEWS","OPTIONS","OPTIONS_SECONDARY","ACCOUNT","PENDING","WalletModal","pendingTransactions","confirmedTransactions","ENSName","active","account","connector","activate","error","walletView","setWalletView","pendingWallet","setPendingWallet","pendingError","setPendingError","walletModalOpen","WALLET","toggleWalletModal","previousAccount","activePrevious","connectorPrevious","tryActivation","walletConnectProvider","wc","uri","undefined","catch","getOptions","isMetamask","window","ethereum","isMetaMask","Object","keys","map","key","option","web3","mobile","href","name","require","iconName","mobileOnly","getModalContent"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/components/WalletModal/index.tsx"],"sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector';\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport React, { useEffect, useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport styled from 'styled-components';\nimport MetamaskIcon from '../../assets/images/metamask.png';\nimport { ReactComponent as Close } from '../../assets/images/x.svg';\nimport {\n  // fortmatic,\n  injected,\n  // portis\n} from '../../connectors';\n// import { OVERLAY_READY } from '../../connectors/Fortmatic';\nimport { SUPPORTED_WALLETS } from '../../constants';\nimport usePrevious from '../../hooks/usePrevious';\nimport { ApplicationModal } from '../../state/application/actions';\nimport { useModalOpen, useWalletModalToggle } from '../../state/application/hooks';\nimport { ExternalLink } from '../../theme';\nimport AccountDetails from '../AccountDetails';\n\nimport Modal from '../Modal';\nimport Option from './Option';\nimport PendingView from './PendingView';\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 1rem;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n`;\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.text4};\n  }\n`;\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\n\nconst HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${(props) => (props.color === 'blue' ? ({ theme }) => theme.primary1 : 'inherit')};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`;\n\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.bg2};\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`;\n\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`;\n\nconst Blurb = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `};\n`;\n\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`;\n\nconst HoverText = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending',\n};\n\nexport default function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName,\n}: {\n  pendingTransactions: string[]; // hashes of pending\n  confirmedTransactions: string[]; // hashes of confirmed\n  ENSName?: string;\n}) {\n  // important that these are destructed from the account-specific web3-react context\n  const { active, account, connector, activate, error } = useWeb3React();\n\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n\n  const [pendingWallet, setPendingWallet] = useState<AbstractConnector | undefined>();\n\n  const [pendingError, setPendingError] = useState<boolean>();\n\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET);\n  const toggleWalletModal = useWalletModalToggle();\n\n  const previousAccount = usePrevious(account);\n\n  // close on connection, when logged out before\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal();\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen]);\n\n  // always reset to account view\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false);\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [walletModalOpen]);\n\n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active);\n  const connectorPrevious = usePrevious(connector);\n  useEffect(() => {\n    if (walletModalOpen && ((active && !activePrevious) || (connector && connector !== connectorPrevious && !error))) {\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious]);\n\n  const tryActivation = async (connector: AbstractConnector | undefined) => {\n    setPendingWallet(connector); // set wallet for pending view\n    setWalletView(WALLET_VIEWS.PENDING);\n\n    // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n    if (connector instanceof WalletConnectConnector && connector.walletConnectProvider?.wc?.uri) {\n      connector.walletConnectProvider = undefined;\n    }\n\n    connector &&\n      activate(connector, undefined, true).catch((error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          activate(connector); // a little janky...can't use setError because the connector isn't set\n        } else {\n          setPendingError(true);\n        }\n      });\n  };\n\n  // close wallet modal if fortmatic modal is active\n  // useEffect(() => {\n  //   fortmatic.on(OVERLAY_READY, () => {\n  //     toggleWalletModal();\n  //   });\n  // }, [toggleWalletModal]);\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask;\n    return Object.keys(SUPPORTED_WALLETS).map((key) => {\n      const option = SUPPORTED_WALLETS[key];\n      // check for mobile options\n      if (isMobile) {\n        //disable portis on mobile for now\n        // if (option.connector === portis) {\n        //   return null;\n        // }\n\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return (\n            <Option\n              onClick={() => {\n                option.connector !== connector && !option.href && tryActivation(option.connector);\n              }}\n              id={`connect-${key}`}\n              key={key}\n              active={option.connector && option.connector === connector}\n              color={option.color}\n              link={option.href}\n              header={option.name}\n              subheader={null}\n              icon={require('../../assets/images/' + option.iconName)}\n            />\n          );\n        }\n        return null;\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return (\n              <Option\n                id={`connect-${key}`}\n                key={key}\n                color={'#E8831D'}\n                header={'Install Metamask'}\n                subheader={null}\n                link={'https://metamask.io/'}\n                icon={MetamaskIcon}\n              />\n            );\n          } else {\n            return null; //dont want to return install twice\n          }\n        }\n        // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null;\n        }\n        // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null;\n        }\n      }\n\n      // return rest of options\n      return (\n        !isMobile &&\n        !option.mobileOnly && (\n          <Option\n            id={`connect-${key}`}\n            onClick={() => {\n              option.connector === connector\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                : !option.href && tryActivation(option.connector);\n            }}\n            key={key}\n            active={option.connector === connector}\n            color={option.color}\n            link={option.href}\n            header={option.name}\n            subheader={null} //use option.descriptio to bring back multi-line\n            icon={require('../../assets/images/' + option.iconName)}\n          />\n        )\n      );\n    });\n  }\n\n  function getModalContent() {\n    if (error) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={toggleWalletModal}>\n            <CloseColor />\n          </CloseIcon>\n          <HeaderRow>{error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error connecting'}</HeaderRow>\n          <ContentWrapper>\n            {error instanceof UnsupportedChainIdError ? (\n              <h5>Please connect to the appropriate GAURA network.</h5>\n            ) : (\n              'Error connecting. Try refreshing the page.'\n            )}\n          </ContentWrapper>\n        </UpperSection>\n      );\n    }\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return (\n        <AccountDetails\n          toggleWalletModal={toggleWalletModal}\n          pendingTransactions={pendingTransactions}\n          confirmedTransactions={confirmedTransactions}\n          ENSName={ENSName}\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n        />\n      );\n    }\n    return (\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor />\n        </CloseIcon>\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\n          <HeaderRow color=\"blue\">\n            <HoverText\n              onClick={() => {\n                setPendingError(false);\n                setWalletView(WALLET_VIEWS.ACCOUNT);\n              }}\n            >\n              Back\n            </HoverText>\n          </HeaderRow>\n        ) : (\n          <HeaderRow>\n            <HoverText>Connect to a wallet</HoverText>\n          </HeaderRow>\n        )}\n        <ContentWrapper>\n          {walletView === WALLET_VIEWS.PENDING ? (\n            <PendingView\n              connector={pendingWallet}\n              error={pendingError}\n              setPendingError={setPendingError}\n              tryActivation={tryActivation}\n            />\n          ) : (\n            <OptionGrid>{getOptions()}</OptionGrid>\n          )}\n          {walletView !== WALLET_VIEWS.PENDING && (\n            <Blurb>\n              <span>New to Gaura? &nbsp;</span>{' '}\n              <ExternalLink href=\"https://ethereum.org/wallets/\">Learn more about wallets</ExternalLink>\n            </Blurb>\n          )}\n        </ContentWrapper>\n      </UpperSection>\n    );\n  }\n\n  return (\n    <Modal isOpen={walletModalOpen} onDismiss={toggleWalletModal} minHeight={false} maxHeight={90}>\n      <Wrapper>{getModalContent()}</Wrapper>\n    </Modal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}