{"ast":null,"code":"import { abi as STAKING_REWARDS_ABI } from '@uniswap/liquidity-staker/build/StakingRewards.json';\nimport { ChainId, WETH } from '@uniswap/sdk';\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { useMemo } from 'react';\nimport { ARGENT_WALLET_DETECTOR_ABI, ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS } from '../constants/abis/argent-wallet-detector';\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json';\nimport ENS_ABI from '../constants/abis/ens-registrar.json';\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20';\nimport ERC20_ABI from '../constants/abis/erc20.json';\nimport WETH_ABI from '../constants/abis/weth.json';\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall';\nimport { getContract } from '../utils';\nimport { useActiveWeb3React } from './index'; // returns null on errors\n\nfunction useContract(address, ABI) {\n  let withSignerIfPossible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const {\n    library,\n    account\n  } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\nexport function useTokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\nexport function useWETHContract(withSignerIfPossible) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible);\n}\nexport function useArgentWalletDetectorContract() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId === ChainId.MAINNET ? ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS : undefined, ARGENT_WALLET_DETECTOR_ABI, false);\n}\nexport function useENSRegistrarContract(withSignerIfPossible) {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  let address;\n\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.GÖRLI:\n      case ChainId.ROPSTEN:\n      case ChainId.RINKEBY:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e';\n        break;\n    }\n  }\n\n  return useContract(address, ENS_ABI, withSignerIfPossible);\n}\nexport function useENSResolverContract(address, withSignerIfPossible) {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\nexport function useBytes32TokenContract(tokenAddress, withSignerIfPossible) {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\nexport function usePairContract(pairAddress, withSignerIfPossible) {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible);\n}\nexport function useMulticallContract() {\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false);\n}\nexport function useStakingContract(stakingAddress, withSignerIfPossible) {\n  return useContract(stakingAddress, STAKING_REWARDS_ABI, withSignerIfPossible);\n}","map":{"version":3,"names":["abi","STAKING_REWARDS_ABI","ChainId","WETH","IUniswapV2PairABI","useMemo","ARGENT_WALLET_DETECTOR_ABI","ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS","ENS_PUBLIC_RESOLVER_ABI","ENS_ABI","ERC20_BYTES32_ABI","ERC20_ABI","WETH_ABI","MULTICALL_ABI","MULTICALL_NETWORKS","getContract","useActiveWeb3React","useContract","address","ABI","withSignerIfPossible","library","account","undefined","error","console","useTokenContract","tokenAddress","useWETHContract","chainId","useArgentWalletDetectorContract","MAINNET","useENSRegistrarContract","GÖRLI","ROPSTEN","RINKEBY","useENSResolverContract","useBytes32TokenContract","usePairContract","pairAddress","useMulticallContract","useStakingContract","stakingAddress"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/hooks/useContract.ts"],"sourcesContent":["import { Contract } from '@ethersproject/contracts';\nimport { abi as STAKING_REWARDS_ABI } from '@uniswap/liquidity-staker/build/StakingRewards.json';\nimport { ChainId, WETH } from '@uniswap/sdk';\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { useMemo } from 'react';\nimport {\n  ARGENT_WALLET_DETECTOR_ABI,\n  ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS,\n} from '../constants/abis/argent-wallet-detector';\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json';\nimport ENS_ABI from '../constants/abis/ens-registrar.json';\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20';\nimport ERC20_ABI from '../constants/abis/erc20.json';\nimport WETH_ABI from '../constants/abis/weth.json';\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall';\nimport { getContract } from '../utils';\nimport { useActiveWeb3React } from './index';\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React();\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null;\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [address, ABI, library, withSignerIfPossible, account]);\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible);\n}\n\nexport function useArgentWalletDetectorContract(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(\n    chainId === ChainId.MAINNET ? ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS : undefined,\n    ARGENT_WALLET_DETECTOR_ABI,\n    false\n  );\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  let address: string | undefined;\n  if (chainId) {\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.GÖRLI:\n      case ChainId.ROPSTEN:\n      case ChainId.RINKEBY:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e';\n        break;\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible);\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible);\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React();\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false);\n}\n\nexport function useStakingContract(stakingAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(stakingAddress, STAKING_REWARDS_ABI, withSignerIfPossible);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}