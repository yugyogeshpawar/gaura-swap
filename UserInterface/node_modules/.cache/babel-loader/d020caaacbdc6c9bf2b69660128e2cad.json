{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport { useActiveWeb3React } from '../../hooks';\nimport useDebounce from '../../hooks/useDebounce';\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible';\nimport { updateBlockNumber } from './actions';\nimport { useDispatch } from 'react-redux';\nexport default function Updater() {\n  const {\n    library,\n    chainId\n  } = useActiveWeb3React();\n  const dispatch = useDispatch();\n  const windowVisible = useIsWindowVisible();\n  const [state, setState] = useState({\n    chainId,\n    blockNumber: null\n  });\n  const blockNumberCallback = useCallback(blockNumber => {\n    setState(state => {\n      if (chainId === state.chainId) {\n        if (typeof state.blockNumber !== 'number') return {\n          chainId,\n          blockNumber\n        };\n        return {\n          chainId,\n          blockNumber: Math.max(blockNumber, state.blockNumber)\n        };\n      }\n\n      return state;\n    });\n  }, [chainId, setState]); // attach/detach listeners\n\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined;\n    setState({\n      chainId,\n      blockNumber: null\n    });\n    library.getBlockNumber().then(blockNumberCallback).catch(error => console.error(`Failed to get block number for chainId: ${chainId}`, error));\n    library.on('block', blockNumberCallback);\n    return () => {\n      library.removeListener('block', blockNumberCallback);\n    };\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible]);\n  const debouncedState = useDebounce(state, 100);\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return;\n    dispatch(updateBlockNumber({\n      chainId: debouncedState.chainId,\n      blockNumber: debouncedState.blockNumber\n    }));\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId]);\n  return null;\n}","map":{"version":3,"names":["useCallback","useEffect","useState","useActiveWeb3React","useDebounce","useIsWindowVisible","updateBlockNumber","useDispatch","Updater","library","chainId","dispatch","windowVisible","state","setState","blockNumber","blockNumberCallback","Math","max","undefined","getBlockNumber","then","catch","error","console","on","removeListener","debouncedState"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/state/application/updater.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useActiveWeb3React } from '../../hooks';\nimport useDebounce from '../../hooks/useDebounce';\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible';\nimport { updateBlockNumber } from './actions';\nimport { useDispatch } from 'react-redux';\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React();\n  const dispatch = useDispatch();\n\n  const windowVisible = useIsWindowVisible();\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  });\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((state) => {\n        if (chainId === state.chainId) {\n          if (typeof state.blockNumber !== 'number') return { chainId, blockNumber };\n          return { chainId, blockNumber: Math.max(blockNumber, state.blockNumber) };\n        }\n        return state;\n      });\n    },\n    [chainId, setState]\n  );\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined;\n\n    setState({ chainId, blockNumber: null });\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error));\n\n    library.on('block', blockNumberCallback);\n    return () => {\n      library.removeListener('block', blockNumberCallback);\n    };\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible]);\n\n  const debouncedState = useDebounce(state, 100);\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return;\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }));\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId]);\n\n  return null;\n}\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,eAAe,SAASC,OAAT,GAAyB;EACtC,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAAuBP,kBAAkB,EAA/C;EACA,MAAMQ,QAAQ,GAAGJ,WAAW,EAA5B;EAEA,MAAMK,aAAa,GAAGP,kBAAkB,EAAxC;EAEA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAA8D;IAC9FQ,OAD8F;IAE9FK,WAAW,EAAE;EAFiF,CAA9D,CAAlC;EAKA,MAAMC,mBAAmB,GAAGhB,WAAW,CACpCe,WAAD,IAAyB;IACvBD,QAAQ,CAAED,KAAD,IAAW;MAClB,IAAIH,OAAO,KAAKG,KAAK,CAACH,OAAtB,EAA+B;QAC7B,IAAI,OAAOG,KAAK,CAACE,WAAb,KAA6B,QAAjC,EAA2C,OAAO;UAAEL,OAAF;UAAWK;QAAX,CAAP;QAC3C,OAAO;UAAEL,OAAF;UAAWK,WAAW,EAAEE,IAAI,CAACC,GAAL,CAASH,WAAT,EAAsBF,KAAK,CAACE,WAA5B;QAAxB,CAAP;MACD;;MACD,OAAOF,KAAP;IACD,CANO,CAAR;EAOD,CAToC,EAUrC,CAACH,OAAD,EAAUI,QAAV,CAVqC,CAAvC,CAXsC,CAwBtC;;EACAb,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,OAAD,IAAY,CAACC,OAAb,IAAwB,CAACE,aAA7B,EAA4C,OAAOO,SAAP;IAE5CL,QAAQ,CAAC;MAAEJ,OAAF;MAAWK,WAAW,EAAE;IAAxB,CAAD,CAAR;IAEAN,OAAO,CACJW,cADH,GAEGC,IAFH,CAEQL,mBAFR,EAGGM,KAHH,CAGUC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAe,2CAA0Cb,OAAQ,EAAjE,EAAoEa,KAApE,CAHpB;IAKAd,OAAO,CAACgB,EAAR,CAAW,OAAX,EAAoBT,mBAApB;IACA,OAAO,MAAM;MACXP,OAAO,CAACiB,cAAR,CAAuB,OAAvB,EAAgCV,mBAAhC;IACD,CAFD;EAGD,CAdQ,EAcN,CAACL,QAAD,EAAWD,OAAX,EAAoBD,OAApB,EAA6BO,mBAA7B,EAAkDJ,aAAlD,CAdM,CAAT;EAgBA,MAAMe,cAAc,GAAGvB,WAAW,CAACS,KAAD,EAAQ,GAAR,CAAlC;EAEAZ,SAAS,CAAC,MAAM;IACd,IAAI,CAAC0B,cAAc,CAACjB,OAAhB,IAA2B,CAACiB,cAAc,CAACZ,WAA3C,IAA0D,CAACH,aAA/D,EAA8E;IAC9ED,QAAQ,CAACL,iBAAiB,CAAC;MAAEI,OAAO,EAAEiB,cAAc,CAACjB,OAA1B;MAAmCK,WAAW,EAAEY,cAAc,CAACZ;IAA/D,CAAD,CAAlB,CAAR;EACD,CAHQ,EAGN,CAACH,aAAD,EAAgBD,QAAhB,EAA0BgB,cAAc,CAACZ,WAAzC,EAAsDY,cAAc,CAACjB,OAArE,CAHM,CAAT;EAKA,OAAO,IAAP;AACD"},"metadata":{},"sourceType":"module"}