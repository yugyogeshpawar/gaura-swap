{"ast":null,"code":"import _defineProperty from\"/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _process$env$REACT_AP;import{Web3Provider}from'@ethersproject/providers';import{InjectedConnector}from'@web3-react/injected-connector';import{WalletConnectConnector}from'@web3-react/walletconnect-connector';import{WalletLinkConnector}from'@web3-react/walletlink-connector';// import { PortisConnector } from '@web3-react/portis-connector';\n// import { FortmaticConnector } from './Fortmatic';\nimport{NetworkConnector}from'./NetworkConnector';var REACT_APP_NETWORK_URL=process.env.REACT_APP_NETWORK_URL;// const FORMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY\n// const PORTIS_ID = process.env.REACT_APP_PORTIS_ID\nexport var NETWORK_CHAIN_ID=parseInt((_process$env$REACT_AP=process.env.REACT_APP_CHAIN_ID)!==null&&_process$env$REACT_AP!==void 0?_process$env$REACT_AP:'33982');if(typeof REACT_APP_NETWORK_URL==='undefined'){throw new Error(\"REACT_APP_NETWORK_URL must be a defined environment variable\");}export var network=new NetworkConnector({urls:_defineProperty({},NETWORK_CHAIN_ID,REACT_APP_NETWORK_URL)});var networkLibrary;export function getNetworkLibrary(){var _networkLibrary;return networkLibrary=(_networkLibrary=networkLibrary)!==null&&_networkLibrary!==void 0?_networkLibrary:new Web3Provider(network.provider);}export var injected=new InjectedConnector({supportedChainIds:[1,4,33982]});// mainnet only\nexport var walletconnect=new WalletConnectConnector({rpc:{1:REACT_APP_NETWORK_URL},bridge:'https://bridge.walletconnect.org',qrcode:true,pollingInterval:15000});// mainnet only\n// export const fortmatic = new FortmaticConnector({\n//   apiKey: FORMATIC_KEY ?? '',\n//   chainId: 1\n// })\n// mainnet only\n// export const portis = new PortisConnector({\n//   dAppId: PORTIS_ID ?? '',\n//   networks: [1]\n// })\n// mainnet only\nexport var walletlink=new WalletLinkConnector({url:REACT_APP_NETWORK_URL,appName:'Swap'// appLogoUrl: '',\n});","map":{"version":3,"names":["Web3Provider","InjectedConnector","WalletConnectConnector","WalletLinkConnector","NetworkConnector","REACT_APP_NETWORK_URL","process","env","NETWORK_CHAIN_ID","parseInt","REACT_APP_CHAIN_ID","Error","network","urls","networkLibrary","getNetworkLibrary","provider","injected","supportedChainIds","walletconnect","rpc","bridge","qrcode","pollingInterval","walletlink","url","appName"],"sources":["/Users/vaibhav/Desktop/Home/Blockchain Boutique/Uniswap_forked_gaura/src/connectors/index.ts"],"sourcesContent":["import { Web3Provider } from '@ethersproject/providers';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector';\n// import { PortisConnector } from '@web3-react/portis-connector';\n// import { FortmaticConnector } from './Fortmatic';\nimport { NetworkConnector } from './NetworkConnector';\n\nconst REACT_APP_NETWORK_URL = process.env.REACT_APP_NETWORK_URL;\n// const FORMATIC_KEY = process.env.REACT_APP_FORTMATIC_KEY\n// const PORTIS_ID = process.env.REACT_APP_PORTIS_ID\n\nexport const NETWORK_CHAIN_ID: number = parseInt(process.env.REACT_APP_CHAIN_ID ?? '33982');\n\nif (typeof REACT_APP_NETWORK_URL === 'undefined') {\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`);\n}\n\nexport const network = new NetworkConnector({\n  urls: { [NETWORK_CHAIN_ID]: REACT_APP_NETWORK_URL },\n});\n\nlet networkLibrary: Web3Provider | undefined;\nexport function getNetworkLibrary(): Web3Provider {\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any));\n}\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 4, 33982],\n});\n\n// mainnet only\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 1: REACT_APP_NETWORK_URL },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: 15000,\n});\n\n// mainnet only\n// export const fortmatic = new FortmaticConnector({\n//   apiKey: FORMATIC_KEY ?? '',\n//   chainId: 1\n// })\n\n// mainnet only\n// export const portis = new PortisConnector({\n//   dAppId: PORTIS_ID ?? '',\n//   networks: [1]\n// })\n\n// mainnet only\nexport const walletlink = new WalletLinkConnector({\n  url: REACT_APP_NETWORK_URL,\n  appName: 'Swap',\n  // appLogoUrl: '',\n});\n"],"mappings":"uNAAA,OAASA,YAAT,KAA6B,0BAA7B,CACA,OAASC,iBAAT,KAAkC,gCAAlC,CACA,OAASC,sBAAT,KAAuC,qCAAvC,CACA,OAASC,mBAAT,KAAoC,kCAApC,CACA;AACA;AACA,OAASC,gBAAT,KAAiC,oBAAjC,CAEA,GAAMC,sBAAqB,CAAGC,OAAO,CAACC,GAAR,CAAYF,qBAA1C,CACA;AACA;AAEA,MAAO,IAAMG,iBAAwB,CAAGC,QAAQ,wBAACH,OAAO,CAACC,GAAR,CAAYG,kBAAb,+DAAmC,OAAnC,CAAzC,CAEP,GAAI,MAAOL,sBAAP,GAAiC,WAArC,CAAkD,CAChD,KAAM,IAAIM,MAAJ,gEAAN,CACD,CAED,MAAO,IAAMC,QAAO,CAAG,GAAIR,iBAAJ,CAAqB,CAC1CS,IAAI,oBAAKL,gBAAL,CAAwBH,qBAAxB,CADsC,CAArB,CAAhB,CAIP,GAAIS,eAAJ,CACA,MAAO,SAASC,kBAAT,EAA2C,qBAChD,MAAQD,eAAc,kBAAGA,cAAH,mDAAqB,GAAId,aAAJ,CAAiBY,OAAO,CAACI,QAAzB,CAA3C,CACD,CAED,MAAO,IAAMC,SAAQ,CAAG,GAAIhB,kBAAJ,CAAsB,CAC5CiB,iBAAiB,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAO,KAAP,CADyB,CAAtB,CAAjB,CAIP;AACA,MAAO,IAAMC,cAAa,CAAG,GAAIjB,uBAAJ,CAA2B,CACtDkB,GAAG,CAAE,CAAE,EAAGf,qBAAL,CADiD,CAEtDgB,MAAM,CAAE,kCAF8C,CAGtDC,MAAM,CAAE,IAH8C,CAItDC,eAAe,CAAE,KAJqC,CAA3B,CAAtB,CAOP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAO,IAAMC,WAAU,CAAG,GAAIrB,oBAAJ,CAAwB,CAChDsB,GAAG,CAAEpB,qBAD2C,CAEhDqB,OAAO,CAAE,MACT;AAHgD,CAAxB,CAAnB"},"metadata":{},"sourceType":"module"}